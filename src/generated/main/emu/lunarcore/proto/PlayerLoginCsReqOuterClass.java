// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.Utf8String;

public final class PlayerLoginCsReqOuterClass {
  /**
   * Protobuf type {@code PlayerLoginCsReq}
   */
  public static final class PlayerLoginCsReq extends ProtoMessage<PlayerLoginCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint64 login_random = 7;</code>
     */
    private long loginRandom;

    /**
     * <code>optional uint32 client_res_version = 8;</code>
     */
    private int clientResVersion;

    /**
     * <code>optional uint32 NMDMJEFOPKB = 12;</code>
     */
    private int nMDMJEFOPKB;

    /**
     * <code>optional uint32 BINLGCOBEPO = 590;</code>
     */
    private int bINLGCOBEPO;

    /**
     * <code>optional uint32 ACMBPIIJKFL = 1405;</code>
     */
    private int aCMBPIIJKFL;

    /**
     * <code>optional .PlatformType platform_type = 13;</code>
     */
    private int platformType;

    /**
     * <code>optional .LanguageType language = 15;</code>
     */
    private int language;

    /**
     * <code>optional bool GLNBFFILPNA = 424;</code>
     */
    private boolean gLNBFFILPNA;

    /**
     * <code>optional bool JJDBFAMDEPP = 1467;</code>
     */
    private boolean jJDBFAMDEPP;

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     */
    private final Utf8String iIAHICGOMKP = Utf8String.newEmptyInstance();

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     */
    private final Utf8String aIEONDBHNDC = Utf8String.newEmptyInstance();

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     */
    private final Utf8String fLJNOLCHBBC = Utf8String.newEmptyInstance();

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     */
    private final Utf8String oPNLMMDFFLL = Utf8String.newEmptyInstance();

    /**
     * <code>optional string rogue_info_data = 5;</code>
     */
    private final Utf8String rogueInfoData = Utf8String.newEmptyInstance();

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     */
    private final Utf8String cEKOLCPLBED = Utf8String.newEmptyInstance();

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     */
    private final Utf8String oPNBNKJAIKD = Utf8String.newEmptyInstance();

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     */
    private final Utf8String eIFPHAMMIEG = Utf8String.newEmptyInstance();

    /**
     * <code>optional string signature = 11;</code>
     */
    private final Utf8String signature = Utf8String.newEmptyInstance();

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     */
    private final Utf8String hDPJMCHLGCM = Utf8String.newEmptyInstance();

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     */
    private final Utf8String bMCBOCGEKBF = Utf8String.newEmptyInstance();

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     */
    private final Utf8String fKFJDGCNDII = Utf8String.newEmptyInstance();

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     */
    private final Utf8String mJAJBCHKDFP = Utf8String.newEmptyInstance();

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     */
    private final Utf8String fLFKCIHCENF = Utf8String.newEmptyInstance();

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     */
    private final Utf8String kOGIIKIEJIJ = Utf8String.newEmptyInstance();

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     */
    private final Utf8String hFHGPLMEFGJ = Utf8String.newEmptyInstance();

    private PlayerLoginCsReq() {
    }

    /**
     * @return a new empty instance of {@code PlayerLoginCsReq}
     */
    public static PlayerLoginCsReq newInstance() {
      return new PlayerLoginCsReq();
    }

    /**
     * <code>optional uint64 login_random = 7;</code>
     * @return whether the loginRandom field is set
     */
    public boolean hasLoginRandom() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint64 login_random = 7;</code>
     * @return this
     */
    public PlayerLoginCsReq clearLoginRandom() {
      bitField0_ &= ~0x00000001;
      loginRandom = 0L;
      return this;
    }

    /**
     * <code>optional uint64 login_random = 7;</code>
     * @return the loginRandom
     */
    public long getLoginRandom() {
      return loginRandom;
    }

    /**
     * <code>optional uint64 login_random = 7;</code>
     * @param value the loginRandom to set
     * @return this
     */
    public PlayerLoginCsReq setLoginRandom(final long value) {
      bitField0_ |= 0x00000001;
      loginRandom = value;
      return this;
    }

    /**
     * <code>optional uint32 client_res_version = 8;</code>
     * @return whether the clientResVersion field is set
     */
    public boolean hasClientResVersion() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 client_res_version = 8;</code>
     * @return this
     */
    public PlayerLoginCsReq clearClientResVersion() {
      bitField0_ &= ~0x00000002;
      clientResVersion = 0;
      return this;
    }

    /**
     * <code>optional uint32 client_res_version = 8;</code>
     * @return the clientResVersion
     */
    public int getClientResVersion() {
      return clientResVersion;
    }

    /**
     * <code>optional uint32 client_res_version = 8;</code>
     * @param value the clientResVersion to set
     * @return this
     */
    public PlayerLoginCsReq setClientResVersion(final int value) {
      bitField0_ |= 0x00000002;
      clientResVersion = value;
      return this;
    }

    /**
     * <code>optional uint32 NMDMJEFOPKB = 12;</code>
     * @return whether the nMDMJEFOPKB field is set
     */
    public boolean hasNMDMJEFOPKB() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 NMDMJEFOPKB = 12;</code>
     * @return this
     */
    public PlayerLoginCsReq clearNMDMJEFOPKB() {
      bitField0_ &= ~0x00000004;
      nMDMJEFOPKB = 0;
      return this;
    }

    /**
     * <code>optional uint32 NMDMJEFOPKB = 12;</code>
     * @return the nMDMJEFOPKB
     */
    public int getNMDMJEFOPKB() {
      return nMDMJEFOPKB;
    }

    /**
     * <code>optional uint32 NMDMJEFOPKB = 12;</code>
     * @param value the nMDMJEFOPKB to set
     * @return this
     */
    public PlayerLoginCsReq setNMDMJEFOPKB(final int value) {
      bitField0_ |= 0x00000004;
      nMDMJEFOPKB = value;
      return this;
    }

    /**
     * <code>optional uint32 BINLGCOBEPO = 590;</code>
     * @return whether the bINLGCOBEPO field is set
     */
    public boolean hasBINLGCOBEPO() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 BINLGCOBEPO = 590;</code>
     * @return this
     */
    public PlayerLoginCsReq clearBINLGCOBEPO() {
      bitField0_ &= ~0x00000008;
      bINLGCOBEPO = 0;
      return this;
    }

    /**
     * <code>optional uint32 BINLGCOBEPO = 590;</code>
     * @return the bINLGCOBEPO
     */
    public int getBINLGCOBEPO() {
      return bINLGCOBEPO;
    }

    /**
     * <code>optional uint32 BINLGCOBEPO = 590;</code>
     * @param value the bINLGCOBEPO to set
     * @return this
     */
    public PlayerLoginCsReq setBINLGCOBEPO(final int value) {
      bitField0_ |= 0x00000008;
      bINLGCOBEPO = value;
      return this;
    }

    /**
     * <code>optional uint32 ACMBPIIJKFL = 1405;</code>
     * @return whether the aCMBPIIJKFL field is set
     */
    public boolean hasACMBPIIJKFL() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 ACMBPIIJKFL = 1405;</code>
     * @return this
     */
    public PlayerLoginCsReq clearACMBPIIJKFL() {
      bitField0_ &= ~0x00000010;
      aCMBPIIJKFL = 0;
      return this;
    }

    /**
     * <code>optional uint32 ACMBPIIJKFL = 1405;</code>
     * @return the aCMBPIIJKFL
     */
    public int getACMBPIIJKFL() {
      return aCMBPIIJKFL;
    }

    /**
     * <code>optional uint32 ACMBPIIJKFL = 1405;</code>
     * @param value the aCMBPIIJKFL to set
     * @return this
     */
    public PlayerLoginCsReq setACMBPIIJKFL(final int value) {
      bitField0_ |= 0x00000010;
      aCMBPIIJKFL = value;
      return this;
    }

    /**
     * <code>optional .PlatformType platform_type = 13;</code>
     * @return whether the platformType field is set
     */
    public boolean hasPlatformType() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional .PlatformType platform_type = 13;</code>
     * @return this
     */
    public PlayerLoginCsReq clearPlatformType() {
      bitField0_ &= ~0x00000020;
      platformType = 0;
      return this;
    }

    /**
     * <code>optional .PlatformType platform_type = 13;</code>
     * @return the platformType
     */
    public PlatformTypeOuterClass.PlatformType getPlatformType() {
      return PlatformTypeOuterClass.PlatformType.forNumber(platformType);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerLoginCsReq#getPlatformType()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getPlatformTypeValue() {
      return platformType;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link PlatformTypeOuterClass.PlatformType}. Setting an invalid value
     * can cause {@link PlayerLoginCsReq#getPlatformType()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerLoginCsReq setPlatformTypeValue(final int value) {
      bitField0_ |= 0x00000020;
      platformType = value;
      return this;
    }

    /**
     * <code>optional .PlatformType platform_type = 13;</code>
     * @param value the platformType to set
     * @return this
     */
    public PlayerLoginCsReq setPlatformType(final PlatformTypeOuterClass.PlatformType value) {
      bitField0_ |= 0x00000020;
      platformType = value.getNumber();
      return this;
    }

    /**
     * <code>optional .LanguageType language = 15;</code>
     * @return whether the language field is set
     */
    public boolean hasLanguage() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional .LanguageType language = 15;</code>
     * @return this
     */
    public PlayerLoginCsReq clearLanguage() {
      bitField0_ &= ~0x00000040;
      language = 0;
      return this;
    }

    /**
     * <code>optional .LanguageType language = 15;</code>
     * @return the language
     */
    public LanguageTypeOuterClass.LanguageType getLanguage() {
      return LanguageTypeOuterClass.LanguageType.forNumber(language);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerLoginCsReq#getLanguage()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getLanguageValue() {
      return language;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link LanguageTypeOuterClass.LanguageType}. Setting an invalid value
     * can cause {@link PlayerLoginCsReq#getLanguage()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerLoginCsReq setLanguageValue(final int value) {
      bitField0_ |= 0x00000040;
      language = value;
      return this;
    }

    /**
     * <code>optional .LanguageType language = 15;</code>
     * @param value the language to set
     * @return this
     */
    public PlayerLoginCsReq setLanguage(final LanguageTypeOuterClass.LanguageType value) {
      bitField0_ |= 0x00000040;
      language = value.getNumber();
      return this;
    }

    /**
     * <code>optional bool GLNBFFILPNA = 424;</code>
     * @return whether the gLNBFFILPNA field is set
     */
    public boolean hasGLNBFFILPNA() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional bool GLNBFFILPNA = 424;</code>
     * @return this
     */
    public PlayerLoginCsReq clearGLNBFFILPNA() {
      bitField0_ &= ~0x00000080;
      gLNBFFILPNA = false;
      return this;
    }

    /**
     * <code>optional bool GLNBFFILPNA = 424;</code>
     * @return the gLNBFFILPNA
     */
    public boolean getGLNBFFILPNA() {
      return gLNBFFILPNA;
    }

    /**
     * <code>optional bool GLNBFFILPNA = 424;</code>
     * @param value the gLNBFFILPNA to set
     * @return this
     */
    public PlayerLoginCsReq setGLNBFFILPNA(final boolean value) {
      bitField0_ |= 0x00000080;
      gLNBFFILPNA = value;
      return this;
    }

    /**
     * <code>optional bool JJDBFAMDEPP = 1467;</code>
     * @return whether the jJDBFAMDEPP field is set
     */
    public boolean hasJJDBFAMDEPP() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional bool JJDBFAMDEPP = 1467;</code>
     * @return this
     */
    public PlayerLoginCsReq clearJJDBFAMDEPP() {
      bitField0_ &= ~0x00000100;
      jJDBFAMDEPP = false;
      return this;
    }

    /**
     * <code>optional bool JJDBFAMDEPP = 1467;</code>
     * @return the jJDBFAMDEPP
     */
    public boolean getJJDBFAMDEPP() {
      return jJDBFAMDEPP;
    }

    /**
     * <code>optional bool JJDBFAMDEPP = 1467;</code>
     * @param value the jJDBFAMDEPP to set
     * @return this
     */
    public PlayerLoginCsReq setJJDBFAMDEPP(final boolean value) {
      bitField0_ |= 0x00000100;
      jJDBFAMDEPP = value;
      return this;
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @return whether the iIAHICGOMKP field is set
     */
    public boolean hasIIAHICGOMKP() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @return this
     */
    public PlayerLoginCsReq clearIIAHICGOMKP() {
      bitField0_ &= ~0x00000200;
      iIAHICGOMKP.clear();
      return this;
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @return the iIAHICGOMKP
     */
    public String getIIAHICGOMKP() {
      return iIAHICGOMKP.getString();
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @return internal {@code Utf8String} representation of iIAHICGOMKP for reading
     */
    public Utf8String getIIAHICGOMKPBytes() {
      return this.iIAHICGOMKP;
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @return internal {@code Utf8String} representation of iIAHICGOMKP for modifications
     */
    public Utf8String getMutableIIAHICGOMKPBytes() {
      bitField0_ |= 0x00000200;
      return this.iIAHICGOMKP;
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @param value the iIAHICGOMKP to set
     * @return this
     */
    public PlayerLoginCsReq setIIAHICGOMKP(final CharSequence value) {
      bitField0_ |= 0x00000200;
      iIAHICGOMKP.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string IIAHICGOMKP = 1;</code>
     * @param value the iIAHICGOMKP to set
     * @return this
     */
    public PlayerLoginCsReq setIIAHICGOMKP(final Utf8String value) {
      bitField0_ |= 0x00000200;
      iIAHICGOMKP.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @return whether the aIEONDBHNDC field is set
     */
    public boolean hasAIEONDBHNDC() {
      return (bitField0_ & 0x00000400) != 0;
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @return this
     */
    public PlayerLoginCsReq clearAIEONDBHNDC() {
      bitField0_ &= ~0x00000400;
      aIEONDBHNDC.clear();
      return this;
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @return the aIEONDBHNDC
     */
    public String getAIEONDBHNDC() {
      return aIEONDBHNDC.getString();
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @return internal {@code Utf8String} representation of aIEONDBHNDC for reading
     */
    public Utf8String getAIEONDBHNDCBytes() {
      return this.aIEONDBHNDC;
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @return internal {@code Utf8String} representation of aIEONDBHNDC for modifications
     */
    public Utf8String getMutableAIEONDBHNDCBytes() {
      bitField0_ |= 0x00000400;
      return this.aIEONDBHNDC;
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @param value the aIEONDBHNDC to set
     * @return this
     */
    public PlayerLoginCsReq setAIEONDBHNDC(final CharSequence value) {
      bitField0_ |= 0x00000400;
      aIEONDBHNDC.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string AIEONDBHNDC = 2;</code>
     * @param value the aIEONDBHNDC to set
     * @return this
     */
    public PlayerLoginCsReq setAIEONDBHNDC(final Utf8String value) {
      bitField0_ |= 0x00000400;
      aIEONDBHNDC.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @return whether the fLJNOLCHBBC field is set
     */
    public boolean hasFLJNOLCHBBC() {
      return (bitField0_ & 0x00000800) != 0;
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @return this
     */
    public PlayerLoginCsReq clearFLJNOLCHBBC() {
      bitField0_ &= ~0x00000800;
      fLJNOLCHBBC.clear();
      return this;
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @return the fLJNOLCHBBC
     */
    public String getFLJNOLCHBBC() {
      return fLJNOLCHBBC.getString();
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @return internal {@code Utf8String} representation of fLJNOLCHBBC for reading
     */
    public Utf8String getFLJNOLCHBBCBytes() {
      return this.fLJNOLCHBBC;
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @return internal {@code Utf8String} representation of fLJNOLCHBBC for modifications
     */
    public Utf8String getMutableFLJNOLCHBBCBytes() {
      bitField0_ |= 0x00000800;
      return this.fLJNOLCHBBC;
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @param value the fLJNOLCHBBC to set
     * @return this
     */
    public PlayerLoginCsReq setFLJNOLCHBBC(final CharSequence value) {
      bitField0_ |= 0x00000800;
      fLJNOLCHBBC.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FLJNOLCHBBC = 3;</code>
     * @param value the fLJNOLCHBBC to set
     * @return this
     */
    public PlayerLoginCsReq setFLJNOLCHBBC(final Utf8String value) {
      bitField0_ |= 0x00000800;
      fLJNOLCHBBC.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @return whether the oPNLMMDFFLL field is set
     */
    public boolean hasOPNLMMDFFLL() {
      return (bitField0_ & 0x00001000) != 0;
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @return this
     */
    public PlayerLoginCsReq clearOPNLMMDFFLL() {
      bitField0_ &= ~0x00001000;
      oPNLMMDFFLL.clear();
      return this;
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @return the oPNLMMDFFLL
     */
    public String getOPNLMMDFFLL() {
      return oPNLMMDFFLL.getString();
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @return internal {@code Utf8String} representation of oPNLMMDFFLL for reading
     */
    public Utf8String getOPNLMMDFFLLBytes() {
      return this.oPNLMMDFFLL;
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @return internal {@code Utf8String} representation of oPNLMMDFFLL for modifications
     */
    public Utf8String getMutableOPNLMMDFFLLBytes() {
      bitField0_ |= 0x00001000;
      return this.oPNLMMDFFLL;
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @param value the oPNLMMDFFLL to set
     * @return this
     */
    public PlayerLoginCsReq setOPNLMMDFFLL(final CharSequence value) {
      bitField0_ |= 0x00001000;
      oPNLMMDFFLL.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string OPNLMMDFFLL = 4;</code>
     * @param value the oPNLMMDFFLL to set
     * @return this
     */
    public PlayerLoginCsReq setOPNLMMDFFLL(final Utf8String value) {
      bitField0_ |= 0x00001000;
      oPNLMMDFFLL.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @return whether the rogueInfoData field is set
     */
    public boolean hasRogueInfoData() {
      return (bitField0_ & 0x00002000) != 0;
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @return this
     */
    public PlayerLoginCsReq clearRogueInfoData() {
      bitField0_ &= ~0x00002000;
      rogueInfoData.clear();
      return this;
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @return the rogueInfoData
     */
    public String getRogueInfoData() {
      return rogueInfoData.getString();
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @return internal {@code Utf8String} representation of rogueInfoData for reading
     */
    public Utf8String getRogueInfoDataBytes() {
      return this.rogueInfoData;
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @return internal {@code Utf8String} representation of rogueInfoData for modifications
     */
    public Utf8String getMutableRogueInfoDataBytes() {
      bitField0_ |= 0x00002000;
      return this.rogueInfoData;
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @param value the rogueInfoData to set
     * @return this
     */
    public PlayerLoginCsReq setRogueInfoData(final CharSequence value) {
      bitField0_ |= 0x00002000;
      rogueInfoData.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string rogue_info_data = 5;</code>
     * @param value the rogueInfoData to set
     * @return this
     */
    public PlayerLoginCsReq setRogueInfoData(final Utf8String value) {
      bitField0_ |= 0x00002000;
      rogueInfoData.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @return whether the cEKOLCPLBED field is set
     */
    public boolean hasCEKOLCPLBED() {
      return (bitField0_ & 0x00004000) != 0;
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @return this
     */
    public PlayerLoginCsReq clearCEKOLCPLBED() {
      bitField0_ &= ~0x00004000;
      cEKOLCPLBED.clear();
      return this;
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @return the cEKOLCPLBED
     */
    public String getCEKOLCPLBED() {
      return cEKOLCPLBED.getString();
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @return internal {@code Utf8String} representation of cEKOLCPLBED for reading
     */
    public Utf8String getCEKOLCPLBEDBytes() {
      return this.cEKOLCPLBED;
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @return internal {@code Utf8String} representation of cEKOLCPLBED for modifications
     */
    public Utf8String getMutableCEKOLCPLBEDBytes() {
      bitField0_ |= 0x00004000;
      return this.cEKOLCPLBED;
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @param value the cEKOLCPLBED to set
     * @return this
     */
    public PlayerLoginCsReq setCEKOLCPLBED(final CharSequence value) {
      bitField0_ |= 0x00004000;
      cEKOLCPLBED.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string CEKOLCPLBED = 6;</code>
     * @param value the cEKOLCPLBED to set
     * @return this
     */
    public PlayerLoginCsReq setCEKOLCPLBED(final Utf8String value) {
      bitField0_ |= 0x00004000;
      cEKOLCPLBED.copyFrom(value);
      return this;
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @return whether the oPNBNKJAIKD field is set
     */
    public boolean hasOPNBNKJAIKD() {
      return (bitField0_ & 0x00008000) != 0;
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @return this
     */
    public PlayerLoginCsReq clearOPNBNKJAIKD() {
      bitField0_ &= ~0x00008000;
      oPNBNKJAIKD.clear();
      return this;
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @return the oPNBNKJAIKD
     */
    public String getOPNBNKJAIKD() {
      return oPNBNKJAIKD.getString();
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @return internal {@code Utf8String} representation of oPNBNKJAIKD for reading
     */
    public Utf8String getOPNBNKJAIKDBytes() {
      return this.oPNBNKJAIKD;
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @return internal {@code Utf8String} representation of oPNBNKJAIKD for modifications
     */
    public Utf8String getMutableOPNBNKJAIKDBytes() {
      bitField0_ |= 0x00008000;
      return this.oPNBNKJAIKD;
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @param value the oPNBNKJAIKD to set
     * @return this
     */
    public PlayerLoginCsReq setOPNBNKJAIKD(final CharSequence value) {
      bitField0_ |= 0x00008000;
      oPNBNKJAIKD.copyFrom(value);
      return this;
    }

    /**
     * <pre>
     * ExtraDeviceInfo OGKGOLNAICH = 1285;
     * </pre>
     *
     * <code>optional string OPNBNKJAIKD = 9;</code>
     * @param value the oPNBNKJAIKD to set
     * @return this
     */
    public PlayerLoginCsReq setOPNBNKJAIKD(final Utf8String value) {
      bitField0_ |= 0x00008000;
      oPNBNKJAIKD.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @return whether the eIFPHAMMIEG field is set
     */
    public boolean hasEIFPHAMMIEG() {
      return (bitField0_ & 0x00010000) != 0;
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @return this
     */
    public PlayerLoginCsReq clearEIFPHAMMIEG() {
      bitField0_ &= ~0x00010000;
      eIFPHAMMIEG.clear();
      return this;
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @return the eIFPHAMMIEG
     */
    public String getEIFPHAMMIEG() {
      return eIFPHAMMIEG.getString();
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @return internal {@code Utf8String} representation of eIFPHAMMIEG for reading
     */
    public Utf8String getEIFPHAMMIEGBytes() {
      return this.eIFPHAMMIEG;
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @return internal {@code Utf8String} representation of eIFPHAMMIEG for modifications
     */
    public Utf8String getMutableEIFPHAMMIEGBytes() {
      bitField0_ |= 0x00010000;
      return this.eIFPHAMMIEG;
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @param value the eIFPHAMMIEG to set
     * @return this
     */
    public PlayerLoginCsReq setEIFPHAMMIEG(final CharSequence value) {
      bitField0_ |= 0x00010000;
      eIFPHAMMIEG.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string EIFPHAMMIEG = 10;</code>
     * @param value the eIFPHAMMIEG to set
     * @return this
     */
    public PlayerLoginCsReq setEIFPHAMMIEG(final Utf8String value) {
      bitField0_ |= 0x00010000;
      eIFPHAMMIEG.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return whether the signature field is set
     */
    public boolean hasSignature() {
      return (bitField0_ & 0x00020000) != 0;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return this
     */
    public PlayerLoginCsReq clearSignature() {
      bitField0_ &= ~0x00020000;
      signature.clear();
      return this;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return the signature
     */
    public String getSignature() {
      return signature.getString();
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return internal {@code Utf8String} representation of signature for reading
     */
    public Utf8String getSignatureBytes() {
      return this.signature;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @return internal {@code Utf8String} representation of signature for modifications
     */
    public Utf8String getMutableSignatureBytes() {
      bitField0_ |= 0x00020000;
      return this.signature;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @param value the signature to set
     * @return this
     */
    public PlayerLoginCsReq setSignature(final CharSequence value) {
      bitField0_ |= 0x00020000;
      signature.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string signature = 11;</code>
     * @param value the signature to set
     * @return this
     */
    public PlayerLoginCsReq setSignature(final Utf8String value) {
      bitField0_ |= 0x00020000;
      signature.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @return whether the hDPJMCHLGCM field is set
     */
    public boolean hasHDPJMCHLGCM() {
      return (bitField0_ & 0x00040000) != 0;
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @return this
     */
    public PlayerLoginCsReq clearHDPJMCHLGCM() {
      bitField0_ &= ~0x00040000;
      hDPJMCHLGCM.clear();
      return this;
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @return the hDPJMCHLGCM
     */
    public String getHDPJMCHLGCM() {
      return hDPJMCHLGCM.getString();
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @return internal {@code Utf8String} representation of hDPJMCHLGCM for reading
     */
    public Utf8String getHDPJMCHLGCMBytes() {
      return this.hDPJMCHLGCM;
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @return internal {@code Utf8String} representation of hDPJMCHLGCM for modifications
     */
    public Utf8String getMutableHDPJMCHLGCMBytes() {
      bitField0_ |= 0x00040000;
      return this.hDPJMCHLGCM;
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @param value the hDPJMCHLGCM to set
     * @return this
     */
    public PlayerLoginCsReq setHDPJMCHLGCM(final CharSequence value) {
      bitField0_ |= 0x00040000;
      hDPJMCHLGCM.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string HDPJMCHLGCM = 14;</code>
     * @param value the hDPJMCHLGCM to set
     * @return this
     */
    public PlayerLoginCsReq setHDPJMCHLGCM(final Utf8String value) {
      bitField0_ |= 0x00040000;
      hDPJMCHLGCM.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @return whether the bMCBOCGEKBF field is set
     */
    public boolean hasBMCBOCGEKBF() {
      return (bitField0_ & 0x00080000) != 0;
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @return this
     */
    public PlayerLoginCsReq clearBMCBOCGEKBF() {
      bitField0_ &= ~0x00080000;
      bMCBOCGEKBF.clear();
      return this;
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @return the bMCBOCGEKBF
     */
    public String getBMCBOCGEKBF() {
      return bMCBOCGEKBF.getString();
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @return internal {@code Utf8String} representation of bMCBOCGEKBF for reading
     */
    public Utf8String getBMCBOCGEKBFBytes() {
      return this.bMCBOCGEKBF;
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @return internal {@code Utf8String} representation of bMCBOCGEKBF for modifications
     */
    public Utf8String getMutableBMCBOCGEKBFBytes() {
      bitField0_ |= 0x00080000;
      return this.bMCBOCGEKBF;
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @param value the bMCBOCGEKBF to set
     * @return this
     */
    public PlayerLoginCsReq setBMCBOCGEKBF(final CharSequence value) {
      bitField0_ |= 0x00080000;
      bMCBOCGEKBF.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string BMCBOCGEKBF = 342;</code>
     * @param value the bMCBOCGEKBF to set
     * @return this
     */
    public PlayerLoginCsReq setBMCBOCGEKBF(final Utf8String value) {
      bitField0_ |= 0x00080000;
      bMCBOCGEKBF.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @return whether the fKFJDGCNDII field is set
     */
    public boolean hasFKFJDGCNDII() {
      return (bitField0_ & 0x00100000) != 0;
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @return this
     */
    public PlayerLoginCsReq clearFKFJDGCNDII() {
      bitField0_ &= ~0x00100000;
      fKFJDGCNDII.clear();
      return this;
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @return the fKFJDGCNDII
     */
    public String getFKFJDGCNDII() {
      return fKFJDGCNDII.getString();
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @return internal {@code Utf8String} representation of fKFJDGCNDII for reading
     */
    public Utf8String getFKFJDGCNDIIBytes() {
      return this.fKFJDGCNDII;
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @return internal {@code Utf8String} representation of fKFJDGCNDII for modifications
     */
    public Utf8String getMutableFKFJDGCNDIIBytes() {
      bitField0_ |= 0x00100000;
      return this.fKFJDGCNDII;
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @param value the fKFJDGCNDII to set
     * @return this
     */
    public PlayerLoginCsReq setFKFJDGCNDII(final CharSequence value) {
      bitField0_ |= 0x00100000;
      fKFJDGCNDII.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FKFJDGCNDII = 350;</code>
     * @param value the fKFJDGCNDII to set
     * @return this
     */
    public PlayerLoginCsReq setFKFJDGCNDII(final Utf8String value) {
      bitField0_ |= 0x00100000;
      fKFJDGCNDII.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @return whether the mJAJBCHKDFP field is set
     */
    public boolean hasMJAJBCHKDFP() {
      return (bitField0_ & 0x00200000) != 0;
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @return this
     */
    public PlayerLoginCsReq clearMJAJBCHKDFP() {
      bitField0_ &= ~0x00200000;
      mJAJBCHKDFP.clear();
      return this;
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @return the mJAJBCHKDFP
     */
    public String getMJAJBCHKDFP() {
      return mJAJBCHKDFP.getString();
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @return internal {@code Utf8String} representation of mJAJBCHKDFP for reading
     */
    public Utf8String getMJAJBCHKDFPBytes() {
      return this.mJAJBCHKDFP;
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @return internal {@code Utf8String} representation of mJAJBCHKDFP for modifications
     */
    public Utf8String getMutableMJAJBCHKDFPBytes() {
      bitField0_ |= 0x00200000;
      return this.mJAJBCHKDFP;
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @param value the mJAJBCHKDFP to set
     * @return this
     */
    public PlayerLoginCsReq setMJAJBCHKDFP(final CharSequence value) {
      bitField0_ |= 0x00200000;
      mJAJBCHKDFP.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string MJAJBCHKDFP = 1047;</code>
     * @param value the mJAJBCHKDFP to set
     * @return this
     */
    public PlayerLoginCsReq setMJAJBCHKDFP(final Utf8String value) {
      bitField0_ |= 0x00200000;
      mJAJBCHKDFP.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @return whether the fLFKCIHCENF field is set
     */
    public boolean hasFLFKCIHCENF() {
      return (bitField0_ & 0x00400000) != 0;
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @return this
     */
    public PlayerLoginCsReq clearFLFKCIHCENF() {
      bitField0_ &= ~0x00400000;
      fLFKCIHCENF.clear();
      return this;
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @return the fLFKCIHCENF
     */
    public String getFLFKCIHCENF() {
      return fLFKCIHCENF.getString();
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @return internal {@code Utf8String} representation of fLFKCIHCENF for reading
     */
    public Utf8String getFLFKCIHCENFBytes() {
      return this.fLFKCIHCENF;
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @return internal {@code Utf8String} representation of fLFKCIHCENF for modifications
     */
    public Utf8String getMutableFLFKCIHCENFBytes() {
      bitField0_ |= 0x00400000;
      return this.fLFKCIHCENF;
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @param value the fLFKCIHCENF to set
     * @return this
     */
    public PlayerLoginCsReq setFLFKCIHCENF(final CharSequence value) {
      bitField0_ |= 0x00400000;
      fLFKCIHCENF.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FLFKCIHCENF = 1105;</code>
     * @param value the fLFKCIHCENF to set
     * @return this
     */
    public PlayerLoginCsReq setFLFKCIHCENF(final Utf8String value) {
      bitField0_ |= 0x00400000;
      fLFKCIHCENF.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @return whether the kOGIIKIEJIJ field is set
     */
    public boolean hasKOGIIKIEJIJ() {
      return (bitField0_ & 0x00800000) != 0;
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @return this
     */
    public PlayerLoginCsReq clearKOGIIKIEJIJ() {
      bitField0_ &= ~0x00800000;
      kOGIIKIEJIJ.clear();
      return this;
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @return the kOGIIKIEJIJ
     */
    public String getKOGIIKIEJIJ() {
      return kOGIIKIEJIJ.getString();
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @return internal {@code Utf8String} representation of kOGIIKIEJIJ for reading
     */
    public Utf8String getKOGIIKIEJIJBytes() {
      return this.kOGIIKIEJIJ;
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @return internal {@code Utf8String} representation of kOGIIKIEJIJ for modifications
     */
    public Utf8String getMutableKOGIIKIEJIJBytes() {
      bitField0_ |= 0x00800000;
      return this.kOGIIKIEJIJ;
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @param value the kOGIIKIEJIJ to set
     * @return this
     */
    public PlayerLoginCsReq setKOGIIKIEJIJ(final CharSequence value) {
      bitField0_ |= 0x00800000;
      kOGIIKIEJIJ.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string KOGIIKIEJIJ = 1255;</code>
     * @param value the kOGIIKIEJIJ to set
     * @return this
     */
    public PlayerLoginCsReq setKOGIIKIEJIJ(final Utf8String value) {
      bitField0_ |= 0x00800000;
      kOGIIKIEJIJ.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @return whether the hFHGPLMEFGJ field is set
     */
    public boolean hasHFHGPLMEFGJ() {
      return (bitField0_ & 0x01000000) != 0;
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @return this
     */
    public PlayerLoginCsReq clearHFHGPLMEFGJ() {
      bitField0_ &= ~0x01000000;
      hFHGPLMEFGJ.clear();
      return this;
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @return the hFHGPLMEFGJ
     */
    public String getHFHGPLMEFGJ() {
      return hFHGPLMEFGJ.getString();
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @return internal {@code Utf8String} representation of hFHGPLMEFGJ for reading
     */
    public Utf8String getHFHGPLMEFGJBytes() {
      return this.hFHGPLMEFGJ;
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @return internal {@code Utf8String} representation of hFHGPLMEFGJ for modifications
     */
    public Utf8String getMutableHFHGPLMEFGJBytes() {
      bitField0_ |= 0x01000000;
      return this.hFHGPLMEFGJ;
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @param value the hFHGPLMEFGJ to set
     * @return this
     */
    public PlayerLoginCsReq setHFHGPLMEFGJ(final CharSequence value) {
      bitField0_ |= 0x01000000;
      hFHGPLMEFGJ.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string HFHGPLMEFGJ = 1424;</code>
     * @param value the hFHGPLMEFGJ to set
     * @return this
     */
    public PlayerLoginCsReq setHFHGPLMEFGJ(final Utf8String value) {
      bitField0_ |= 0x01000000;
      hFHGPLMEFGJ.copyFrom(value);
      return this;
    }

    @Override
    public PlayerLoginCsReq copyFrom(final PlayerLoginCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        loginRandom = other.loginRandom;
        clientResVersion = other.clientResVersion;
        nMDMJEFOPKB = other.nMDMJEFOPKB;
        bINLGCOBEPO = other.bINLGCOBEPO;
        aCMBPIIJKFL = other.aCMBPIIJKFL;
        platformType = other.platformType;
        language = other.language;
        gLNBFFILPNA = other.gLNBFFILPNA;
        jJDBFAMDEPP = other.jJDBFAMDEPP;
        iIAHICGOMKP.copyFrom(other.iIAHICGOMKP);
        aIEONDBHNDC.copyFrom(other.aIEONDBHNDC);
        fLJNOLCHBBC.copyFrom(other.fLJNOLCHBBC);
        oPNLMMDFFLL.copyFrom(other.oPNLMMDFFLL);
        rogueInfoData.copyFrom(other.rogueInfoData);
        cEKOLCPLBED.copyFrom(other.cEKOLCPLBED);
        oPNBNKJAIKD.copyFrom(other.oPNBNKJAIKD);
        eIFPHAMMIEG.copyFrom(other.eIFPHAMMIEG);
        signature.copyFrom(other.signature);
        hDPJMCHLGCM.copyFrom(other.hDPJMCHLGCM);
        bMCBOCGEKBF.copyFrom(other.bMCBOCGEKBF);
        fKFJDGCNDII.copyFrom(other.fKFJDGCNDII);
        mJAJBCHKDFP.copyFrom(other.mJAJBCHKDFP);
        fLFKCIHCENF.copyFrom(other.fLFKCIHCENF);
        kOGIIKIEJIJ.copyFrom(other.kOGIIKIEJIJ);
        hFHGPLMEFGJ.copyFrom(other.hFHGPLMEFGJ);
      }
      return this;
    }

    @Override
    public PlayerLoginCsReq mergeFrom(final PlayerLoginCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasLoginRandom()) {
        setLoginRandom(other.loginRandom);
      }
      if (other.hasClientResVersion()) {
        setClientResVersion(other.clientResVersion);
      }
      if (other.hasNMDMJEFOPKB()) {
        setNMDMJEFOPKB(other.nMDMJEFOPKB);
      }
      if (other.hasBINLGCOBEPO()) {
        setBINLGCOBEPO(other.bINLGCOBEPO);
      }
      if (other.hasACMBPIIJKFL()) {
        setACMBPIIJKFL(other.aCMBPIIJKFL);
      }
      if (other.hasPlatformType()) {
        setPlatformTypeValue(other.platformType);
      }
      if (other.hasLanguage()) {
        setLanguageValue(other.language);
      }
      if (other.hasGLNBFFILPNA()) {
        setGLNBFFILPNA(other.gLNBFFILPNA);
      }
      if (other.hasJJDBFAMDEPP()) {
        setJJDBFAMDEPP(other.jJDBFAMDEPP);
      }
      if (other.hasIIAHICGOMKP()) {
        getMutableIIAHICGOMKPBytes().copyFrom(other.iIAHICGOMKP);
      }
      if (other.hasAIEONDBHNDC()) {
        getMutableAIEONDBHNDCBytes().copyFrom(other.aIEONDBHNDC);
      }
      if (other.hasFLJNOLCHBBC()) {
        getMutableFLJNOLCHBBCBytes().copyFrom(other.fLJNOLCHBBC);
      }
      if (other.hasOPNLMMDFFLL()) {
        getMutableOPNLMMDFFLLBytes().copyFrom(other.oPNLMMDFFLL);
      }
      if (other.hasRogueInfoData()) {
        getMutableRogueInfoDataBytes().copyFrom(other.rogueInfoData);
      }
      if (other.hasCEKOLCPLBED()) {
        getMutableCEKOLCPLBEDBytes().copyFrom(other.cEKOLCPLBED);
      }
      if (other.hasOPNBNKJAIKD()) {
        getMutableOPNBNKJAIKDBytes().copyFrom(other.oPNBNKJAIKD);
      }
      if (other.hasEIFPHAMMIEG()) {
        getMutableEIFPHAMMIEGBytes().copyFrom(other.eIFPHAMMIEG);
      }
      if (other.hasSignature()) {
        getMutableSignatureBytes().copyFrom(other.signature);
      }
      if (other.hasHDPJMCHLGCM()) {
        getMutableHDPJMCHLGCMBytes().copyFrom(other.hDPJMCHLGCM);
      }
      if (other.hasBMCBOCGEKBF()) {
        getMutableBMCBOCGEKBFBytes().copyFrom(other.bMCBOCGEKBF);
      }
      if (other.hasFKFJDGCNDII()) {
        getMutableFKFJDGCNDIIBytes().copyFrom(other.fKFJDGCNDII);
      }
      if (other.hasMJAJBCHKDFP()) {
        getMutableMJAJBCHKDFPBytes().copyFrom(other.mJAJBCHKDFP);
      }
      if (other.hasFLFKCIHCENF()) {
        getMutableFLFKCIHCENFBytes().copyFrom(other.fLFKCIHCENF);
      }
      if (other.hasKOGIIKIEJIJ()) {
        getMutableKOGIIKIEJIJBytes().copyFrom(other.kOGIIKIEJIJ);
      }
      if (other.hasHFHGPLMEFGJ()) {
        getMutableHFHGPLMEFGJBytes().copyFrom(other.hFHGPLMEFGJ);
      }
      return this;
    }

    @Override
    public PlayerLoginCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      loginRandom = 0L;
      clientResVersion = 0;
      nMDMJEFOPKB = 0;
      bINLGCOBEPO = 0;
      aCMBPIIJKFL = 0;
      platformType = 0;
      language = 0;
      gLNBFFILPNA = false;
      jJDBFAMDEPP = false;
      iIAHICGOMKP.clear();
      aIEONDBHNDC.clear();
      fLJNOLCHBBC.clear();
      oPNLMMDFFLL.clear();
      rogueInfoData.clear();
      cEKOLCPLBED.clear();
      oPNBNKJAIKD.clear();
      eIFPHAMMIEG.clear();
      signature.clear();
      hDPJMCHLGCM.clear();
      bMCBOCGEKBF.clear();
      fKFJDGCNDII.clear();
      mJAJBCHKDFP.clear();
      fLFKCIHCENF.clear();
      kOGIIKIEJIJ.clear();
      hFHGPLMEFGJ.clear();
      return this;
    }

    @Override
    public PlayerLoginCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      iIAHICGOMKP.clear();
      aIEONDBHNDC.clear();
      fLJNOLCHBBC.clear();
      oPNLMMDFFLL.clear();
      rogueInfoData.clear();
      cEKOLCPLBED.clear();
      oPNBNKJAIKD.clear();
      eIFPHAMMIEG.clear();
      signature.clear();
      hDPJMCHLGCM.clear();
      bMCBOCGEKBF.clear();
      fKFJDGCNDII.clear();
      mJAJBCHKDFP.clear();
      fLFKCIHCENF.clear();
      kOGIIKIEJIJ.clear();
      hFHGPLMEFGJ.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerLoginCsReq)) {
        return false;
      }
      PlayerLoginCsReq other = (PlayerLoginCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasLoginRandom() || loginRandom == other.loginRandom)
        && (!hasClientResVersion() || clientResVersion == other.clientResVersion)
        && (!hasNMDMJEFOPKB() || nMDMJEFOPKB == other.nMDMJEFOPKB)
        && (!hasBINLGCOBEPO() || bINLGCOBEPO == other.bINLGCOBEPO)
        && (!hasACMBPIIJKFL() || aCMBPIIJKFL == other.aCMBPIIJKFL)
        && (!hasPlatformType() || platformType == other.platformType)
        && (!hasLanguage() || language == other.language)
        && (!hasGLNBFFILPNA() || gLNBFFILPNA == other.gLNBFFILPNA)
        && (!hasJJDBFAMDEPP() || jJDBFAMDEPP == other.jJDBFAMDEPP)
        && (!hasIIAHICGOMKP() || iIAHICGOMKP.equals(other.iIAHICGOMKP))
        && (!hasAIEONDBHNDC() || aIEONDBHNDC.equals(other.aIEONDBHNDC))
        && (!hasFLJNOLCHBBC() || fLJNOLCHBBC.equals(other.fLJNOLCHBBC))
        && (!hasOPNLMMDFFLL() || oPNLMMDFFLL.equals(other.oPNLMMDFFLL))
        && (!hasRogueInfoData() || rogueInfoData.equals(other.rogueInfoData))
        && (!hasCEKOLCPLBED() || cEKOLCPLBED.equals(other.cEKOLCPLBED))
        && (!hasOPNBNKJAIKD() || oPNBNKJAIKD.equals(other.oPNBNKJAIKD))
        && (!hasEIFPHAMMIEG() || eIFPHAMMIEG.equals(other.eIFPHAMMIEG))
        && (!hasSignature() || signature.equals(other.signature))
        && (!hasHDPJMCHLGCM() || hDPJMCHLGCM.equals(other.hDPJMCHLGCM))
        && (!hasBMCBOCGEKBF() || bMCBOCGEKBF.equals(other.bMCBOCGEKBF))
        && (!hasFKFJDGCNDII() || fKFJDGCNDII.equals(other.fKFJDGCNDII))
        && (!hasMJAJBCHKDFP() || mJAJBCHKDFP.equals(other.mJAJBCHKDFP))
        && (!hasFLFKCIHCENF() || fLFKCIHCENF.equals(other.fLFKCIHCENF))
        && (!hasKOGIIKIEJIJ() || kOGIIKIEJIJ.equals(other.kOGIIKIEJIJ))
        && (!hasHFHGPLMEFGJ() || hFHGPLMEFGJ.equals(other.hFHGPLMEFGJ));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt64NoTag(loginRandom);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(nMDMJEFOPKB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawLittleEndian16((short) 9456);
        output.writeUInt32NoTag(bINLGCOBEPO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawLittleEndian16((short) 22504);
        output.writeUInt32NoTag(aCMBPIIJKFL);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 104);
        output.writeEnumNoTag(platformType);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 120);
        output.writeEnumNoTag(language);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawLittleEndian16((short) 6848);
        output.writeBoolNoTag(gLNBFFILPNA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawLittleEndian16((short) 23512);
        output.writeBoolNoTag(jJDBFAMDEPP);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRawByte((byte) 10);
        output.writeStringNoTag(iIAHICGOMKP);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeRawByte((byte) 18);
        output.writeStringNoTag(aIEONDBHNDC);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeRawByte((byte) 26);
        output.writeStringNoTag(fLJNOLCHBBC);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeRawByte((byte) 34);
        output.writeStringNoTag(oPNLMMDFFLL);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        output.writeRawByte((byte) 42);
        output.writeStringNoTag(rogueInfoData);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        output.writeRawByte((byte) 50);
        output.writeStringNoTag(cEKOLCPLBED);
      }
      if ((bitField0_ & 0x00008000) != 0) {
        output.writeRawByte((byte) 74);
        output.writeStringNoTag(oPNBNKJAIKD);
      }
      if ((bitField0_ & 0x00010000) != 0) {
        output.writeRawByte((byte) 82);
        output.writeStringNoTag(eIFPHAMMIEG);
      }
      if ((bitField0_ & 0x00020000) != 0) {
        output.writeRawByte((byte) 90);
        output.writeStringNoTag(signature);
      }
      if ((bitField0_ & 0x00040000) != 0) {
        output.writeRawByte((byte) 114);
        output.writeStringNoTag(hDPJMCHLGCM);
      }
      if ((bitField0_ & 0x00080000) != 0) {
        output.writeRawLittleEndian16((short) 5554);
        output.writeStringNoTag(bMCBOCGEKBF);
      }
      if ((bitField0_ & 0x00100000) != 0) {
        output.writeRawLittleEndian16((short) 5618);
        output.writeStringNoTag(fKFJDGCNDII);
      }
      if ((bitField0_ & 0x00200000) != 0) {
        output.writeRawLittleEndian16((short) 16826);
        output.writeStringNoTag(mJAJBCHKDFP);
      }
      if ((bitField0_ & 0x00400000) != 0) {
        output.writeRawLittleEndian16((short) 17802);
        output.writeStringNoTag(fLFKCIHCENF);
      }
      if ((bitField0_ & 0x00800000) != 0) {
        output.writeRawLittleEndian16((short) 20154);
        output.writeStringNoTag(kOGIIKIEJIJ);
      }
      if ((bitField0_ & 0x01000000) != 0) {
        output.writeRawLittleEndian16((short) 22914);
        output.writeStringNoTag(hFHGPLMEFGJ);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt64SizeNoTag(loginRandom);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nMDMJEFOPKB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2 + ProtoSink.computeUInt32SizeNoTag(bINLGCOBEPO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2 + ProtoSink.computeUInt32SizeNoTag(aCMBPIIJKFL);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(platformType);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(language);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 3;
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 3;
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(iIAHICGOMKP);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(aIEONDBHNDC);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(fLJNOLCHBBC);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(oPNLMMDFFLL);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(rogueInfoData);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(cEKOLCPLBED);
      }
      if ((bitField0_ & 0x00008000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(oPNBNKJAIKD);
      }
      if ((bitField0_ & 0x00010000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(eIFPHAMMIEG);
      }
      if ((bitField0_ & 0x00020000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(signature);
      }
      if ((bitField0_ & 0x00040000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(hDPJMCHLGCM);
      }
      if ((bitField0_ & 0x00080000) != 0) {
        size += 2 + ProtoSink.computeStringSizeNoTag(bMCBOCGEKBF);
      }
      if ((bitField0_ & 0x00100000) != 0) {
        size += 2 + ProtoSink.computeStringSizeNoTag(fKFJDGCNDII);
      }
      if ((bitField0_ & 0x00200000) != 0) {
        size += 2 + ProtoSink.computeStringSizeNoTag(mJAJBCHKDFP);
      }
      if ((bitField0_ & 0x00400000) != 0) {
        size += 2 + ProtoSink.computeStringSizeNoTag(fLFKCIHCENF);
      }
      if ((bitField0_ & 0x00800000) != 0) {
        size += 2 + ProtoSink.computeStringSizeNoTag(kOGIIKIEJIJ);
      }
      if ((bitField0_ & 0x01000000) != 0) {
        size += 2 + ProtoSink.computeStringSizeNoTag(hFHGPLMEFGJ);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerLoginCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 56: {
            // loginRandom
            loginRandom = input.readUInt64();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // clientResVersion
            clientResVersion = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // nMDMJEFOPKB
            nMDMJEFOPKB = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 4720) {
              break;
            }
          }
          case 4720: {
            // bINLGCOBEPO
            bINLGCOBEPO = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 11240) {
              break;
            }
          }
          case 11240: {
            // aCMBPIIJKFL
            aCMBPIIJKFL = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // platformType
            final int value = input.readInt32();
            if (PlatformTypeOuterClass.PlatformType.forNumber(value) != null) {
              platformType = value;
              bitField0_ |= 0x00000020;
            }
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // language
            final int value = input.readInt32();
            if (LanguageTypeOuterClass.LanguageType.forNumber(value) != null) {
              language = value;
              bitField0_ |= 0x00000040;
            }
            tag = input.readTag();
            if (tag != 3392) {
              break;
            }
          }
          case 3392: {
            // gLNBFFILPNA
            gLNBFFILPNA = input.readBool();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 11736) {
              break;
            }
          }
          case 11736: {
            // jJDBFAMDEPP
            jJDBFAMDEPP = input.readBool();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 10) {
              break;
            }
          }
          case 10: {
            // iIAHICGOMKP
            input.readString(iIAHICGOMKP);
            bitField0_ |= 0x00000200;
            tag = input.readTag();
            if (tag != 18) {
              break;
            }
          }
          case 18: {
            // aIEONDBHNDC
            input.readString(aIEONDBHNDC);
            bitField0_ |= 0x00000400;
            tag = input.readTag();
            if (tag != 26) {
              break;
            }
          }
          case 26: {
            // fLJNOLCHBBC
            input.readString(fLJNOLCHBBC);
            bitField0_ |= 0x00000800;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // oPNLMMDFFLL
            input.readString(oPNLMMDFFLL);
            bitField0_ |= 0x00001000;
            tag = input.readTag();
            if (tag != 42) {
              break;
            }
          }
          case 42: {
            // rogueInfoData
            input.readString(rogueInfoData);
            bitField0_ |= 0x00002000;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // cEKOLCPLBED
            input.readString(cEKOLCPLBED);
            bitField0_ |= 0x00004000;
            tag = input.readTag();
            if (tag != 74) {
              break;
            }
          }
          case 74: {
            // oPNBNKJAIKD
            input.readString(oPNBNKJAIKD);
            bitField0_ |= 0x00008000;
            tag = input.readTag();
            if (tag != 82) {
              break;
            }
          }
          case 82: {
            // eIFPHAMMIEG
            input.readString(eIFPHAMMIEG);
            bitField0_ |= 0x00010000;
            tag = input.readTag();
            if (tag != 90) {
              break;
            }
          }
          case 90: {
            // signature
            input.readString(signature);
            bitField0_ |= 0x00020000;
            tag = input.readTag();
            if (tag != 114) {
              break;
            }
          }
          case 114: {
            // hDPJMCHLGCM
            input.readString(hDPJMCHLGCM);
            bitField0_ |= 0x00040000;
            tag = input.readTag();
            if (tag != 2738) {
              break;
            }
          }
          case 2738: {
            // bMCBOCGEKBF
            input.readString(bMCBOCGEKBF);
            bitField0_ |= 0x00080000;
            tag = input.readTag();
            if (tag != 2802) {
              break;
            }
          }
          case 2802: {
            // fKFJDGCNDII
            input.readString(fKFJDGCNDII);
            bitField0_ |= 0x00100000;
            tag = input.readTag();
            if (tag != 8378) {
              break;
            }
          }
          case 8378: {
            // mJAJBCHKDFP
            input.readString(mJAJBCHKDFP);
            bitField0_ |= 0x00200000;
            tag = input.readTag();
            if (tag != 8842) {
              break;
            }
          }
          case 8842: {
            // fLFKCIHCENF
            input.readString(fLFKCIHCENF);
            bitField0_ |= 0x00400000;
            tag = input.readTag();
            if (tag != 10042) {
              break;
            }
          }
          case 10042: {
            // kOGIIKIEJIJ
            input.readString(kOGIIKIEJIJ);
            bitField0_ |= 0x00800000;
            tag = input.readTag();
            if (tag != 11394) {
              break;
            }
          }
          case 11394: {
            // hFHGPLMEFGJ
            input.readString(hFHGPLMEFGJ);
            bitField0_ |= 0x01000000;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt64(FieldNames.loginRandom, loginRandom);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.clientResVersion, clientResVersion);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.nMDMJEFOPKB, nMDMJEFOPKB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.bINLGCOBEPO, bINLGCOBEPO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.aCMBPIIJKFL, aCMBPIIJKFL);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeEnum(FieldNames.platformType, platformType, PlatformTypeOuterClass.PlatformType.converter());
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeEnum(FieldNames.language, language, LanguageTypeOuterClass.LanguageType.converter());
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeBool(FieldNames.gLNBFFILPNA, gLNBFFILPNA);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeBool(FieldNames.jJDBFAMDEPP, jJDBFAMDEPP);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeString(FieldNames.iIAHICGOMKP, iIAHICGOMKP);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeString(FieldNames.aIEONDBHNDC, aIEONDBHNDC);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeString(FieldNames.fLJNOLCHBBC, fLJNOLCHBBC);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeString(FieldNames.oPNLMMDFFLL, oPNLMMDFFLL);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        output.writeString(FieldNames.rogueInfoData, rogueInfoData);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        output.writeString(FieldNames.cEKOLCPLBED, cEKOLCPLBED);
      }
      if ((bitField0_ & 0x00008000) != 0) {
        output.writeString(FieldNames.oPNBNKJAIKD, oPNBNKJAIKD);
      }
      if ((bitField0_ & 0x00010000) != 0) {
        output.writeString(FieldNames.eIFPHAMMIEG, eIFPHAMMIEG);
      }
      if ((bitField0_ & 0x00020000) != 0) {
        output.writeString(FieldNames.signature, signature);
      }
      if ((bitField0_ & 0x00040000) != 0) {
        output.writeString(FieldNames.hDPJMCHLGCM, hDPJMCHLGCM);
      }
      if ((bitField0_ & 0x00080000) != 0) {
        output.writeString(FieldNames.bMCBOCGEKBF, bMCBOCGEKBF);
      }
      if ((bitField0_ & 0x00100000) != 0) {
        output.writeString(FieldNames.fKFJDGCNDII, fKFJDGCNDII);
      }
      if ((bitField0_ & 0x00200000) != 0) {
        output.writeString(FieldNames.mJAJBCHKDFP, mJAJBCHKDFP);
      }
      if ((bitField0_ & 0x00400000) != 0) {
        output.writeString(FieldNames.fLFKCIHCENF, fLFKCIHCENF);
      }
      if ((bitField0_ & 0x00800000) != 0) {
        output.writeString(FieldNames.kOGIIKIEJIJ, kOGIIKIEJIJ);
      }
      if ((bitField0_ & 0x01000000) != 0) {
        output.writeString(FieldNames.hFHGPLMEFGJ, hFHGPLMEFGJ);
      }
      output.endObject();
    }

    @Override
    public PlayerLoginCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1268567436:
          case -201491879: {
            if (input.isAtField(FieldNames.loginRandom)) {
              if (!input.trySkipNullValue()) {
                loginRandom = input.readUInt64();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2005674429:
          case -349907515: {
            if (input.isAtField(FieldNames.clientResVersion)) {
              if (!input.trySkipNullValue()) {
                clientResVersion = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1022920795: {
            if (input.isAtField(FieldNames.nMDMJEFOPKB)) {
              if (!input.trySkipNullValue()) {
                nMDMJEFOPKB = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 843180816: {
            if (input.isAtField(FieldNames.bINLGCOBEPO)) {
              if (!input.trySkipNullValue()) {
                bINLGCOBEPO = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 647542304: {
            if (input.isAtField(FieldNames.aCMBPIIJKFL)) {
              if (!input.trySkipNullValue()) {
                aCMBPIIJKFL = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 155581005:
          case 538062726: {
            if (input.isAtField(FieldNames.platformType)) {
              if (!input.trySkipNullValue()) {
                final PlatformTypeOuterClass.PlatformType value = input.readEnum(PlatformTypeOuterClass.PlatformType.converter());
                if (value != null) {
                  platformType = value.getNumber();
                  bitField0_ |= 0x00000020;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1613589672: {
            if (input.isAtField(FieldNames.language)) {
              if (!input.trySkipNullValue()) {
                final LanguageTypeOuterClass.LanguageType value = input.readEnum(LanguageTypeOuterClass.LanguageType.converter());
                if (value != null) {
                  language = value.getNumber();
                  bitField0_ |= 0x00000040;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1196265017: {
            if (input.isAtField(FieldNames.gLNBFFILPNA)) {
              if (!input.trySkipNullValue()) {
                gLNBFFILPNA = input.readBool();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1144149835: {
            if (input.isAtField(FieldNames.jJDBFAMDEPP)) {
              if (!input.trySkipNullValue()) {
                jJDBFAMDEPP = input.readBool();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2031732599: {
            if (input.isAtField(FieldNames.iIAHICGOMKP)) {
              if (!input.trySkipNullValue()) {
                input.readString(iIAHICGOMKP);
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 300218431: {
            if (input.isAtField(FieldNames.aIEONDBHNDC)) {
              if (!input.trySkipNullValue()) {
                input.readString(aIEONDBHNDC);
                bitField0_ |= 0x00000400;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1756843529: {
            if (input.isAtField(FieldNames.fLJNOLCHBBC)) {
              if (!input.trySkipNullValue()) {
                input.readString(fLJNOLCHBBC);
                bitField0_ |= 0x00000800;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1111637339: {
            if (input.isAtField(FieldNames.oPNLMMDFFLL)) {
              if (!input.trySkipNullValue()) {
                input.readString(oPNLMMDFFLL);
                bitField0_ |= 0x00001000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1486739086:
          case 480604278: {
            if (input.isAtField(FieldNames.rogueInfoData)) {
              if (!input.trySkipNullValue()) {
                input.readString(rogueInfoData);
                bitField0_ |= 0x00002000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 2036912584: {
            if (input.isAtField(FieldNames.cEKOLCPLBED)) {
              if (!input.trySkipNullValue()) {
                input.readString(cEKOLCPLBED);
                bitField0_ |= 0x00004000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -524231111: {
            if (input.isAtField(FieldNames.oPNBNKJAIKD)) {
              if (!input.trySkipNullValue()) {
                input.readString(oPNBNKJAIKD);
                bitField0_ |= 0x00008000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 532064132: {
            if (input.isAtField(FieldNames.eIFPHAMMIEG)) {
              if (!input.trySkipNullValue()) {
                input.readString(eIFPHAMMIEG);
                bitField0_ |= 0x00010000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1073584312: {
            if (input.isAtField(FieldNames.signature)) {
              if (!input.trySkipNullValue()) {
                input.readString(signature);
                bitField0_ |= 0x00020000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 2147269345: {
            if (input.isAtField(FieldNames.hDPJMCHLGCM)) {
              if (!input.trySkipNullValue()) {
                input.readString(hDPJMCHLGCM);
                bitField0_ |= 0x00040000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1013823923: {
            if (input.isAtField(FieldNames.bMCBOCGEKBF)) {
              if (!input.trySkipNullValue()) {
                input.readString(bMCBOCGEKBF);
                bitField0_ |= 0x00080000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1677643021: {
            if (input.isAtField(FieldNames.fKFJDGCNDII)) {
              if (!input.trySkipNullValue()) {
                input.readString(fKFJDGCNDII);
                bitField0_ |= 0x00100000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 742740804: {
            if (input.isAtField(FieldNames.mJAJBCHKDFP)) {
              if (!input.trySkipNullValue()) {
                input.readString(mJAJBCHKDFP);
                bitField0_ |= 0x00200000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1896981807: {
            if (input.isAtField(FieldNames.fLFKCIHCENF)) {
              if (!input.trySkipNullValue()) {
                input.readString(fLFKCIHCENF);
                bitField0_ |= 0x00400000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1503815783: {
            if (input.isAtField(FieldNames.kOGIIKIEJIJ)) {
              if (!input.trySkipNullValue()) {
                input.readString(kOGIIKIEJIJ);
                bitField0_ |= 0x00800000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1025126776: {
            if (input.isAtField(FieldNames.hFHGPLMEFGJ)) {
              if (!input.trySkipNullValue()) {
                input.readString(hFHGPLMEFGJ);
                bitField0_ |= 0x01000000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerLoginCsReq clone() {
      return new PlayerLoginCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerLoginCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerLoginCsReq(), data).checkInitialized();
    }

    public static PlayerLoginCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerLoginCsReq(), input).checkInitialized();
    }

    public static PlayerLoginCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerLoginCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerLoginCsReq messages
     */
    public static MessageFactory<PlayerLoginCsReq> getFactory() {
      return PlayerLoginCsReqFactory.INSTANCE;
    }

    private enum PlayerLoginCsReqFactory implements MessageFactory<PlayerLoginCsReq> {
      INSTANCE;

      @Override
      public PlayerLoginCsReq create() {
        return PlayerLoginCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName loginRandom = FieldName.forField("loginRandom", "login_random");

      static final FieldName clientResVersion = FieldName.forField("clientResVersion", "client_res_version");

      static final FieldName nMDMJEFOPKB = FieldName.forField("NMDMJEFOPKB");

      static final FieldName bINLGCOBEPO = FieldName.forField("BINLGCOBEPO");

      static final FieldName aCMBPIIJKFL = FieldName.forField("ACMBPIIJKFL");

      static final FieldName platformType = FieldName.forField("platformType", "platform_type");

      static final FieldName language = FieldName.forField("language");

      static final FieldName gLNBFFILPNA = FieldName.forField("GLNBFFILPNA");

      static final FieldName jJDBFAMDEPP = FieldName.forField("JJDBFAMDEPP");

      static final FieldName iIAHICGOMKP = FieldName.forField("IIAHICGOMKP");

      static final FieldName aIEONDBHNDC = FieldName.forField("AIEONDBHNDC");

      static final FieldName fLJNOLCHBBC = FieldName.forField("FLJNOLCHBBC");

      static final FieldName oPNLMMDFFLL = FieldName.forField("OPNLMMDFFLL");

      static final FieldName rogueInfoData = FieldName.forField("rogueInfoData", "rogue_info_data");

      static final FieldName cEKOLCPLBED = FieldName.forField("CEKOLCPLBED");

      static final FieldName oPNBNKJAIKD = FieldName.forField("OPNBNKJAIKD");

      static final FieldName eIFPHAMMIEG = FieldName.forField("EIFPHAMMIEG");

      static final FieldName signature = FieldName.forField("signature");

      static final FieldName hDPJMCHLGCM = FieldName.forField("HDPJMCHLGCM");

      static final FieldName bMCBOCGEKBF = FieldName.forField("BMCBOCGEKBF");

      static final FieldName fKFJDGCNDII = FieldName.forField("FKFJDGCNDII");

      static final FieldName mJAJBCHKDFP = FieldName.forField("MJAJBCHKDFP");

      static final FieldName fLFKCIHCENF = FieldName.forField("FLFKCIHCENF");

      static final FieldName kOGIIKIEJIJ = FieldName.forField("KOGIIKIEJIJ");

      static final FieldName hFHGPLMEFGJ = FieldName.forField("HFHGPLMEFGJ");
    }
  }
}
