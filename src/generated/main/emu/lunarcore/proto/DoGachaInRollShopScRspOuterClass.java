// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class DoGachaInRollShopScRspOuterClass {
  /**
   * Protobuf type {@code DoGachaInRollShopScRsp}
   */
  public static final class DoGachaInRollShopScRsp extends ProtoMessage<DoGachaInRollShopScRsp> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 KEACGMLKBDK = 1;</code>
     */
    private int kEACGMLKBDK;

    /**
     * <code>optional uint32 CLAPDDHKGKK = 4;</code>
     */
    private int cLAPDDHKGKK;

    /**
     * <code>optional uint32 retcode = 9;</code>
     */
    private int retcode;

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     */
    private int rollShopId;

    /**
     * <code>optional .ItemList reward = 15;</code>
     */
    private final ItemListOuterClass.ItemList reward = ItemListOuterClass.ItemList.newInstance();

    private DoGachaInRollShopScRsp() {
    }

    /**
     * @return a new empty instance of {@code DoGachaInRollShopScRsp}
     */
    public static DoGachaInRollShopScRsp newInstance() {
      return new DoGachaInRollShopScRsp();
    }

    /**
     * <code>optional uint32 KEACGMLKBDK = 1;</code>
     * @return whether the kEACGMLKBDK field is set
     */
    public boolean hasKEACGMLKBDK() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 KEACGMLKBDK = 1;</code>
     * @return this
     */
    public DoGachaInRollShopScRsp clearKEACGMLKBDK() {
      bitField0_ &= ~0x00000001;
      kEACGMLKBDK = 0;
      return this;
    }

    /**
     * <code>optional uint32 KEACGMLKBDK = 1;</code>
     * @return the kEACGMLKBDK
     */
    public int getKEACGMLKBDK() {
      return kEACGMLKBDK;
    }

    /**
     * <code>optional uint32 KEACGMLKBDK = 1;</code>
     * @param value the kEACGMLKBDK to set
     * @return this
     */
    public DoGachaInRollShopScRsp setKEACGMLKBDK(final int value) {
      bitField0_ |= 0x00000001;
      kEACGMLKBDK = value;
      return this;
    }

    /**
     * <code>optional uint32 CLAPDDHKGKK = 4;</code>
     * @return whether the cLAPDDHKGKK field is set
     */
    public boolean hasCLAPDDHKGKK() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 CLAPDDHKGKK = 4;</code>
     * @return this
     */
    public DoGachaInRollShopScRsp clearCLAPDDHKGKK() {
      bitField0_ &= ~0x00000002;
      cLAPDDHKGKK = 0;
      return this;
    }

    /**
     * <code>optional uint32 CLAPDDHKGKK = 4;</code>
     * @return the cLAPDDHKGKK
     */
    public int getCLAPDDHKGKK() {
      return cLAPDDHKGKK;
    }

    /**
     * <code>optional uint32 CLAPDDHKGKK = 4;</code>
     * @param value the cLAPDDHKGKK to set
     * @return this
     */
    public DoGachaInRollShopScRsp setCLAPDDHKGKK(final int value) {
      bitField0_ |= 0x00000002;
      cLAPDDHKGKK = value;
      return this;
    }

    /**
     * <code>optional uint32 retcode = 9;</code>
     * @return whether the retcode field is set
     */
    public boolean hasRetcode() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 retcode = 9;</code>
     * @return this
     */
    public DoGachaInRollShopScRsp clearRetcode() {
      bitField0_ &= ~0x00000004;
      retcode = 0;
      return this;
    }

    /**
     * <code>optional uint32 retcode = 9;</code>
     * @return the retcode
     */
    public int getRetcode() {
      return retcode;
    }

    /**
     * <code>optional uint32 retcode = 9;</code>
     * @param value the retcode to set
     * @return this
     */
    public DoGachaInRollShopScRsp setRetcode(final int value) {
      bitField0_ |= 0x00000004;
      retcode = value;
      return this;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @return whether the rollShopId field is set
     */
    public boolean hasRollShopId() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @return this
     */
    public DoGachaInRollShopScRsp clearRollShopId() {
      bitField0_ &= ~0x00000008;
      rollShopId = 0;
      return this;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @return the rollShopId
     */
    public int getRollShopId() {
      return rollShopId;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @param value the rollShopId to set
     * @return this
     */
    public DoGachaInRollShopScRsp setRollShopId(final int value) {
      bitField0_ |= 0x00000008;
      rollShopId = value;
      return this;
    }

    /**
     * <code>optional .ItemList reward = 15;</code>
     * @return whether the reward field is set
     */
    public boolean hasReward() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional .ItemList reward = 15;</code>
     * @return this
     */
    public DoGachaInRollShopScRsp clearReward() {
      bitField0_ &= ~0x00000010;
      reward.clear();
      return this;
    }

    /**
     * <code>optional .ItemList reward = 15;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableReward()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public ItemListOuterClass.ItemList getReward() {
      return reward;
    }

    /**
     * <code>optional .ItemList reward = 15;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public ItemListOuterClass.ItemList getMutableReward() {
      bitField0_ |= 0x00000010;
      return reward;
    }

    /**
     * <code>optional .ItemList reward = 15;</code>
     * @param value the reward to set
     * @return this
     */
    public DoGachaInRollShopScRsp setReward(final ItemListOuterClass.ItemList value) {
      bitField0_ |= 0x00000010;
      reward.copyFrom(value);
      return this;
    }

    @Override
    public DoGachaInRollShopScRsp copyFrom(final DoGachaInRollShopScRsp other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        kEACGMLKBDK = other.kEACGMLKBDK;
        cLAPDDHKGKK = other.cLAPDDHKGKK;
        retcode = other.retcode;
        rollShopId = other.rollShopId;
        reward.copyFrom(other.reward);
      }
      return this;
    }

    @Override
    public DoGachaInRollShopScRsp mergeFrom(final DoGachaInRollShopScRsp other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasKEACGMLKBDK()) {
        setKEACGMLKBDK(other.kEACGMLKBDK);
      }
      if (other.hasCLAPDDHKGKK()) {
        setCLAPDDHKGKK(other.cLAPDDHKGKK);
      }
      if (other.hasRetcode()) {
        setRetcode(other.retcode);
      }
      if (other.hasRollShopId()) {
        setRollShopId(other.rollShopId);
      }
      if (other.hasReward()) {
        getMutableReward().mergeFrom(other.reward);
      }
      return this;
    }

    @Override
    public DoGachaInRollShopScRsp clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      kEACGMLKBDK = 0;
      cLAPDDHKGKK = 0;
      retcode = 0;
      rollShopId = 0;
      reward.clear();
      return this;
    }

    @Override
    public DoGachaInRollShopScRsp clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      reward.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof DoGachaInRollShopScRsp)) {
        return false;
      }
      DoGachaInRollShopScRsp other = (DoGachaInRollShopScRsp) o;
      return bitField0_ == other.bitField0_
        && (!hasKEACGMLKBDK() || kEACGMLKBDK == other.kEACGMLKBDK)
        && (!hasCLAPDDHKGKK() || cLAPDDHKGKK == other.cLAPDDHKGKK)
        && (!hasRetcode() || retcode == other.retcode)
        && (!hasRollShopId() || rollShopId == other.rollShopId)
        && (!hasReward() || reward.equals(other.reward));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(kEACGMLKBDK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(cLAPDDHKGKK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 72);
        output.writeUInt32NoTag(retcode);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(rollShopId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 122);
        output.writeMessageNoTag(reward);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kEACGMLKBDK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(cLAPDDHKGKK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(retcode);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(rollShopId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(reward);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public DoGachaInRollShopScRsp mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // kEACGMLKBDK
            kEACGMLKBDK = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // cLAPDDHKGKK
            cLAPDDHKGKK = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // retcode
            retcode = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // rollShopId
            rollShopId = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 122) {
              break;
            }
          }
          case 122: {
            // reward
            input.readMessage(reward);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.kEACGMLKBDK, kEACGMLKBDK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.cLAPDDHKGKK, cLAPDDHKGKK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.retcode, retcode);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.rollShopId, rollShopId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeMessage(FieldNames.reward, reward);
      }
      output.endObject();
    }

    @Override
    public DoGachaInRollShopScRsp mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 2142008008: {
            if (input.isAtField(FieldNames.kEACGMLKBDK)) {
              if (!input.trySkipNullValue()) {
                kEACGMLKBDK = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 514957868: {
            if (input.isAtField(FieldNames.cLAPDDHKGKK)) {
              if (!input.trySkipNullValue()) {
                cLAPDDHKGKK = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1097936398: {
            if (input.isAtField(FieldNames.retcode)) {
              if (!input.trySkipNullValue()) {
                retcode = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -904898162:
          case -1612413630: {
            if (input.isAtField(FieldNames.rollShopId)) {
              if (!input.trySkipNullValue()) {
                rollShopId = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -934326481: {
            if (input.isAtField(FieldNames.reward)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(reward);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public DoGachaInRollShopScRsp clone() {
      return new DoGachaInRollShopScRsp().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static DoGachaInRollShopScRsp parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new DoGachaInRollShopScRsp(), data).checkInitialized();
    }

    public static DoGachaInRollShopScRsp parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new DoGachaInRollShopScRsp(), input).checkInitialized();
    }

    public static DoGachaInRollShopScRsp parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new DoGachaInRollShopScRsp(), input).checkInitialized();
    }

    /**
     * @return factory for creating DoGachaInRollShopScRsp messages
     */
    public static MessageFactory<DoGachaInRollShopScRsp> getFactory() {
      return DoGachaInRollShopScRspFactory.INSTANCE;
    }

    private enum DoGachaInRollShopScRspFactory implements MessageFactory<DoGachaInRollShopScRsp> {
      INSTANCE;

      @Override
      public DoGachaInRollShopScRsp create() {
        return DoGachaInRollShopScRsp.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName kEACGMLKBDK = FieldName.forField("KEACGMLKBDK");

      static final FieldName cLAPDDHKGKK = FieldName.forField("CLAPDDHKGKK");

      static final FieldName retcode = FieldName.forField("retcode");

      static final FieldName rollShopId = FieldName.forField("rollShopId", "roll_shop_id");

      static final FieldName reward = FieldName.forField("reward");
    }
  }
}
