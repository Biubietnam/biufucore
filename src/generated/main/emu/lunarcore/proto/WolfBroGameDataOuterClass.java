// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class WolfBroGameDataOuterClass {
  /**
   * Protobuf type {@code WolfBroGameData}
   */
  public static final class WolfBroGameData extends ProtoMessage<WolfBroGameData> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 id = 4;</code>
     */
    private int id;

    /**
     * <code>optional uint32 ALEPHLCKJJE = 10;</code>
     */
    private int aLEPHLCKJJE;

    /**
     * <code>optional bool CIMCFAAFMDP = 13;</code>
     */
    private boolean cIMCFAAFMDP;

    /**
     * <code>optional .WolfBroGameInfo JLMHCFDOKMO = 15;</code>
     */
    private final WolfBroGameInfoOuterClass.WolfBroGameInfo jLMHCFDOKMO = WolfBroGameInfoOuterClass.WolfBroGameInfo.newInstance();

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     */
    private final Utf8String iKAPDMODPFD = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     */
    private final RepeatedMessage<VectorOuterClass.Vector> kILNIOKEHMD = RepeatedMessage.newEmptyInstance(VectorOuterClass.Vector.getFactory());

    private WolfBroGameData() {
    }

    /**
     * @return a new empty instance of {@code WolfBroGameData}
     */
    public static WolfBroGameData newInstance() {
      return new WolfBroGameData();
    }

    /**
     * <code>optional uint32 id = 4;</code>
     * @return whether the id field is set
     */
    public boolean hasId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 id = 4;</code>
     * @return this
     */
    public WolfBroGameData clearId() {
      bitField0_ &= ~0x00000001;
      id = 0;
      return this;
    }

    /**
     * <code>optional uint32 id = 4;</code>
     * @return the id
     */
    public int getId() {
      return id;
    }

    /**
     * <code>optional uint32 id = 4;</code>
     * @param value the id to set
     * @return this
     */
    public WolfBroGameData setId(final int value) {
      bitField0_ |= 0x00000001;
      id = value;
      return this;
    }

    /**
     * <code>optional uint32 ALEPHLCKJJE = 10;</code>
     * @return whether the aLEPHLCKJJE field is set
     */
    public boolean hasALEPHLCKJJE() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 ALEPHLCKJJE = 10;</code>
     * @return this
     */
    public WolfBroGameData clearALEPHLCKJJE() {
      bitField0_ &= ~0x00000002;
      aLEPHLCKJJE = 0;
      return this;
    }

    /**
     * <code>optional uint32 ALEPHLCKJJE = 10;</code>
     * @return the aLEPHLCKJJE
     */
    public int getALEPHLCKJJE() {
      return aLEPHLCKJJE;
    }

    /**
     * <code>optional uint32 ALEPHLCKJJE = 10;</code>
     * @param value the aLEPHLCKJJE to set
     * @return this
     */
    public WolfBroGameData setALEPHLCKJJE(final int value) {
      bitField0_ |= 0x00000002;
      aLEPHLCKJJE = value;
      return this;
    }

    /**
     * <code>optional bool CIMCFAAFMDP = 13;</code>
     * @return whether the cIMCFAAFMDP field is set
     */
    public boolean hasCIMCFAAFMDP() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool CIMCFAAFMDP = 13;</code>
     * @return this
     */
    public WolfBroGameData clearCIMCFAAFMDP() {
      bitField0_ &= ~0x00000004;
      cIMCFAAFMDP = false;
      return this;
    }

    /**
     * <code>optional bool CIMCFAAFMDP = 13;</code>
     * @return the cIMCFAAFMDP
     */
    public boolean getCIMCFAAFMDP() {
      return cIMCFAAFMDP;
    }

    /**
     * <code>optional bool CIMCFAAFMDP = 13;</code>
     * @param value the cIMCFAAFMDP to set
     * @return this
     */
    public WolfBroGameData setCIMCFAAFMDP(final boolean value) {
      bitField0_ |= 0x00000004;
      cIMCFAAFMDP = value;
      return this;
    }

    /**
     * <code>optional .WolfBroGameInfo JLMHCFDOKMO = 15;</code>
     * @return whether the jLMHCFDOKMO field is set
     */
    public boolean hasJLMHCFDOKMO() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional .WolfBroGameInfo JLMHCFDOKMO = 15;</code>
     * @return this
     */
    public WolfBroGameData clearJLMHCFDOKMO() {
      bitField0_ &= ~0x00000008;
      jLMHCFDOKMO.clear();
      return this;
    }

    /**
     * <code>optional .WolfBroGameInfo JLMHCFDOKMO = 15;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJLMHCFDOKMO()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getJLMHCFDOKMO() {
      return jLMHCFDOKMO;
    }

    /**
     * <code>optional .WolfBroGameInfo JLMHCFDOKMO = 15;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getMutableJLMHCFDOKMO() {
      bitField0_ |= 0x00000008;
      return jLMHCFDOKMO;
    }

    /**
     * <code>optional .WolfBroGameInfo JLMHCFDOKMO = 15;</code>
     * @param value the jLMHCFDOKMO to set
     * @return this
     */
    public WolfBroGameData setJLMHCFDOKMO(final WolfBroGameInfoOuterClass.WolfBroGameInfo value) {
      bitField0_ |= 0x00000008;
      jLMHCFDOKMO.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @return whether the iKAPDMODPFD field is set
     */
    public boolean hasIKAPDMODPFD() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @return this
     */
    public WolfBroGameData clearIKAPDMODPFD() {
      bitField0_ &= ~0x00000010;
      iKAPDMODPFD.clear();
      return this;
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @return the iKAPDMODPFD
     */
    public String getIKAPDMODPFD() {
      return iKAPDMODPFD.getString();
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @return internal {@code Utf8String} representation of iKAPDMODPFD for reading
     */
    public Utf8String getIKAPDMODPFDBytes() {
      return this.iKAPDMODPFD;
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @return internal {@code Utf8String} representation of iKAPDMODPFD for modifications
     */
    public Utf8String getMutableIKAPDMODPFDBytes() {
      bitField0_ |= 0x00000010;
      return this.iKAPDMODPFD;
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @param value the iKAPDMODPFD to set
     * @return this
     */
    public WolfBroGameData setIKAPDMODPFD(final CharSequence value) {
      bitField0_ |= 0x00000010;
      iKAPDMODPFD.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string IKAPDMODPFD = 9;</code>
     * @param value the iKAPDMODPFD to set
     * @return this
     */
    public WolfBroGameData setIKAPDMODPFD(final Utf8String value) {
      bitField0_ |= 0x00000010;
      iKAPDMODPFD.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     * @return whether the kILNIOKEHMD field is set
     */
    public boolean hasKILNIOKEHMD() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     * @return this
     */
    public WolfBroGameData clearKILNIOKEHMD() {
      bitField0_ &= ~0x00000020;
      kILNIOKEHMD.clear();
      return this;
    }

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableKILNIOKEHMD()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<VectorOuterClass.Vector> getKILNIOKEHMD() {
      return kILNIOKEHMD;
    }

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<VectorOuterClass.Vector> getMutableKILNIOKEHMD() {
      bitField0_ |= 0x00000020;
      return kILNIOKEHMD;
    }

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     * @param value the kILNIOKEHMD to add
     * @return this
     */
    public WolfBroGameData addKILNIOKEHMD(final VectorOuterClass.Vector value) {
      bitField0_ |= 0x00000020;
      kILNIOKEHMD.add(value);
      return this;
    }

    /**
     * <code>repeated .Vector KILNIOKEHMD = 11;</code>
     * @param values the kILNIOKEHMD to add
     * @return this
     */
    public WolfBroGameData addAllKILNIOKEHMD(final VectorOuterClass.Vector... values) {
      bitField0_ |= 0x00000020;
      kILNIOKEHMD.addAll(values);
      return this;
    }

    @Override
    public WolfBroGameData copyFrom(final WolfBroGameData other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        id = other.id;
        aLEPHLCKJJE = other.aLEPHLCKJJE;
        cIMCFAAFMDP = other.cIMCFAAFMDP;
        jLMHCFDOKMO.copyFrom(other.jLMHCFDOKMO);
        iKAPDMODPFD.copyFrom(other.iKAPDMODPFD);
        kILNIOKEHMD.copyFrom(other.kILNIOKEHMD);
      }
      return this;
    }

    @Override
    public WolfBroGameData mergeFrom(final WolfBroGameData other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasId()) {
        setId(other.id);
      }
      if (other.hasALEPHLCKJJE()) {
        setALEPHLCKJJE(other.aLEPHLCKJJE);
      }
      if (other.hasCIMCFAAFMDP()) {
        setCIMCFAAFMDP(other.cIMCFAAFMDP);
      }
      if (other.hasJLMHCFDOKMO()) {
        getMutableJLMHCFDOKMO().mergeFrom(other.jLMHCFDOKMO);
      }
      if (other.hasIKAPDMODPFD()) {
        getMutableIKAPDMODPFDBytes().copyFrom(other.iKAPDMODPFD);
      }
      if (other.hasKILNIOKEHMD()) {
        getMutableKILNIOKEHMD().addAll(other.kILNIOKEHMD);
      }
      return this;
    }

    @Override
    public WolfBroGameData clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      id = 0;
      aLEPHLCKJJE = 0;
      cIMCFAAFMDP = false;
      jLMHCFDOKMO.clear();
      iKAPDMODPFD.clear();
      kILNIOKEHMD.clear();
      return this;
    }

    @Override
    public WolfBroGameData clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jLMHCFDOKMO.clearQuick();
      iKAPDMODPFD.clear();
      kILNIOKEHMD.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WolfBroGameData)) {
        return false;
      }
      WolfBroGameData other = (WolfBroGameData) o;
      return bitField0_ == other.bitField0_
        && (!hasId() || id == other.id)
        && (!hasALEPHLCKJJE() || aLEPHLCKJJE == other.aLEPHLCKJJE)
        && (!hasCIMCFAAFMDP() || cIMCFAAFMDP == other.cIMCFAAFMDP)
        && (!hasJLMHCFDOKMO() || jLMHCFDOKMO.equals(other.jLMHCFDOKMO))
        && (!hasIKAPDMODPFD() || iKAPDMODPFD.equals(other.iKAPDMODPFD))
        && (!hasKILNIOKEHMD() || kILNIOKEHMD.equals(other.kILNIOKEHMD));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(aLEPHLCKJJE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 104);
        output.writeBoolNoTag(cIMCFAAFMDP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 122);
        output.writeMessageNoTag(jLMHCFDOKMO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 74);
        output.writeStringNoTag(iKAPDMODPFD);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        for (int i = 0; i < kILNIOKEHMD.length(); i++) {
          output.writeRawByte((byte) 90);
          output.writeMessageNoTag(kILNIOKEHMD.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(aLEPHLCKJJE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(jLMHCFDOKMO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(iKAPDMODPFD);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += (1 * kILNIOKEHMD.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(kILNIOKEHMD);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WolfBroGameData mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 32: {
            // id
            id = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // aLEPHLCKJJE
            aLEPHLCKJJE = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // cIMCFAAFMDP
            cIMCFAAFMDP = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 122) {
              break;
            }
          }
          case 122: {
            // jLMHCFDOKMO
            input.readMessage(jLMHCFDOKMO);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 74) {
              break;
            }
          }
          case 74: {
            // iKAPDMODPFD
            input.readString(iKAPDMODPFD);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 90) {
              break;
            }
          }
          case 90: {
            // kILNIOKEHMD
            tag = input.readRepeatedMessage(kILNIOKEHMD, tag);
            bitField0_ |= 0x00000020;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.id, id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.aLEPHLCKJJE, aLEPHLCKJJE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.cIMCFAAFMDP, cIMCFAAFMDP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeMessage(FieldNames.jLMHCFDOKMO, jLMHCFDOKMO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeString(FieldNames.iKAPDMODPFD, iKAPDMODPFD);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRepeatedMessage(FieldNames.kILNIOKEHMD, kILNIOKEHMD);
      }
      output.endObject();
    }

    @Override
    public WolfBroGameData mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 3355: {
            if (input.isAtField(FieldNames.id)) {
              if (!input.trySkipNullValue()) {
                id = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 653475907: {
            if (input.isAtField(FieldNames.aLEPHLCKJJE)) {
              if (!input.trySkipNullValue()) {
                aLEPHLCKJJE = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1390695293: {
            if (input.isAtField(FieldNames.cIMCFAAFMDP)) {
              if (!input.trySkipNullValue()) {
                cIMCFAAFMDP = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1284814014: {
            if (input.isAtField(FieldNames.jLMHCFDOKMO)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(jLMHCFDOKMO);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1216375233: {
            if (input.isAtField(FieldNames.iKAPDMODPFD)) {
              if (!input.trySkipNullValue()) {
                input.readString(iKAPDMODPFD);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1818929281: {
            if (input.isAtField(FieldNames.kILNIOKEHMD)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(kILNIOKEHMD);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WolfBroGameData clone() {
      return new WolfBroGameData().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WolfBroGameData parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), data).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    /**
     * @return factory for creating WolfBroGameData messages
     */
    public static MessageFactory<WolfBroGameData> getFactory() {
      return WolfBroGameDataFactory.INSTANCE;
    }

    private enum WolfBroGameDataFactory implements MessageFactory<WolfBroGameData> {
      INSTANCE;

      @Override
      public WolfBroGameData create() {
        return WolfBroGameData.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName id = FieldName.forField("id");

      static final FieldName aLEPHLCKJJE = FieldName.forField("ALEPHLCKJJE");

      static final FieldName cIMCFAAFMDP = FieldName.forField("CIMCFAAFMDP");

      static final FieldName jLMHCFDOKMO = FieldName.forField("JLMHCFDOKMO");

      static final FieldName iKAPDMODPFD = FieldName.forField("IKAPDMODPFD");

      static final FieldName kILNIOKEHMD = FieldName.forField("KILNIOKEHMD");
    }
  }
}
