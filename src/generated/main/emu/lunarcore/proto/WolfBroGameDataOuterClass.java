// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class WolfBroGameDataOuterClass {
  /**
   * Protobuf type {@code WolfBroGameData}
   */
  public static final class WolfBroGameData extends ProtoMessage<WolfBroGameData> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 id = 8;</code>
     */
    private int id;

    /**
     * <code>optional uint32 NLIAEPNOKAE = 14;</code>
     */
    private int nLIAEPNOKAE;

    /**
     * <code>optional bool BOBGLLPPDKE = 13;</code>
     */
    private boolean bOBGLLPPDKE;

    /**
     * <code>optional .WolfBroGameInfo GGKOINMJHHK = 7;</code>
     */
    private final WolfBroGameInfoOuterClass.WolfBroGameInfo gGKOINMJHHK = WolfBroGameInfoOuterClass.WolfBroGameInfo.newInstance();

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     */
    private final Utf8String bBFJNPDGLGF = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     */
    private final RepeatedMessage<VectorOuterClass.Vector> fLPJKKCPIOO = RepeatedMessage.newEmptyInstance(VectorOuterClass.Vector.getFactory());

    private WolfBroGameData() {
    }

    /**
     * @return a new empty instance of {@code WolfBroGameData}
     */
    public static WolfBroGameData newInstance() {
      return new WolfBroGameData();
    }

    /**
     * <code>optional uint32 id = 8;</code>
     * @return whether the id field is set
     */
    public boolean hasId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 id = 8;</code>
     * @return this
     */
    public WolfBroGameData clearId() {
      bitField0_ &= ~0x00000001;
      id = 0;
      return this;
    }

    /**
     * <code>optional uint32 id = 8;</code>
     * @return the id
     */
    public int getId() {
      return id;
    }

    /**
     * <code>optional uint32 id = 8;</code>
     * @param value the id to set
     * @return this
     */
    public WolfBroGameData setId(final int value) {
      bitField0_ |= 0x00000001;
      id = value;
      return this;
    }

    /**
     * <code>optional uint32 NLIAEPNOKAE = 14;</code>
     * @return whether the nLIAEPNOKAE field is set
     */
    public boolean hasNLIAEPNOKAE() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 NLIAEPNOKAE = 14;</code>
     * @return this
     */
    public WolfBroGameData clearNLIAEPNOKAE() {
      bitField0_ &= ~0x00000002;
      nLIAEPNOKAE = 0;
      return this;
    }

    /**
     * <code>optional uint32 NLIAEPNOKAE = 14;</code>
     * @return the nLIAEPNOKAE
     */
    public int getNLIAEPNOKAE() {
      return nLIAEPNOKAE;
    }

    /**
     * <code>optional uint32 NLIAEPNOKAE = 14;</code>
     * @param value the nLIAEPNOKAE to set
     * @return this
     */
    public WolfBroGameData setNLIAEPNOKAE(final int value) {
      bitField0_ |= 0x00000002;
      nLIAEPNOKAE = value;
      return this;
    }

    /**
     * <code>optional bool BOBGLLPPDKE = 13;</code>
     * @return whether the bOBGLLPPDKE field is set
     */
    public boolean hasBOBGLLPPDKE() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool BOBGLLPPDKE = 13;</code>
     * @return this
     */
    public WolfBroGameData clearBOBGLLPPDKE() {
      bitField0_ &= ~0x00000004;
      bOBGLLPPDKE = false;
      return this;
    }

    /**
     * <code>optional bool BOBGLLPPDKE = 13;</code>
     * @return the bOBGLLPPDKE
     */
    public boolean getBOBGLLPPDKE() {
      return bOBGLLPPDKE;
    }

    /**
     * <code>optional bool BOBGLLPPDKE = 13;</code>
     * @param value the bOBGLLPPDKE to set
     * @return this
     */
    public WolfBroGameData setBOBGLLPPDKE(final boolean value) {
      bitField0_ |= 0x00000004;
      bOBGLLPPDKE = value;
      return this;
    }

    /**
     * <code>optional .WolfBroGameInfo GGKOINMJHHK = 7;</code>
     * @return whether the gGKOINMJHHK field is set
     */
    public boolean hasGGKOINMJHHK() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional .WolfBroGameInfo GGKOINMJHHK = 7;</code>
     * @return this
     */
    public WolfBroGameData clearGGKOINMJHHK() {
      bitField0_ &= ~0x00000008;
      gGKOINMJHHK.clear();
      return this;
    }

    /**
     * <code>optional .WolfBroGameInfo GGKOINMJHHK = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableGGKOINMJHHK()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getGGKOINMJHHK() {
      return gGKOINMJHHK;
    }

    /**
     * <code>optional .WolfBroGameInfo GGKOINMJHHK = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getMutableGGKOINMJHHK() {
      bitField0_ |= 0x00000008;
      return gGKOINMJHHK;
    }

    /**
     * <code>optional .WolfBroGameInfo GGKOINMJHHK = 7;</code>
     * @param value the gGKOINMJHHK to set
     * @return this
     */
    public WolfBroGameData setGGKOINMJHHK(final WolfBroGameInfoOuterClass.WolfBroGameInfo value) {
      bitField0_ |= 0x00000008;
      gGKOINMJHHK.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @return whether the bBFJNPDGLGF field is set
     */
    public boolean hasBBFJNPDGLGF() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @return this
     */
    public WolfBroGameData clearBBFJNPDGLGF() {
      bitField0_ &= ~0x00000010;
      bBFJNPDGLGF.clear();
      return this;
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @return the bBFJNPDGLGF
     */
    public String getBBFJNPDGLGF() {
      return bBFJNPDGLGF.getString();
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @return internal {@code Utf8String} representation of bBFJNPDGLGF for reading
     */
    public Utf8String getBBFJNPDGLGFBytes() {
      return this.bBFJNPDGLGF;
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @return internal {@code Utf8String} representation of bBFJNPDGLGF for modifications
     */
    public Utf8String getMutableBBFJNPDGLGFBytes() {
      bitField0_ |= 0x00000010;
      return this.bBFJNPDGLGF;
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @param value the bBFJNPDGLGF to set
     * @return this
     */
    public WolfBroGameData setBBFJNPDGLGF(final CharSequence value) {
      bitField0_ |= 0x00000010;
      bBFJNPDGLGF.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string BBFJNPDGLGF = 5;</code>
     * @param value the bBFJNPDGLGF to set
     * @return this
     */
    public WolfBroGameData setBBFJNPDGLGF(final Utf8String value) {
      bitField0_ |= 0x00000010;
      bBFJNPDGLGF.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     * @return whether the fLPJKKCPIOO field is set
     */
    public boolean hasFLPJKKCPIOO() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     * @return this
     */
    public WolfBroGameData clearFLPJKKCPIOO() {
      bitField0_ &= ~0x00000020;
      fLPJKKCPIOO.clear();
      return this;
    }

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableFLPJKKCPIOO()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<VectorOuterClass.Vector> getFLPJKKCPIOO() {
      return fLPJKKCPIOO;
    }

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<VectorOuterClass.Vector> getMutableFLPJKKCPIOO() {
      bitField0_ |= 0x00000020;
      return fLPJKKCPIOO;
    }

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     * @param value the fLPJKKCPIOO to add
     * @return this
     */
    public WolfBroGameData addFLPJKKCPIOO(final VectorOuterClass.Vector value) {
      bitField0_ |= 0x00000020;
      fLPJKKCPIOO.add(value);
      return this;
    }

    /**
     * <code>repeated .Vector FLPJKKCPIOO = 6;</code>
     * @param values the fLPJKKCPIOO to add
     * @return this
     */
    public WolfBroGameData addAllFLPJKKCPIOO(final VectorOuterClass.Vector... values) {
      bitField0_ |= 0x00000020;
      fLPJKKCPIOO.addAll(values);
      return this;
    }

    @Override
    public WolfBroGameData copyFrom(final WolfBroGameData other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        id = other.id;
        nLIAEPNOKAE = other.nLIAEPNOKAE;
        bOBGLLPPDKE = other.bOBGLLPPDKE;
        gGKOINMJHHK.copyFrom(other.gGKOINMJHHK);
        bBFJNPDGLGF.copyFrom(other.bBFJNPDGLGF);
        fLPJKKCPIOO.copyFrom(other.fLPJKKCPIOO);
      }
      return this;
    }

    @Override
    public WolfBroGameData mergeFrom(final WolfBroGameData other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasId()) {
        setId(other.id);
      }
      if (other.hasNLIAEPNOKAE()) {
        setNLIAEPNOKAE(other.nLIAEPNOKAE);
      }
      if (other.hasBOBGLLPPDKE()) {
        setBOBGLLPPDKE(other.bOBGLLPPDKE);
      }
      if (other.hasGGKOINMJHHK()) {
        getMutableGGKOINMJHHK().mergeFrom(other.gGKOINMJHHK);
      }
      if (other.hasBBFJNPDGLGF()) {
        getMutableBBFJNPDGLGFBytes().copyFrom(other.bBFJNPDGLGF);
      }
      if (other.hasFLPJKKCPIOO()) {
        getMutableFLPJKKCPIOO().addAll(other.fLPJKKCPIOO);
      }
      return this;
    }

    @Override
    public WolfBroGameData clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      id = 0;
      nLIAEPNOKAE = 0;
      bOBGLLPPDKE = false;
      gGKOINMJHHK.clear();
      bBFJNPDGLGF.clear();
      fLPJKKCPIOO.clear();
      return this;
    }

    @Override
    public WolfBroGameData clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      gGKOINMJHHK.clearQuick();
      bBFJNPDGLGF.clear();
      fLPJKKCPIOO.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WolfBroGameData)) {
        return false;
      }
      WolfBroGameData other = (WolfBroGameData) o;
      return bitField0_ == other.bitField0_
        && (!hasId() || id == other.id)
        && (!hasNLIAEPNOKAE() || nLIAEPNOKAE == other.nLIAEPNOKAE)
        && (!hasBOBGLLPPDKE() || bOBGLLPPDKE == other.bOBGLLPPDKE)
        && (!hasGGKOINMJHHK() || gGKOINMJHHK.equals(other.gGKOINMJHHK))
        && (!hasBBFJNPDGLGF() || bBFJNPDGLGF.equals(other.bBFJNPDGLGF))
        && (!hasFLPJKKCPIOO() || fLPJKKCPIOO.equals(other.fLPJKKCPIOO));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(nLIAEPNOKAE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 104);
        output.writeBoolNoTag(bOBGLLPPDKE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 58);
        output.writeMessageNoTag(gGKOINMJHHK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 42);
        output.writeStringNoTag(bBFJNPDGLGF);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        for (int i = 0; i < fLPJKKCPIOO.length(); i++) {
          output.writeRawByte((byte) 50);
          output.writeMessageNoTag(fLPJKKCPIOO.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nLIAEPNOKAE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(gGKOINMJHHK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(bBFJNPDGLGF);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += (1 * fLPJKKCPIOO.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(fLPJKKCPIOO);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WolfBroGameData mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 64: {
            // id
            id = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // nLIAEPNOKAE
            nLIAEPNOKAE = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // bOBGLLPPDKE
            bOBGLLPPDKE = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // gGKOINMJHHK
            input.readMessage(gGKOINMJHHK);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 42) {
              break;
            }
          }
          case 42: {
            // bBFJNPDGLGF
            input.readString(bBFJNPDGLGF);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // fLPJKKCPIOO
            tag = input.readRepeatedMessage(fLPJKKCPIOO, tag);
            bitField0_ |= 0x00000020;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.id, id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.nLIAEPNOKAE, nLIAEPNOKAE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.bOBGLLPPDKE, bOBGLLPPDKE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeMessage(FieldNames.gGKOINMJHHK, gGKOINMJHHK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeString(FieldNames.bBFJNPDGLGF, bBFJNPDGLGF);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRepeatedMessage(FieldNames.fLPJKKCPIOO, fLPJKKCPIOO);
      }
      output.endObject();
    }

    @Override
    public WolfBroGameData mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 3355: {
            if (input.isAtField(FieldNames.id)) {
              if (!input.trySkipNullValue()) {
                id = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1512961645: {
            if (input.isAtField(FieldNames.nLIAEPNOKAE)) {
              if (!input.trySkipNullValue()) {
                nLIAEPNOKAE = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 156152716: {
            if (input.isAtField(FieldNames.bOBGLLPPDKE)) {
              if (!input.trySkipNullValue()) {
                bOBGLLPPDKE = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 695600069: {
            if (input.isAtField(FieldNames.gGKOINMJHHK)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(gGKOINMJHHK);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1707344702: {
            if (input.isAtField(FieldNames.bBFJNPDGLGF)) {
              if (!input.trySkipNullValue()) {
                input.readString(bBFJNPDGLGF);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1676373572: {
            if (input.isAtField(FieldNames.fLPJKKCPIOO)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(fLPJKKCPIOO);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WolfBroGameData clone() {
      return new WolfBroGameData().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WolfBroGameData parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), data).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    /**
     * @return factory for creating WolfBroGameData messages
     */
    public static MessageFactory<WolfBroGameData> getFactory() {
      return WolfBroGameDataFactory.INSTANCE;
    }

    private enum WolfBroGameDataFactory implements MessageFactory<WolfBroGameData> {
      INSTANCE;

      @Override
      public WolfBroGameData create() {
        return WolfBroGameData.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName id = FieldName.forField("id");

      static final FieldName nLIAEPNOKAE = FieldName.forField("NLIAEPNOKAE");

      static final FieldName bOBGLLPPDKE = FieldName.forField("BOBGLLPPDKE");

      static final FieldName gGKOINMJHHK = FieldName.forField("GGKOINMJHHK");

      static final FieldName bBFJNPDGLGF = FieldName.forField("BBFJNPDGLGF");

      static final FieldName fLPJKKCPIOO = FieldName.forField("FLPJKKCPIOO");
    }
  }
}
