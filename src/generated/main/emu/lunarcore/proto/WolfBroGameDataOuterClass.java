// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class WolfBroGameDataOuterClass {
  /**
   * <pre>
   *  Poghanmoacb
   * </pre>
   *
   * Protobuf type {@code WolfBroGameData}
   */
  public static final class WolfBroGameData extends ProtoMessage<WolfBroGameData> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 id = 10;</code>
     */
    private int id;

    /**
     * <code>optional bool nmpeaingfpg = 12;</code>
     */
    private boolean nmpeaingfpg;

    /**
     * <pre>
     *  uint32 jebmddjcadh = 11;
     * </pre>
     *
     * <code>optional .WolfBroGameInfo pmaggbijfkc = 4;</code>
     */
    private final WolfBroGameInfoOuterClass.WolfBroGameInfo pmaggbijfkc = WolfBroGameInfoOuterClass.WolfBroGameInfo.newInstance();

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     */
    private final Utf8String npgnkdnhkna = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     */
    private final RepeatedMessage<VectorOuterClass.Vector> jojfkijfeki = RepeatedMessage.newEmptyInstance(VectorOuterClass.Vector.getFactory());

    private WolfBroGameData() {
    }

    /**
     * <pre>
     *  Poghanmoacb
     * </pre>
     *
     * @return a new empty instance of {@code WolfBroGameData}
     */
    public static WolfBroGameData newInstance() {
      return new WolfBroGameData();
    }

    /**
     * <code>optional uint32 id = 10;</code>
     * @return whether the id field is set
     */
    public boolean hasId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 id = 10;</code>
     * @return this
     */
    public WolfBroGameData clearId() {
      bitField0_ &= ~0x00000001;
      id = 0;
      return this;
    }

    /**
     * <code>optional uint32 id = 10;</code>
     * @return the id
     */
    public int getId() {
      return id;
    }

    /**
     * <code>optional uint32 id = 10;</code>
     * @param value the id to set
     * @return this
     */
    public WolfBroGameData setId(final int value) {
      bitField0_ |= 0x00000001;
      id = value;
      return this;
    }

    /**
     * <code>optional bool nmpeaingfpg = 12;</code>
     * @return whether the nmpeaingfpg field is set
     */
    public boolean hasNmpeaingfpg() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool nmpeaingfpg = 12;</code>
     * @return this
     */
    public WolfBroGameData clearNmpeaingfpg() {
      bitField0_ &= ~0x00000002;
      nmpeaingfpg = false;
      return this;
    }

    /**
     * <code>optional bool nmpeaingfpg = 12;</code>
     * @return the nmpeaingfpg
     */
    public boolean getNmpeaingfpg() {
      return nmpeaingfpg;
    }

    /**
     * <code>optional bool nmpeaingfpg = 12;</code>
     * @param value the nmpeaingfpg to set
     * @return this
     */
    public WolfBroGameData setNmpeaingfpg(final boolean value) {
      bitField0_ |= 0x00000002;
      nmpeaingfpg = value;
      return this;
    }

    /**
     * <pre>
     *  uint32 jebmddjcadh = 11;
     * </pre>
     *
     * <code>optional .WolfBroGameInfo pmaggbijfkc = 4;</code>
     * @return whether the pmaggbijfkc field is set
     */
    public boolean hasPmaggbijfkc() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <pre>
     *  uint32 jebmddjcadh = 11;
     * </pre>
     *
     * <code>optional .WolfBroGameInfo pmaggbijfkc = 4;</code>
     * @return this
     */
    public WolfBroGameData clearPmaggbijfkc() {
      bitField0_ &= ~0x00000004;
      pmaggbijfkc.clear();
      return this;
    }

    /**
     * <pre>
     *  uint32 jebmddjcadh = 11;
     * </pre>
     *
     * <code>optional .WolfBroGameInfo pmaggbijfkc = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutablePmaggbijfkc()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getPmaggbijfkc() {
      return pmaggbijfkc;
    }

    /**
     * <pre>
     *  uint32 jebmddjcadh = 11;
     * </pre>
     *
     * <code>optional .WolfBroGameInfo pmaggbijfkc = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public WolfBroGameInfoOuterClass.WolfBroGameInfo getMutablePmaggbijfkc() {
      bitField0_ |= 0x00000004;
      return pmaggbijfkc;
    }

    /**
     * <pre>
     *  uint32 jebmddjcadh = 11;
     * </pre>
     *
     * <code>optional .WolfBroGameInfo pmaggbijfkc = 4;</code>
     * @param value the pmaggbijfkc to set
     * @return this
     */
    public WolfBroGameData setPmaggbijfkc(final WolfBroGameInfoOuterClass.WolfBroGameInfo value) {
      bitField0_ |= 0x00000004;
      pmaggbijfkc.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @return whether the npgnkdnhkna field is set
     */
    public boolean hasNpgnkdnhkna() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @return this
     */
    public WolfBroGameData clearNpgnkdnhkna() {
      bitField0_ &= ~0x00000008;
      npgnkdnhkna.clear();
      return this;
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @return the npgnkdnhkna
     */
    public String getNpgnkdnhkna() {
      return npgnkdnhkna.getString();
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @return internal {@code Utf8String} representation of npgnkdnhkna for reading
     */
    public Utf8String getNpgnkdnhknaBytes() {
      return this.npgnkdnhkna;
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @return internal {@code Utf8String} representation of npgnkdnhkna for modifications
     */
    public Utf8String getMutableNpgnkdnhknaBytes() {
      bitField0_ |= 0x00000008;
      return this.npgnkdnhkna;
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @param value the npgnkdnhkna to set
     * @return this
     */
    public WolfBroGameData setNpgnkdnhkna(final CharSequence value) {
      bitField0_ |= 0x00000008;
      npgnkdnhkna.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string npgnkdnhkna = 5;</code>
     * @param value the npgnkdnhkna to set
     * @return this
     */
    public WolfBroGameData setNpgnkdnhkna(final Utf8String value) {
      bitField0_ |= 0x00000008;
      npgnkdnhkna.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     * @return whether the jojfkijfeki field is set
     */
    public boolean hasJojfkijfeki() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     * @return this
     */
    public WolfBroGameData clearJojfkijfeki() {
      bitField0_ &= ~0x00000010;
      jojfkijfeki.clear();
      return this;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJojfkijfeki()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<VectorOuterClass.Vector> getJojfkijfeki() {
      return jojfkijfeki;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<VectorOuterClass.Vector> getMutableJojfkijfeki() {
      bitField0_ |= 0x00000010;
      return jojfkijfeki;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     * @param value the jojfkijfeki to add
     * @return this
     */
    public WolfBroGameData addJojfkijfeki(final VectorOuterClass.Vector value) {
      bitField0_ |= 0x00000010;
      jojfkijfeki.add(value);
      return this;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 7;</code>
     * @param values the jojfkijfeki to add
     * @return this
     */
    public WolfBroGameData addAllJojfkijfeki(final VectorOuterClass.Vector... values) {
      bitField0_ |= 0x00000010;
      jojfkijfeki.addAll(values);
      return this;
    }

    @Override
    public WolfBroGameData copyFrom(final WolfBroGameData other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        id = other.id;
        nmpeaingfpg = other.nmpeaingfpg;
        pmaggbijfkc.copyFrom(other.pmaggbijfkc);
        npgnkdnhkna.copyFrom(other.npgnkdnhkna);
        jojfkijfeki.copyFrom(other.jojfkijfeki);
      }
      return this;
    }

    @Override
    public WolfBroGameData mergeFrom(final WolfBroGameData other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasId()) {
        setId(other.id);
      }
      if (other.hasNmpeaingfpg()) {
        setNmpeaingfpg(other.nmpeaingfpg);
      }
      if (other.hasPmaggbijfkc()) {
        getMutablePmaggbijfkc().mergeFrom(other.pmaggbijfkc);
      }
      if (other.hasNpgnkdnhkna()) {
        getMutableNpgnkdnhknaBytes().copyFrom(other.npgnkdnhkna);
      }
      if (other.hasJojfkijfeki()) {
        getMutableJojfkijfeki().addAll(other.jojfkijfeki);
      }
      return this;
    }

    @Override
    public WolfBroGameData clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      id = 0;
      nmpeaingfpg = false;
      pmaggbijfkc.clear();
      npgnkdnhkna.clear();
      jojfkijfeki.clear();
      return this;
    }

    @Override
    public WolfBroGameData clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      pmaggbijfkc.clearQuick();
      npgnkdnhkna.clear();
      jojfkijfeki.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WolfBroGameData)) {
        return false;
      }
      WolfBroGameData other = (WolfBroGameData) o;
      return bitField0_ == other.bitField0_
        && (!hasId() || id == other.id)
        && (!hasNmpeaingfpg() || nmpeaingfpg == other.nmpeaingfpg)
        && (!hasPmaggbijfkc() || pmaggbijfkc.equals(other.pmaggbijfkc))
        && (!hasNpgnkdnhkna() || npgnkdnhkna.equals(other.npgnkdnhkna))
        && (!hasJojfkijfeki() || jojfkijfeki.equals(other.jojfkijfeki));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 96);
        output.writeBoolNoTag(nmpeaingfpg);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 34);
        output.writeMessageNoTag(pmaggbijfkc);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 42);
        output.writeStringNoTag(npgnkdnhkna);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        for (int i = 0; i < jojfkijfeki.length(); i++) {
          output.writeRawByte((byte) 58);
          output.writeMessageNoTag(jojfkijfeki.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(pmaggbijfkc);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(npgnkdnhkna);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += (1 * jojfkijfeki.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(jojfkijfeki);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WolfBroGameData mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 80: {
            // id
            id = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // nmpeaingfpg
            nmpeaingfpg = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // pmaggbijfkc
            input.readMessage(pmaggbijfkc);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 42) {
              break;
            }
          }
          case 42: {
            // npgnkdnhkna
            input.readString(npgnkdnhkna);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // jojfkijfeki
            tag = input.readRepeatedMessage(jojfkijfeki, tag);
            bitField0_ |= 0x00000010;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.id, id);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.nmpeaingfpg, nmpeaingfpg);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeMessage(FieldNames.pmaggbijfkc, pmaggbijfkc);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeString(FieldNames.npgnkdnhkna, npgnkdnhkna);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRepeatedMessage(FieldNames.jojfkijfeki, jojfkijfeki);
      }
      output.endObject();
    }

    @Override
    public WolfBroGameData mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 3355: {
            if (input.isAtField(FieldNames.id)) {
              if (!input.trySkipNullValue()) {
                id = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1678179608: {
            if (input.isAtField(FieldNames.nmpeaingfpg)) {
              if (!input.trySkipNullValue()) {
                nmpeaingfpg = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 380673855: {
            if (input.isAtField(FieldNames.pmaggbijfkc)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(pmaggbijfkc);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -238117022: {
            if (input.isAtField(FieldNames.npgnkdnhkna)) {
              if (!input.trySkipNullValue()) {
                input.readString(npgnkdnhkna);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 805643976: {
            if (input.isAtField(FieldNames.jojfkijfeki)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(jojfkijfeki);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WolfBroGameData clone() {
      return new WolfBroGameData().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WolfBroGameData parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), data).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    public static WolfBroGameData parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameData(), input).checkInitialized();
    }

    /**
     * @return factory for creating WolfBroGameData messages
     */
    public static MessageFactory<WolfBroGameData> getFactory() {
      return WolfBroGameDataFactory.INSTANCE;
    }

    private enum WolfBroGameDataFactory implements MessageFactory<WolfBroGameData> {
      INSTANCE;

      @Override
      public WolfBroGameData create() {
        return WolfBroGameData.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName id = FieldName.forField("id");

      static final FieldName nmpeaingfpg = FieldName.forField("nmpeaingfpg");

      static final FieldName pmaggbijfkc = FieldName.forField("pmaggbijfkc");

      static final FieldName npgnkdnhkna = FieldName.forField("npgnkdnhkna");

      static final FieldName jojfkijfeki = FieldName.forField("jojfkijfeki");
    }
  }
}
