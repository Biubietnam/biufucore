// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerSettingInfoOuterClass {
  /**
   * Protobuf type {@code PlayerSettingInfo}
   */
  public static final class PlayerSettingInfo extends ProtoMessage<PlayerSettingInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional bool LJDEMIHBKAJ = 1;</code>
     */
    private boolean lJDEMIHBKAJ;

    /**
     * <code>optional bool DAAAIHDPCFE = 2;</code>
     */
    private boolean dAAAIHDPCFE;

    /**
     * <code>optional bool MOKMEEDBECL = 3;</code>
     */
    private boolean mOKMEEDBECL;

    /**
     * <code>optional bool AOLKDAJONOH = 7;</code>
     */
    private boolean aOLKDAJONOH;

    /**
     * <code>optional bool FLJHGDKONLC = 9;</code>
     */
    private boolean fLJHGDKONLC;

    /**
     * <code>optional bool MAJIMDCHNDL = 11;</code>
     */
    private boolean mAJIMDCHNDL;

    /**
     * <code>optional bool BBJGEGEJJFB = 12;</code>
     */
    private boolean bBJGEGEJJFB;

    /**
     * <code>optional bool OJNELKIOAOK = 14;</code>
     */
    private boolean oJNELKIOAOK;

    /**
     * <code>optional bool LLNLDDKKGPH = 15;</code>
     */
    private boolean lLNLDDKKGPH;

    private PlayerSettingInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerSettingInfo}
     */
    public static PlayerSettingInfo newInstance() {
      return new PlayerSettingInfo();
    }

    /**
     * <code>optional bool LJDEMIHBKAJ = 1;</code>
     * @return whether the lJDEMIHBKAJ field is set
     */
    public boolean hasLJDEMIHBKAJ() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional bool LJDEMIHBKAJ = 1;</code>
     * @return this
     */
    public PlayerSettingInfo clearLJDEMIHBKAJ() {
      bitField0_ &= ~0x00000001;
      lJDEMIHBKAJ = false;
      return this;
    }

    /**
     * <code>optional bool LJDEMIHBKAJ = 1;</code>
     * @return the lJDEMIHBKAJ
     */
    public boolean getLJDEMIHBKAJ() {
      return lJDEMIHBKAJ;
    }

    /**
     * <code>optional bool LJDEMIHBKAJ = 1;</code>
     * @param value the lJDEMIHBKAJ to set
     * @return this
     */
    public PlayerSettingInfo setLJDEMIHBKAJ(final boolean value) {
      bitField0_ |= 0x00000001;
      lJDEMIHBKAJ = value;
      return this;
    }

    /**
     * <code>optional bool DAAAIHDPCFE = 2;</code>
     * @return whether the dAAAIHDPCFE field is set
     */
    public boolean hasDAAAIHDPCFE() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool DAAAIHDPCFE = 2;</code>
     * @return this
     */
    public PlayerSettingInfo clearDAAAIHDPCFE() {
      bitField0_ &= ~0x00000002;
      dAAAIHDPCFE = false;
      return this;
    }

    /**
     * <code>optional bool DAAAIHDPCFE = 2;</code>
     * @return the dAAAIHDPCFE
     */
    public boolean getDAAAIHDPCFE() {
      return dAAAIHDPCFE;
    }

    /**
     * <code>optional bool DAAAIHDPCFE = 2;</code>
     * @param value the dAAAIHDPCFE to set
     * @return this
     */
    public PlayerSettingInfo setDAAAIHDPCFE(final boolean value) {
      bitField0_ |= 0x00000002;
      dAAAIHDPCFE = value;
      return this;
    }

    /**
     * <code>optional bool MOKMEEDBECL = 3;</code>
     * @return whether the mOKMEEDBECL field is set
     */
    public boolean hasMOKMEEDBECL() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool MOKMEEDBECL = 3;</code>
     * @return this
     */
    public PlayerSettingInfo clearMOKMEEDBECL() {
      bitField0_ &= ~0x00000004;
      mOKMEEDBECL = false;
      return this;
    }

    /**
     * <code>optional bool MOKMEEDBECL = 3;</code>
     * @return the mOKMEEDBECL
     */
    public boolean getMOKMEEDBECL() {
      return mOKMEEDBECL;
    }

    /**
     * <code>optional bool MOKMEEDBECL = 3;</code>
     * @param value the mOKMEEDBECL to set
     * @return this
     */
    public PlayerSettingInfo setMOKMEEDBECL(final boolean value) {
      bitField0_ |= 0x00000004;
      mOKMEEDBECL = value;
      return this;
    }

    /**
     * <code>optional bool AOLKDAJONOH = 7;</code>
     * @return whether the aOLKDAJONOH field is set
     */
    public boolean hasAOLKDAJONOH() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool AOLKDAJONOH = 7;</code>
     * @return this
     */
    public PlayerSettingInfo clearAOLKDAJONOH() {
      bitField0_ &= ~0x00000008;
      aOLKDAJONOH = false;
      return this;
    }

    /**
     * <code>optional bool AOLKDAJONOH = 7;</code>
     * @return the aOLKDAJONOH
     */
    public boolean getAOLKDAJONOH() {
      return aOLKDAJONOH;
    }

    /**
     * <code>optional bool AOLKDAJONOH = 7;</code>
     * @param value the aOLKDAJONOH to set
     * @return this
     */
    public PlayerSettingInfo setAOLKDAJONOH(final boolean value) {
      bitField0_ |= 0x00000008;
      aOLKDAJONOH = value;
      return this;
    }

    /**
     * <code>optional bool FLJHGDKONLC = 9;</code>
     * @return whether the fLJHGDKONLC field is set
     */
    public boolean hasFLJHGDKONLC() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool FLJHGDKONLC = 9;</code>
     * @return this
     */
    public PlayerSettingInfo clearFLJHGDKONLC() {
      bitField0_ &= ~0x00000010;
      fLJHGDKONLC = false;
      return this;
    }

    /**
     * <code>optional bool FLJHGDKONLC = 9;</code>
     * @return the fLJHGDKONLC
     */
    public boolean getFLJHGDKONLC() {
      return fLJHGDKONLC;
    }

    /**
     * <code>optional bool FLJHGDKONLC = 9;</code>
     * @param value the fLJHGDKONLC to set
     * @return this
     */
    public PlayerSettingInfo setFLJHGDKONLC(final boolean value) {
      bitField0_ |= 0x00000010;
      fLJHGDKONLC = value;
      return this;
    }

    /**
     * <code>optional bool MAJIMDCHNDL = 11;</code>
     * @return whether the mAJIMDCHNDL field is set
     */
    public boolean hasMAJIMDCHNDL() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional bool MAJIMDCHNDL = 11;</code>
     * @return this
     */
    public PlayerSettingInfo clearMAJIMDCHNDL() {
      bitField0_ &= ~0x00000020;
      mAJIMDCHNDL = false;
      return this;
    }

    /**
     * <code>optional bool MAJIMDCHNDL = 11;</code>
     * @return the mAJIMDCHNDL
     */
    public boolean getMAJIMDCHNDL() {
      return mAJIMDCHNDL;
    }

    /**
     * <code>optional bool MAJIMDCHNDL = 11;</code>
     * @param value the mAJIMDCHNDL to set
     * @return this
     */
    public PlayerSettingInfo setMAJIMDCHNDL(final boolean value) {
      bitField0_ |= 0x00000020;
      mAJIMDCHNDL = value;
      return this;
    }

    /**
     * <code>optional bool BBJGEGEJJFB = 12;</code>
     * @return whether the bBJGEGEJJFB field is set
     */
    public boolean hasBBJGEGEJJFB() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional bool BBJGEGEJJFB = 12;</code>
     * @return this
     */
    public PlayerSettingInfo clearBBJGEGEJJFB() {
      bitField0_ &= ~0x00000040;
      bBJGEGEJJFB = false;
      return this;
    }

    /**
     * <code>optional bool BBJGEGEJJFB = 12;</code>
     * @return the bBJGEGEJJFB
     */
    public boolean getBBJGEGEJJFB() {
      return bBJGEGEJJFB;
    }

    /**
     * <code>optional bool BBJGEGEJJFB = 12;</code>
     * @param value the bBJGEGEJJFB to set
     * @return this
     */
    public PlayerSettingInfo setBBJGEGEJJFB(final boolean value) {
      bitField0_ |= 0x00000040;
      bBJGEGEJJFB = value;
      return this;
    }

    /**
     * <code>optional bool OJNELKIOAOK = 14;</code>
     * @return whether the oJNELKIOAOK field is set
     */
    public boolean hasOJNELKIOAOK() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional bool OJNELKIOAOK = 14;</code>
     * @return this
     */
    public PlayerSettingInfo clearOJNELKIOAOK() {
      bitField0_ &= ~0x00000080;
      oJNELKIOAOK = false;
      return this;
    }

    /**
     * <code>optional bool OJNELKIOAOK = 14;</code>
     * @return the oJNELKIOAOK
     */
    public boolean getOJNELKIOAOK() {
      return oJNELKIOAOK;
    }

    /**
     * <code>optional bool OJNELKIOAOK = 14;</code>
     * @param value the oJNELKIOAOK to set
     * @return this
     */
    public PlayerSettingInfo setOJNELKIOAOK(final boolean value) {
      bitField0_ |= 0x00000080;
      oJNELKIOAOK = value;
      return this;
    }

    /**
     * <code>optional bool LLNLDDKKGPH = 15;</code>
     * @return whether the lLNLDDKKGPH field is set
     */
    public boolean hasLLNLDDKKGPH() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional bool LLNLDDKKGPH = 15;</code>
     * @return this
     */
    public PlayerSettingInfo clearLLNLDDKKGPH() {
      bitField0_ &= ~0x00000100;
      lLNLDDKKGPH = false;
      return this;
    }

    /**
     * <code>optional bool LLNLDDKKGPH = 15;</code>
     * @return the lLNLDDKKGPH
     */
    public boolean getLLNLDDKKGPH() {
      return lLNLDDKKGPH;
    }

    /**
     * <code>optional bool LLNLDDKKGPH = 15;</code>
     * @param value the lLNLDDKKGPH to set
     * @return this
     */
    public PlayerSettingInfo setLLNLDDKKGPH(final boolean value) {
      bitField0_ |= 0x00000100;
      lLNLDDKKGPH = value;
      return this;
    }

    @Override
    public PlayerSettingInfo copyFrom(final PlayerSettingInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        lJDEMIHBKAJ = other.lJDEMIHBKAJ;
        dAAAIHDPCFE = other.dAAAIHDPCFE;
        mOKMEEDBECL = other.mOKMEEDBECL;
        aOLKDAJONOH = other.aOLKDAJONOH;
        fLJHGDKONLC = other.fLJHGDKONLC;
        mAJIMDCHNDL = other.mAJIMDCHNDL;
        bBJGEGEJJFB = other.bBJGEGEJJFB;
        oJNELKIOAOK = other.oJNELKIOAOK;
        lLNLDDKKGPH = other.lLNLDDKKGPH;
      }
      return this;
    }

    @Override
    public PlayerSettingInfo mergeFrom(final PlayerSettingInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasLJDEMIHBKAJ()) {
        setLJDEMIHBKAJ(other.lJDEMIHBKAJ);
      }
      if (other.hasDAAAIHDPCFE()) {
        setDAAAIHDPCFE(other.dAAAIHDPCFE);
      }
      if (other.hasMOKMEEDBECL()) {
        setMOKMEEDBECL(other.mOKMEEDBECL);
      }
      if (other.hasAOLKDAJONOH()) {
        setAOLKDAJONOH(other.aOLKDAJONOH);
      }
      if (other.hasFLJHGDKONLC()) {
        setFLJHGDKONLC(other.fLJHGDKONLC);
      }
      if (other.hasMAJIMDCHNDL()) {
        setMAJIMDCHNDL(other.mAJIMDCHNDL);
      }
      if (other.hasBBJGEGEJJFB()) {
        setBBJGEGEJJFB(other.bBJGEGEJJFB);
      }
      if (other.hasOJNELKIOAOK()) {
        setOJNELKIOAOK(other.oJNELKIOAOK);
      }
      if (other.hasLLNLDDKKGPH()) {
        setLLNLDDKKGPH(other.lLNLDDKKGPH);
      }
      return this;
    }

    @Override
    public PlayerSettingInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      lJDEMIHBKAJ = false;
      dAAAIHDPCFE = false;
      mOKMEEDBECL = false;
      aOLKDAJONOH = false;
      fLJHGDKONLC = false;
      mAJIMDCHNDL = false;
      bBJGEGEJJFB = false;
      oJNELKIOAOK = false;
      lLNLDDKKGPH = false;
      return this;
    }

    @Override
    public PlayerSettingInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerSettingInfo)) {
        return false;
      }
      PlayerSettingInfo other = (PlayerSettingInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasLJDEMIHBKAJ() || lJDEMIHBKAJ == other.lJDEMIHBKAJ)
        && (!hasDAAAIHDPCFE() || dAAAIHDPCFE == other.dAAAIHDPCFE)
        && (!hasMOKMEEDBECL() || mOKMEEDBECL == other.mOKMEEDBECL)
        && (!hasAOLKDAJONOH() || aOLKDAJONOH == other.aOLKDAJONOH)
        && (!hasFLJHGDKONLC() || fLJHGDKONLC == other.fLJHGDKONLC)
        && (!hasMAJIMDCHNDL() || mAJIMDCHNDL == other.mAJIMDCHNDL)
        && (!hasBBJGEGEJJFB() || bBJGEGEJJFB == other.bBJGEGEJJFB)
        && (!hasOJNELKIOAOK() || oJNELKIOAOK == other.oJNELKIOAOK)
        && (!hasLLNLDDKKGPH() || lLNLDDKKGPH == other.lLNLDDKKGPH);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeBoolNoTag(lJDEMIHBKAJ);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 16);
        output.writeBoolNoTag(dAAAIHDPCFE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 24);
        output.writeBoolNoTag(mOKMEEDBECL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 56);
        output.writeBoolNoTag(aOLKDAJONOH);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 72);
        output.writeBoolNoTag(fLJHGDKONLC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 88);
        output.writeBoolNoTag(mAJIMDCHNDL);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 96);
        output.writeBoolNoTag(bBJGEGEJJFB);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 112);
        output.writeBoolNoTag(oJNELKIOAOK);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 120);
        output.writeBoolNoTag(lLNLDDKKGPH);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerSettingInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // lJDEMIHBKAJ
            lJDEMIHBKAJ = input.readBool();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
          case 16: {
            // dAAAIHDPCFE
            dAAAIHDPCFE = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 24) {
              break;
            }
          }
          case 24: {
            // mOKMEEDBECL
            mOKMEEDBECL = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // aOLKDAJONOH
            aOLKDAJONOH = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // fLJHGDKONLC
            fLJHGDKONLC = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // mAJIMDCHNDL
            mAJIMDCHNDL = input.readBool();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // bBJGEGEJJFB
            bBJGEGEJJFB = input.readBool();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // oJNELKIOAOK
            oJNELKIOAOK = input.readBool();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // lLNLDDKKGPH
            lLNLDDKKGPH = input.readBool();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeBool(FieldNames.lJDEMIHBKAJ, lJDEMIHBKAJ);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.dAAAIHDPCFE, dAAAIHDPCFE);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.mOKMEEDBECL, mOKMEEDBECL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.aOLKDAJONOH, aOLKDAJONOH);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.fLJHGDKONLC, fLJHGDKONLC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeBool(FieldNames.mAJIMDCHNDL, mAJIMDCHNDL);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeBool(FieldNames.bBJGEGEJJFB, bBJGEGEJJFB);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeBool(FieldNames.oJNELKIOAOK, oJNELKIOAOK);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeBool(FieldNames.lLNLDDKKGPH, lLNLDDKKGPH);
      }
      output.endObject();
    }

    @Override
    public PlayerSettingInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1662669057: {
            if (input.isAtField(FieldNames.lJDEMIHBKAJ)) {
              if (!input.trySkipNullValue()) {
                lJDEMIHBKAJ = input.readBool();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 760822394: {
            if (input.isAtField(FieldNames.dAAAIHDPCFE)) {
              if (!input.trySkipNullValue()) {
                dAAAIHDPCFE = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1780197748: {
            if (input.isAtField(FieldNames.mOKMEEDBECL)) {
              if (!input.trySkipNullValue()) {
                mOKMEEDBECL = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 609158680: {
            if (input.isAtField(FieldNames.aOLKDAJONOH)) {
              if (!input.trySkipNullValue()) {
                aOLKDAJONOH = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1939676832: {
            if (input.isAtField(FieldNames.fLJHGDKONLC)) {
              if (!input.trySkipNullValue()) {
                fLJHGDKONLC = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1417098649: {
            if (input.isAtField(FieldNames.mAJIMDCHNDL)) {
              if (!input.trySkipNullValue()) {
                mAJIMDCHNDL = input.readBool();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -934941630: {
            if (input.isAtField(FieldNames.bBJGEGEJJFB)) {
              if (!input.trySkipNullValue()) {
                bBJGEGEJJFB = input.readBool();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -187207738: {
            if (input.isAtField(FieldNames.oJNELKIOAOK)) {
              if (!input.trySkipNullValue()) {
                oJNELKIOAOK = input.readBool();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1121657249: {
            if (input.isAtField(FieldNames.lLNLDDKKGPH)) {
              if (!input.trySkipNullValue()) {
                lLNLDDKKGPH = input.readBool();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerSettingInfo clone() {
      return new PlayerSettingInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerSettingInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), data).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerSettingInfo messages
     */
    public static MessageFactory<PlayerSettingInfo> getFactory() {
      return PlayerSettingInfoFactory.INSTANCE;
    }

    private enum PlayerSettingInfoFactory implements MessageFactory<PlayerSettingInfo> {
      INSTANCE;

      @Override
      public PlayerSettingInfo create() {
        return PlayerSettingInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName lJDEMIHBKAJ = FieldName.forField("LJDEMIHBKAJ");

      static final FieldName dAAAIHDPCFE = FieldName.forField("DAAAIHDPCFE");

      static final FieldName mOKMEEDBECL = FieldName.forField("MOKMEEDBECL");

      static final FieldName aOLKDAJONOH = FieldName.forField("AOLKDAJONOH");

      static final FieldName fLJHGDKONLC = FieldName.forField("FLJHGDKONLC");

      static final FieldName mAJIMDCHNDL = FieldName.forField("MAJIMDCHNDL");

      static final FieldName bBJGEGEJJFB = FieldName.forField("BBJGEGEJJFB");

      static final FieldName oJNELKIOAOK = FieldName.forField("OJNELKIOAOK");

      static final FieldName lLNLDDKKGPH = FieldName.forField("LLNLDDKKGPH");
    }
  }
}
