// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerSettingInfoOuterClass {
  /**
   * Protobuf type {@code PlayerSettingInfo}
   */
  public static final class PlayerSettingInfo extends ProtoMessage<PlayerSettingInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional bool CPEEEPDBBPH = 3;</code>
     */
    private boolean cPEEEPDBBPH;

    /**
     * <code>optional bool GNOHNPJBFJC = 4;</code>
     */
    private boolean gNOHNPJBFJC;

    /**
     * <code>optional bool MCLJBLKACMP = 5;</code>
     */
    private boolean mCLJBLKACMP;

    /**
     * <code>optional bool NMJDBOIPFIC = 6;</code>
     */
    private boolean nMJDBOIPFIC;

    /**
     * <code>optional bool PJILEMMBLFG = 7;</code>
     */
    private boolean pJILEMMBLFG;

    /**
     * <code>optional bool JMBAGBFIKCM = 9;</code>
     */
    private boolean jMBAGBFIKCM;

    /**
     * <code>optional bool CGADMDEKIAC = 12;</code>
     */
    private boolean cGADMDEKIAC;

    /**
     * <code>optional bool ANEAAKIDPFL = 13;</code>
     */
    private boolean aNEAAKIDPFL;

    /**
     * <code>optional bool NENGEIIJJCB = 14;</code>
     */
    private boolean nENGEIIJJCB;

    private PlayerSettingInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerSettingInfo}
     */
    public static PlayerSettingInfo newInstance() {
      return new PlayerSettingInfo();
    }

    /**
     * <code>optional bool CPEEEPDBBPH = 3;</code>
     * @return whether the cPEEEPDBBPH field is set
     */
    public boolean hasCPEEEPDBBPH() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional bool CPEEEPDBBPH = 3;</code>
     * @return this
     */
    public PlayerSettingInfo clearCPEEEPDBBPH() {
      bitField0_ &= ~0x00000001;
      cPEEEPDBBPH = false;
      return this;
    }

    /**
     * <code>optional bool CPEEEPDBBPH = 3;</code>
     * @return the cPEEEPDBBPH
     */
    public boolean getCPEEEPDBBPH() {
      return cPEEEPDBBPH;
    }

    /**
     * <code>optional bool CPEEEPDBBPH = 3;</code>
     * @param value the cPEEEPDBBPH to set
     * @return this
     */
    public PlayerSettingInfo setCPEEEPDBBPH(final boolean value) {
      bitField0_ |= 0x00000001;
      cPEEEPDBBPH = value;
      return this;
    }

    /**
     * <code>optional bool GNOHNPJBFJC = 4;</code>
     * @return whether the gNOHNPJBFJC field is set
     */
    public boolean hasGNOHNPJBFJC() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool GNOHNPJBFJC = 4;</code>
     * @return this
     */
    public PlayerSettingInfo clearGNOHNPJBFJC() {
      bitField0_ &= ~0x00000002;
      gNOHNPJBFJC = false;
      return this;
    }

    /**
     * <code>optional bool GNOHNPJBFJC = 4;</code>
     * @return the gNOHNPJBFJC
     */
    public boolean getGNOHNPJBFJC() {
      return gNOHNPJBFJC;
    }

    /**
     * <code>optional bool GNOHNPJBFJC = 4;</code>
     * @param value the gNOHNPJBFJC to set
     * @return this
     */
    public PlayerSettingInfo setGNOHNPJBFJC(final boolean value) {
      bitField0_ |= 0x00000002;
      gNOHNPJBFJC = value;
      return this;
    }

    /**
     * <code>optional bool MCLJBLKACMP = 5;</code>
     * @return whether the mCLJBLKACMP field is set
     */
    public boolean hasMCLJBLKACMP() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool MCLJBLKACMP = 5;</code>
     * @return this
     */
    public PlayerSettingInfo clearMCLJBLKACMP() {
      bitField0_ &= ~0x00000004;
      mCLJBLKACMP = false;
      return this;
    }

    /**
     * <code>optional bool MCLJBLKACMP = 5;</code>
     * @return the mCLJBLKACMP
     */
    public boolean getMCLJBLKACMP() {
      return mCLJBLKACMP;
    }

    /**
     * <code>optional bool MCLJBLKACMP = 5;</code>
     * @param value the mCLJBLKACMP to set
     * @return this
     */
    public PlayerSettingInfo setMCLJBLKACMP(final boolean value) {
      bitField0_ |= 0x00000004;
      mCLJBLKACMP = value;
      return this;
    }

    /**
     * <code>optional bool NMJDBOIPFIC = 6;</code>
     * @return whether the nMJDBOIPFIC field is set
     */
    public boolean hasNMJDBOIPFIC() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool NMJDBOIPFIC = 6;</code>
     * @return this
     */
    public PlayerSettingInfo clearNMJDBOIPFIC() {
      bitField0_ &= ~0x00000008;
      nMJDBOIPFIC = false;
      return this;
    }

    /**
     * <code>optional bool NMJDBOIPFIC = 6;</code>
     * @return the nMJDBOIPFIC
     */
    public boolean getNMJDBOIPFIC() {
      return nMJDBOIPFIC;
    }

    /**
     * <code>optional bool NMJDBOIPFIC = 6;</code>
     * @param value the nMJDBOIPFIC to set
     * @return this
     */
    public PlayerSettingInfo setNMJDBOIPFIC(final boolean value) {
      bitField0_ |= 0x00000008;
      nMJDBOIPFIC = value;
      return this;
    }

    /**
     * <code>optional bool PJILEMMBLFG = 7;</code>
     * @return whether the pJILEMMBLFG field is set
     */
    public boolean hasPJILEMMBLFG() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool PJILEMMBLFG = 7;</code>
     * @return this
     */
    public PlayerSettingInfo clearPJILEMMBLFG() {
      bitField0_ &= ~0x00000010;
      pJILEMMBLFG = false;
      return this;
    }

    /**
     * <code>optional bool PJILEMMBLFG = 7;</code>
     * @return the pJILEMMBLFG
     */
    public boolean getPJILEMMBLFG() {
      return pJILEMMBLFG;
    }

    /**
     * <code>optional bool PJILEMMBLFG = 7;</code>
     * @param value the pJILEMMBLFG to set
     * @return this
     */
    public PlayerSettingInfo setPJILEMMBLFG(final boolean value) {
      bitField0_ |= 0x00000010;
      pJILEMMBLFG = value;
      return this;
    }

    /**
     * <code>optional bool JMBAGBFIKCM = 9;</code>
     * @return whether the jMBAGBFIKCM field is set
     */
    public boolean hasJMBAGBFIKCM() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional bool JMBAGBFIKCM = 9;</code>
     * @return this
     */
    public PlayerSettingInfo clearJMBAGBFIKCM() {
      bitField0_ &= ~0x00000020;
      jMBAGBFIKCM = false;
      return this;
    }

    /**
     * <code>optional bool JMBAGBFIKCM = 9;</code>
     * @return the jMBAGBFIKCM
     */
    public boolean getJMBAGBFIKCM() {
      return jMBAGBFIKCM;
    }

    /**
     * <code>optional bool JMBAGBFIKCM = 9;</code>
     * @param value the jMBAGBFIKCM to set
     * @return this
     */
    public PlayerSettingInfo setJMBAGBFIKCM(final boolean value) {
      bitField0_ |= 0x00000020;
      jMBAGBFIKCM = value;
      return this;
    }

    /**
     * <code>optional bool CGADMDEKIAC = 12;</code>
     * @return whether the cGADMDEKIAC field is set
     */
    public boolean hasCGADMDEKIAC() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional bool CGADMDEKIAC = 12;</code>
     * @return this
     */
    public PlayerSettingInfo clearCGADMDEKIAC() {
      bitField0_ &= ~0x00000040;
      cGADMDEKIAC = false;
      return this;
    }

    /**
     * <code>optional bool CGADMDEKIAC = 12;</code>
     * @return the cGADMDEKIAC
     */
    public boolean getCGADMDEKIAC() {
      return cGADMDEKIAC;
    }

    /**
     * <code>optional bool CGADMDEKIAC = 12;</code>
     * @param value the cGADMDEKIAC to set
     * @return this
     */
    public PlayerSettingInfo setCGADMDEKIAC(final boolean value) {
      bitField0_ |= 0x00000040;
      cGADMDEKIAC = value;
      return this;
    }

    /**
     * <code>optional bool ANEAAKIDPFL = 13;</code>
     * @return whether the aNEAAKIDPFL field is set
     */
    public boolean hasANEAAKIDPFL() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional bool ANEAAKIDPFL = 13;</code>
     * @return this
     */
    public PlayerSettingInfo clearANEAAKIDPFL() {
      bitField0_ &= ~0x00000080;
      aNEAAKIDPFL = false;
      return this;
    }

    /**
     * <code>optional bool ANEAAKIDPFL = 13;</code>
     * @return the aNEAAKIDPFL
     */
    public boolean getANEAAKIDPFL() {
      return aNEAAKIDPFL;
    }

    /**
     * <code>optional bool ANEAAKIDPFL = 13;</code>
     * @param value the aNEAAKIDPFL to set
     * @return this
     */
    public PlayerSettingInfo setANEAAKIDPFL(final boolean value) {
      bitField0_ |= 0x00000080;
      aNEAAKIDPFL = value;
      return this;
    }

    /**
     * <code>optional bool NENGEIIJJCB = 14;</code>
     * @return whether the nENGEIIJJCB field is set
     */
    public boolean hasNENGEIIJJCB() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional bool NENGEIIJJCB = 14;</code>
     * @return this
     */
    public PlayerSettingInfo clearNENGEIIJJCB() {
      bitField0_ &= ~0x00000100;
      nENGEIIJJCB = false;
      return this;
    }

    /**
     * <code>optional bool NENGEIIJJCB = 14;</code>
     * @return the nENGEIIJJCB
     */
    public boolean getNENGEIIJJCB() {
      return nENGEIIJJCB;
    }

    /**
     * <code>optional bool NENGEIIJJCB = 14;</code>
     * @param value the nENGEIIJJCB to set
     * @return this
     */
    public PlayerSettingInfo setNENGEIIJJCB(final boolean value) {
      bitField0_ |= 0x00000100;
      nENGEIIJJCB = value;
      return this;
    }

    @Override
    public PlayerSettingInfo copyFrom(final PlayerSettingInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        cPEEEPDBBPH = other.cPEEEPDBBPH;
        gNOHNPJBFJC = other.gNOHNPJBFJC;
        mCLJBLKACMP = other.mCLJBLKACMP;
        nMJDBOIPFIC = other.nMJDBOIPFIC;
        pJILEMMBLFG = other.pJILEMMBLFG;
        jMBAGBFIKCM = other.jMBAGBFIKCM;
        cGADMDEKIAC = other.cGADMDEKIAC;
        aNEAAKIDPFL = other.aNEAAKIDPFL;
        nENGEIIJJCB = other.nENGEIIJJCB;
      }
      return this;
    }

    @Override
    public PlayerSettingInfo mergeFrom(final PlayerSettingInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasCPEEEPDBBPH()) {
        setCPEEEPDBBPH(other.cPEEEPDBBPH);
      }
      if (other.hasGNOHNPJBFJC()) {
        setGNOHNPJBFJC(other.gNOHNPJBFJC);
      }
      if (other.hasMCLJBLKACMP()) {
        setMCLJBLKACMP(other.mCLJBLKACMP);
      }
      if (other.hasNMJDBOIPFIC()) {
        setNMJDBOIPFIC(other.nMJDBOIPFIC);
      }
      if (other.hasPJILEMMBLFG()) {
        setPJILEMMBLFG(other.pJILEMMBLFG);
      }
      if (other.hasJMBAGBFIKCM()) {
        setJMBAGBFIKCM(other.jMBAGBFIKCM);
      }
      if (other.hasCGADMDEKIAC()) {
        setCGADMDEKIAC(other.cGADMDEKIAC);
      }
      if (other.hasANEAAKIDPFL()) {
        setANEAAKIDPFL(other.aNEAAKIDPFL);
      }
      if (other.hasNENGEIIJJCB()) {
        setNENGEIIJJCB(other.nENGEIIJJCB);
      }
      return this;
    }

    @Override
    public PlayerSettingInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      cPEEEPDBBPH = false;
      gNOHNPJBFJC = false;
      mCLJBLKACMP = false;
      nMJDBOIPFIC = false;
      pJILEMMBLFG = false;
      jMBAGBFIKCM = false;
      cGADMDEKIAC = false;
      aNEAAKIDPFL = false;
      nENGEIIJJCB = false;
      return this;
    }

    @Override
    public PlayerSettingInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerSettingInfo)) {
        return false;
      }
      PlayerSettingInfo other = (PlayerSettingInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasCPEEEPDBBPH() || cPEEEPDBBPH == other.cPEEEPDBBPH)
        && (!hasGNOHNPJBFJC() || gNOHNPJBFJC == other.gNOHNPJBFJC)
        && (!hasMCLJBLKACMP() || mCLJBLKACMP == other.mCLJBLKACMP)
        && (!hasNMJDBOIPFIC() || nMJDBOIPFIC == other.nMJDBOIPFIC)
        && (!hasPJILEMMBLFG() || pJILEMMBLFG == other.pJILEMMBLFG)
        && (!hasJMBAGBFIKCM() || jMBAGBFIKCM == other.jMBAGBFIKCM)
        && (!hasCGADMDEKIAC() || cGADMDEKIAC == other.cGADMDEKIAC)
        && (!hasANEAAKIDPFL() || aNEAAKIDPFL == other.aNEAAKIDPFL)
        && (!hasNENGEIIJJCB() || nENGEIIJJCB == other.nENGEIIJJCB);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 24);
        output.writeBoolNoTag(cPEEEPDBBPH);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeBoolNoTag(gNOHNPJBFJC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 40);
        output.writeBoolNoTag(mCLJBLKACMP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 48);
        output.writeBoolNoTag(nMJDBOIPFIC);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 56);
        output.writeBoolNoTag(pJILEMMBLFG);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 72);
        output.writeBoolNoTag(jMBAGBFIKCM);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 96);
        output.writeBoolNoTag(cGADMDEKIAC);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 104);
        output.writeBoolNoTag(aNEAAKIDPFL);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 112);
        output.writeBoolNoTag(nENGEIIJJCB);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerSettingInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 24: {
            // cPEEEPDBBPH
            cPEEEPDBBPH = input.readBool();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // gNOHNPJBFJC
            gNOHNPJBFJC = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // mCLJBLKACMP
            mCLJBLKACMP = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // nMJDBOIPFIC
            nMJDBOIPFIC = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // pJILEMMBLFG
            pJILEMMBLFG = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // jMBAGBFIKCM
            jMBAGBFIKCM = input.readBool();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // cGADMDEKIAC
            cGADMDEKIAC = input.readBool();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // aNEAAKIDPFL
            aNEAAKIDPFL = input.readBool();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // nENGEIIJJCB
            nENGEIIJJCB = input.readBool();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeBool(FieldNames.cPEEEPDBBPH, cPEEEPDBBPH);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.gNOHNPJBFJC, gNOHNPJBFJC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.mCLJBLKACMP, mCLJBLKACMP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.nMJDBOIPFIC, nMJDBOIPFIC);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.pJILEMMBLFG, pJILEMMBLFG);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeBool(FieldNames.jMBAGBFIKCM, jMBAGBFIKCM);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeBool(FieldNames.cGADMDEKIAC, cGADMDEKIAC);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeBool(FieldNames.aNEAAKIDPFL, aNEAAKIDPFL);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeBool(FieldNames.nENGEIIJJCB, nENGEIIJJCB);
      }
      output.endObject();
    }

    @Override
    public PlayerSettingInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 325062724: {
            if (input.isAtField(FieldNames.cPEEEPDBBPH)) {
              if (!input.trySkipNullValue()) {
                cPEEEPDBBPH = input.readBool();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1562150469: {
            if (input.isAtField(FieldNames.gNOHNPJBFJC)) {
              if (!input.trySkipNullValue()) {
                gNOHNPJBFJC = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -323660302: {
            if (input.isAtField(FieldNames.mCLJBLKACMP)) {
              if (!input.trySkipNullValue()) {
                mCLJBLKACMP = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 2041692115: {
            if (input.isAtField(FieldNames.nMJDBOIPFIC)) {
              if (!input.trySkipNullValue()) {
                nMJDBOIPFIC = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 215933299: {
            if (input.isAtField(FieldNames.pJILEMMBLFG)) {
              if (!input.trySkipNullValue()) {
                pJILEMMBLFG = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1048230741: {
            if (input.isAtField(FieldNames.jMBAGBFIKCM)) {
              if (!input.trySkipNullValue()) {
                jMBAGBFIKCM = input.readBool();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1453467431: {
            if (input.isAtField(FieldNames.cGADMDEKIAC)) {
              if (!input.trySkipNullValue()) {
                cGADMDEKIAC = input.readBool();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2052751736: {
            if (input.isAtField(FieldNames.aNEAAKIDPFL)) {
              if (!input.trySkipNullValue()) {
                aNEAAKIDPFL = input.readBool();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -191992940: {
            if (input.isAtField(FieldNames.nENGEIIJJCB)) {
              if (!input.trySkipNullValue()) {
                nENGEIIJJCB = input.readBool();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerSettingInfo clone() {
      return new PlayerSettingInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerSettingInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), data).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerSettingInfo messages
     */
    public static MessageFactory<PlayerSettingInfo> getFactory() {
      return PlayerSettingInfoFactory.INSTANCE;
    }

    private enum PlayerSettingInfoFactory implements MessageFactory<PlayerSettingInfo> {
      INSTANCE;

      @Override
      public PlayerSettingInfo create() {
        return PlayerSettingInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName cPEEEPDBBPH = FieldName.forField("CPEEEPDBBPH");

      static final FieldName gNOHNPJBFJC = FieldName.forField("GNOHNPJBFJC");

      static final FieldName mCLJBLKACMP = FieldName.forField("MCLJBLKACMP");

      static final FieldName nMJDBOIPFIC = FieldName.forField("NMJDBOIPFIC");

      static final FieldName pJILEMMBLFG = FieldName.forField("PJILEMMBLFG");

      static final FieldName jMBAGBFIKCM = FieldName.forField("JMBAGBFIKCM");

      static final FieldName cGADMDEKIAC = FieldName.forField("CGADMDEKIAC");

      static final FieldName aNEAAKIDPFL = FieldName.forField("ANEAAKIDPFL");

      static final FieldName nENGEIIJJCB = FieldName.forField("NENGEIIJJCB");
    }
  }
}
