// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class SetGenderScRspOuterClass {
  /**
   * <pre>
   *  OKGFNHEMPCN
   * </pre>
   *
   * Protobuf type {@code SetGenderScRsp}
   */
  public static final class SetGenderScRsp extends ProtoMessage<SetGenderScRsp> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 retcode = 4;</code>
     */
    private int retcode;

    /**
     * <code>optional .MultiPathAvatarType CEDHDHEPCFO = 1;</code>
     */
    private int cEDHDHEPCFO;

    private SetGenderScRsp() {
    }

    /**
     * <pre>
     *  OKGFNHEMPCN
     * </pre>
     *
     * @return a new empty instance of {@code SetGenderScRsp}
     */
    public static SetGenderScRsp newInstance() {
      return new SetGenderScRsp();
    }

    /**
     * <code>optional uint32 retcode = 4;</code>
     * @return whether the retcode field is set
     */
    public boolean hasRetcode() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 retcode = 4;</code>
     * @return this
     */
    public SetGenderScRsp clearRetcode() {
      bitField0_ &= ~0x00000001;
      retcode = 0;
      return this;
    }

    /**
     * <code>optional uint32 retcode = 4;</code>
     * @return the retcode
     */
    public int getRetcode() {
      return retcode;
    }

    /**
     * <code>optional uint32 retcode = 4;</code>
     * @param value the retcode to set
     * @return this
     */
    public SetGenderScRsp setRetcode(final int value) {
      bitField0_ |= 0x00000001;
      retcode = value;
      return this;
    }

    /**
     * <code>optional .MultiPathAvatarType CEDHDHEPCFO = 1;</code>
     * @return whether the cEDHDHEPCFO field is set
     */
    public boolean hasCEDHDHEPCFO() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional .MultiPathAvatarType CEDHDHEPCFO = 1;</code>
     * @return this
     */
    public SetGenderScRsp clearCEDHDHEPCFO() {
      bitField0_ &= ~0x00000002;
      cEDHDHEPCFO = 0;
      return this;
    }

    /**
     * <code>optional .MultiPathAvatarType CEDHDHEPCFO = 1;</code>
     * @return the cEDHDHEPCFO
     */
    public MultiPathAvatarTypeOuterClass.MultiPathAvatarType getCEDHDHEPCFO() {
      return MultiPathAvatarTypeOuterClass.MultiPathAvatarType.forNumber(cEDHDHEPCFO);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link SetGenderScRsp#getCEDHDHEPCFO()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getCEDHDHEPCFOValue() {
      return cEDHDHEPCFO;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link MultiPathAvatarTypeOuterClass.MultiPathAvatarType}. Setting an invalid value
     * can cause {@link SetGenderScRsp#getCEDHDHEPCFO()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public SetGenderScRsp setCEDHDHEPCFOValue(final int value) {
      bitField0_ |= 0x00000002;
      cEDHDHEPCFO = value;
      return this;
    }

    /**
     * <code>optional .MultiPathAvatarType CEDHDHEPCFO = 1;</code>
     * @param value the cEDHDHEPCFO to set
     * @return this
     */
    public SetGenderScRsp setCEDHDHEPCFO(
        final MultiPathAvatarTypeOuterClass.MultiPathAvatarType value) {
      bitField0_ |= 0x00000002;
      cEDHDHEPCFO = value.getNumber();
      return this;
    }

    @Override
    public SetGenderScRsp copyFrom(final SetGenderScRsp other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        retcode = other.retcode;
        cEDHDHEPCFO = other.cEDHDHEPCFO;
      }
      return this;
    }

    @Override
    public SetGenderScRsp mergeFrom(final SetGenderScRsp other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasRetcode()) {
        setRetcode(other.retcode);
      }
      if (other.hasCEDHDHEPCFO()) {
        setCEDHDHEPCFOValue(other.cEDHDHEPCFO);
      }
      return this;
    }

    @Override
    public SetGenderScRsp clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      retcode = 0;
      cEDHDHEPCFO = 0;
      return this;
    }

    @Override
    public SetGenderScRsp clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof SetGenderScRsp)) {
        return false;
      }
      SetGenderScRsp other = (SetGenderScRsp) o;
      return bitField0_ == other.bitField0_
        && (!hasRetcode() || retcode == other.retcode)
        && (!hasCEDHDHEPCFO() || cEDHDHEPCFO == other.cEDHDHEPCFO);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(retcode);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 8);
        output.writeEnumNoTag(cEDHDHEPCFO);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(retcode);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(cEDHDHEPCFO);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public SetGenderScRsp mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 32: {
            // retcode
            retcode = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // cEDHDHEPCFO
            final int value = input.readInt32();
            if (MultiPathAvatarTypeOuterClass.MultiPathAvatarType.forNumber(value) != null) {
              cEDHDHEPCFO = value;
              bitField0_ |= 0x00000002;
            }
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.retcode, retcode);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeEnum(FieldNames.cEDHDHEPCFO, cEDHDHEPCFO, MultiPathAvatarTypeOuterClass.MultiPathAvatarType.converter());
      }
      output.endObject();
    }

    @Override
    public SetGenderScRsp mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1097936398: {
            if (input.isAtField(FieldNames.retcode)) {
              if (!input.trySkipNullValue()) {
                retcode = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -182533481: {
            if (input.isAtField(FieldNames.cEDHDHEPCFO)) {
              if (!input.trySkipNullValue()) {
                final MultiPathAvatarTypeOuterClass.MultiPathAvatarType value = input.readEnum(MultiPathAvatarTypeOuterClass.MultiPathAvatarType.converter());
                if (value != null) {
                  cEDHDHEPCFO = value.getNumber();
                  bitField0_ |= 0x00000002;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public SetGenderScRsp clone() {
      return new SetGenderScRsp().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static SetGenderScRsp parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new SetGenderScRsp(), data).checkInitialized();
    }

    public static SetGenderScRsp parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new SetGenderScRsp(), input).checkInitialized();
    }

    public static SetGenderScRsp parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new SetGenderScRsp(), input).checkInitialized();
    }

    /**
     * @return factory for creating SetGenderScRsp messages
     */
    public static MessageFactory<SetGenderScRsp> getFactory() {
      return SetGenderScRspFactory.INSTANCE;
    }

    private enum SetGenderScRspFactory implements MessageFactory<SetGenderScRsp> {
      INSTANCE;

      @Override
      public SetGenderScRsp create() {
        return SetGenderScRsp.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName retcode = FieldName.forField("retcode");

      static final FieldName cEDHDHEPCFO = FieldName.forField("CEDHDHEPCFO");
    }
  }
}
