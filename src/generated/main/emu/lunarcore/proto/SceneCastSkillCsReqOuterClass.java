// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedEnum;
import us.hebi.quickbuf.RepeatedInt;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class SceneCastSkillCsReqOuterClass {
  /**
   * Protobuf type {@code SceneCastSkillCsReq}
   */
  public static final class SceneCastSkillCsReq extends ProtoMessage<SceneCastSkillCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 skill_index = 3;</code>
     */
    private int skillIndex;

    /**
     * <code>optional uint32 caster_id = 4;</code>
     */
    private int casterId;

    /**
     * <code>optional uint32 GOJHHBLMAEB = 11;</code>
     */
    private int gOJHHBLMAEB;

    /**
     * <code>optional uint32 attacked_group_id = 13;</code>
     */
    private int attackedGroupId;

    /**
     * <code>optional .MotionInfo target_motion = 10;</code>
     */
    private final MotionInfoOuterClass.MotionInfo targetMotion = MotionInfoOuterClass.MotionInfo.newInstance();

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     */
    private final Utf8String mFHMICGELNB = Utf8String.newEmptyInstance();

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     */
    private final RepeatedInt hitTargetEntityIdList = RepeatedInt.newEmptyInstance();

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     */
    private final RepeatedInt assistMonsterEntityIdList = RepeatedInt.newEmptyInstance();

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     */
    private final RepeatedEnum<SceneCastSkillOuterClass.SceneCastSkill> hKJCOIOHFKP = RepeatedEnum.newEmptyInstance(SceneCastSkillOuterClass.SceneCastSkill.converter());

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     */
    private final RepeatedMessage<AssistMonsterWaveOuterClass.AssistMonsterWave> assistMonsterWaveList = RepeatedMessage.newEmptyInstance(AssistMonsterWaveOuterClass.AssistMonsterWave.getFactory());

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     */
    private final RepeatedMessage<DynamicValueOuterClass.DynamicValue> dynamicValues = RepeatedMessage.newEmptyInstance(DynamicValueOuterClass.DynamicValue.getFactory());

    private SceneCastSkillCsReq() {
    }

    /**
     * @return a new empty instance of {@code SceneCastSkillCsReq}
     */
    public static SceneCastSkillCsReq newInstance() {
      return new SceneCastSkillCsReq();
    }

    /**
     * <code>optional uint32 skill_index = 3;</code>
     * @return whether the skillIndex field is set
     */
    public boolean hasSkillIndex() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 skill_index = 3;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearSkillIndex() {
      bitField0_ &= ~0x00000001;
      skillIndex = 0;
      return this;
    }

    /**
     * <code>optional uint32 skill_index = 3;</code>
     * @return the skillIndex
     */
    public int getSkillIndex() {
      return skillIndex;
    }

    /**
     * <code>optional uint32 skill_index = 3;</code>
     * @param value the skillIndex to set
     * @return this
     */
    public SceneCastSkillCsReq setSkillIndex(final int value) {
      bitField0_ |= 0x00000001;
      skillIndex = value;
      return this;
    }

    /**
     * <code>optional uint32 caster_id = 4;</code>
     * @return whether the casterId field is set
     */
    public boolean hasCasterId() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 caster_id = 4;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearCasterId() {
      bitField0_ &= ~0x00000002;
      casterId = 0;
      return this;
    }

    /**
     * <code>optional uint32 caster_id = 4;</code>
     * @return the casterId
     */
    public int getCasterId() {
      return casterId;
    }

    /**
     * <code>optional uint32 caster_id = 4;</code>
     * @param value the casterId to set
     * @return this
     */
    public SceneCastSkillCsReq setCasterId(final int value) {
      bitField0_ |= 0x00000002;
      casterId = value;
      return this;
    }

    /**
     * <code>optional uint32 GOJHHBLMAEB = 11;</code>
     * @return whether the gOJHHBLMAEB field is set
     */
    public boolean hasGOJHHBLMAEB() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 GOJHHBLMAEB = 11;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearGOJHHBLMAEB() {
      bitField0_ &= ~0x00000004;
      gOJHHBLMAEB = 0;
      return this;
    }

    /**
     * <code>optional uint32 GOJHHBLMAEB = 11;</code>
     * @return the gOJHHBLMAEB
     */
    public int getGOJHHBLMAEB() {
      return gOJHHBLMAEB;
    }

    /**
     * <code>optional uint32 GOJHHBLMAEB = 11;</code>
     * @param value the gOJHHBLMAEB to set
     * @return this
     */
    public SceneCastSkillCsReq setGOJHHBLMAEB(final int value) {
      bitField0_ |= 0x00000004;
      gOJHHBLMAEB = value;
      return this;
    }

    /**
     * <code>optional uint32 attacked_group_id = 13;</code>
     * @return whether the attackedGroupId field is set
     */
    public boolean hasAttackedGroupId() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 attacked_group_id = 13;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearAttackedGroupId() {
      bitField0_ &= ~0x00000008;
      attackedGroupId = 0;
      return this;
    }

    /**
     * <code>optional uint32 attacked_group_id = 13;</code>
     * @return the attackedGroupId
     */
    public int getAttackedGroupId() {
      return attackedGroupId;
    }

    /**
     * <code>optional uint32 attacked_group_id = 13;</code>
     * @param value the attackedGroupId to set
     * @return this
     */
    public SceneCastSkillCsReq setAttackedGroupId(final int value) {
      bitField0_ |= 0x00000008;
      attackedGroupId = value;
      return this;
    }

    /**
     * <code>optional .MotionInfo target_motion = 10;</code>
     * @return whether the targetMotion field is set
     */
    public boolean hasTargetMotion() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional .MotionInfo target_motion = 10;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearTargetMotion() {
      bitField0_ &= ~0x00000010;
      targetMotion.clear();
      return this;
    }

    /**
     * <code>optional .MotionInfo target_motion = 10;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableTargetMotion()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public MotionInfoOuterClass.MotionInfo getTargetMotion() {
      return targetMotion;
    }

    /**
     * <code>optional .MotionInfo target_motion = 10;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public MotionInfoOuterClass.MotionInfo getMutableTargetMotion() {
      bitField0_ |= 0x00000010;
      return targetMotion;
    }

    /**
     * <code>optional .MotionInfo target_motion = 10;</code>
     * @param value the targetMotion to set
     * @return this
     */
    public SceneCastSkillCsReq setTargetMotion(final MotionInfoOuterClass.MotionInfo value) {
      bitField0_ |= 0x00000010;
      targetMotion.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @return whether the mFHMICGELNB field is set
     */
    public boolean hasMFHMICGELNB() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearMFHMICGELNB() {
      bitField0_ &= ~0x00000020;
      mFHMICGELNB.clear();
      return this;
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @return the mFHMICGELNB
     */
    public String getMFHMICGELNB() {
      return mFHMICGELNB.getString();
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @return internal {@code Utf8String} representation of mFHMICGELNB for reading
     */
    public Utf8String getMFHMICGELNBBytes() {
      return this.mFHMICGELNB;
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @return internal {@code Utf8String} representation of mFHMICGELNB for modifications
     */
    public Utf8String getMutableMFHMICGELNBBytes() {
      bitField0_ |= 0x00000020;
      return this.mFHMICGELNB;
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @param value the mFHMICGELNB to set
     * @return this
     */
    public SceneCastSkillCsReq setMFHMICGELNB(final CharSequence value) {
      bitField0_ |= 0x00000020;
      mFHMICGELNB.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string MFHMICGELNB = 15;</code>
     * @param value the mFHMICGELNB to set
     * @return this
     */
    public SceneCastSkillCsReq setMFHMICGELNB(final Utf8String value) {
      bitField0_ |= 0x00000020;
      mFHMICGELNB.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     * @return whether the hitTargetEntityIdList field is set
     */
    public boolean hasHitTargetEntityIdList() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearHitTargetEntityIdList() {
      bitField0_ &= ~0x00000040;
      hitTargetEntityIdList.clear();
      return this;
    }

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableHitTargetEntityIdList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getHitTargetEntityIdList() {
      return hitTargetEntityIdList;
    }

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableHitTargetEntityIdList() {
      bitField0_ |= 0x00000040;
      return hitTargetEntityIdList;
    }

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     * @param value the hitTargetEntityIdList to add
     * @return this
     */
    public SceneCastSkillCsReq addHitTargetEntityIdList(final int value) {
      bitField0_ |= 0x00000040;
      hitTargetEntityIdList.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 hit_target_entity_id_list = 12;</code>
     * @param values the hitTargetEntityIdList to add
     * @return this
     */
    public SceneCastSkillCsReq addAllHitTargetEntityIdList(final int... values) {
      bitField0_ |= 0x00000040;
      hitTargetEntityIdList.addAll(values);
      return this;
    }

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     * @return whether the assistMonsterEntityIdList field is set
     */
    public boolean hasAssistMonsterEntityIdList() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearAssistMonsterEntityIdList() {
      bitField0_ &= ~0x00000080;
      assistMonsterEntityIdList.clear();
      return this;
    }

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableAssistMonsterEntityIdList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getAssistMonsterEntityIdList() {
      return assistMonsterEntityIdList;
    }

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableAssistMonsterEntityIdList() {
      bitField0_ |= 0x00000080;
      return assistMonsterEntityIdList;
    }

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     * @param value the assistMonsterEntityIdList to add
     * @return this
     */
    public SceneCastSkillCsReq addAssistMonsterEntityIdList(final int value) {
      bitField0_ |= 0x00000080;
      assistMonsterEntityIdList.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 assist_monster_entity_id_list = 14;</code>
     * @param values the assistMonsterEntityIdList to add
     * @return this
     */
    public SceneCastSkillCsReq addAllAssistMonsterEntityIdList(final int... values) {
      bitField0_ |= 0x00000080;
      assistMonsterEntityIdList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     * @return whether the hKJCOIOHFKP field is set
     */
    public boolean hasHKJCOIOHFKP() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearHKJCOIOHFKP() {
      bitField0_ &= ~0x00000100;
      hKJCOIOHFKP.clear();
      return this;
    }

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableHKJCOIOHFKP()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedEnum<SceneCastSkillOuterClass.SceneCastSkill> getHKJCOIOHFKP() {
      return hKJCOIOHFKP;
    }

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedEnum<SceneCastSkillOuterClass.SceneCastSkill> getMutableHKJCOIOHFKP() {
      bitField0_ |= 0x00000100;
      return hKJCOIOHFKP;
    }

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     * @param value the hKJCOIOHFKP to add
     * @return this
     */
    public SceneCastSkillCsReq addHKJCOIOHFKP(final SceneCastSkillOuterClass.SceneCastSkill value) {
      bitField0_ |= 0x00000100;
      hKJCOIOHFKP.add(value);
      return this;
    }

    /**
     * <code>repeated .SceneCastSkill HKJCOIOHFKP = 7;</code>
     * @param values the hKJCOIOHFKP to add
     * @return this
     */
    public SceneCastSkillCsReq addAllHKJCOIOHFKP(
        final SceneCastSkillOuterClass.SceneCastSkill... values) {
      bitField0_ |= 0x00000100;
      hKJCOIOHFKP.addAll(values);
      return this;
    }

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     * @return whether the assistMonsterWaveList field is set
     */
    public boolean hasAssistMonsterWaveList() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearAssistMonsterWaveList() {
      bitField0_ &= ~0x00000200;
      assistMonsterWaveList.clear();
      return this;
    }

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableAssistMonsterWaveList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<AssistMonsterWaveOuterClass.AssistMonsterWave> getAssistMonsterWaveList(
        ) {
      return assistMonsterWaveList;
    }

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<AssistMonsterWaveOuterClass.AssistMonsterWave> getMutableAssistMonsterWaveList(
        ) {
      bitField0_ |= 0x00000200;
      return assistMonsterWaveList;
    }

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     * @param value the assistMonsterWaveList to add
     * @return this
     */
    public SceneCastSkillCsReq addAssistMonsterWaveList(
        final AssistMonsterWaveOuterClass.AssistMonsterWave value) {
      bitField0_ |= 0x00000200;
      assistMonsterWaveList.add(value);
      return this;
    }

    /**
     * <code>repeated .AssistMonsterWave assist_monster_wave_list = 8;</code>
     * @param values the assistMonsterWaveList to add
     * @return this
     */
    public SceneCastSkillCsReq addAllAssistMonsterWaveList(
        final AssistMonsterWaveOuterClass.AssistMonsterWave... values) {
      bitField0_ |= 0x00000200;
      assistMonsterWaveList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     * @return whether the dynamicValues field is set
     */
    public boolean hasDynamicValues() {
      return (bitField0_ & 0x00000400) != 0;
    }

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     * @return this
     */
    public SceneCastSkillCsReq clearDynamicValues() {
      bitField0_ &= ~0x00000400;
      dynamicValues.clear();
      return this;
    }

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableDynamicValues()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<DynamicValueOuterClass.DynamicValue> getDynamicValues() {
      return dynamicValues;
    }

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<DynamicValueOuterClass.DynamicValue> getMutableDynamicValues() {
      bitField0_ |= 0x00000400;
      return dynamicValues;
    }

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     * @param value the dynamicValues to add
     * @return this
     */
    public SceneCastSkillCsReq addDynamicValues(final DynamicValueOuterClass.DynamicValue value) {
      bitField0_ |= 0x00000400;
      dynamicValues.add(value);
      return this;
    }

    /**
     * <code>repeated .DynamicValue dynamic_values = 9;</code>
     * @param values the dynamicValues to add
     * @return this
     */
    public SceneCastSkillCsReq addAllDynamicValues(
        final DynamicValueOuterClass.DynamicValue... values) {
      bitField0_ |= 0x00000400;
      dynamicValues.addAll(values);
      return this;
    }

    @Override
    public SceneCastSkillCsReq copyFrom(final SceneCastSkillCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        skillIndex = other.skillIndex;
        casterId = other.casterId;
        gOJHHBLMAEB = other.gOJHHBLMAEB;
        attackedGroupId = other.attackedGroupId;
        targetMotion.copyFrom(other.targetMotion);
        mFHMICGELNB.copyFrom(other.mFHMICGELNB);
        hitTargetEntityIdList.copyFrom(other.hitTargetEntityIdList);
        assistMonsterEntityIdList.copyFrom(other.assistMonsterEntityIdList);
        hKJCOIOHFKP.copyFrom(other.hKJCOIOHFKP);
        assistMonsterWaveList.copyFrom(other.assistMonsterWaveList);
        dynamicValues.copyFrom(other.dynamicValues);
      }
      return this;
    }

    @Override
    public SceneCastSkillCsReq mergeFrom(final SceneCastSkillCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasSkillIndex()) {
        setSkillIndex(other.skillIndex);
      }
      if (other.hasCasterId()) {
        setCasterId(other.casterId);
      }
      if (other.hasGOJHHBLMAEB()) {
        setGOJHHBLMAEB(other.gOJHHBLMAEB);
      }
      if (other.hasAttackedGroupId()) {
        setAttackedGroupId(other.attackedGroupId);
      }
      if (other.hasTargetMotion()) {
        getMutableTargetMotion().mergeFrom(other.targetMotion);
      }
      if (other.hasMFHMICGELNB()) {
        getMutableMFHMICGELNBBytes().copyFrom(other.mFHMICGELNB);
      }
      if (other.hasHitTargetEntityIdList()) {
        getMutableHitTargetEntityIdList().addAll(other.hitTargetEntityIdList);
      }
      if (other.hasAssistMonsterEntityIdList()) {
        getMutableAssistMonsterEntityIdList().addAll(other.assistMonsterEntityIdList);
      }
      if (other.hasHKJCOIOHFKP()) {
        getMutableHKJCOIOHFKP().addAll(other.hKJCOIOHFKP);
      }
      if (other.hasAssistMonsterWaveList()) {
        getMutableAssistMonsterWaveList().addAll(other.assistMonsterWaveList);
      }
      if (other.hasDynamicValues()) {
        getMutableDynamicValues().addAll(other.dynamicValues);
      }
      return this;
    }

    @Override
    public SceneCastSkillCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      skillIndex = 0;
      casterId = 0;
      gOJHHBLMAEB = 0;
      attackedGroupId = 0;
      targetMotion.clear();
      mFHMICGELNB.clear();
      hitTargetEntityIdList.clear();
      assistMonsterEntityIdList.clear();
      hKJCOIOHFKP.clear();
      assistMonsterWaveList.clear();
      dynamicValues.clear();
      return this;
    }

    @Override
    public SceneCastSkillCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      targetMotion.clearQuick();
      mFHMICGELNB.clear();
      hitTargetEntityIdList.clear();
      assistMonsterEntityIdList.clear();
      hKJCOIOHFKP.clear();
      assistMonsterWaveList.clearQuick();
      dynamicValues.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof SceneCastSkillCsReq)) {
        return false;
      }
      SceneCastSkillCsReq other = (SceneCastSkillCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasSkillIndex() || skillIndex == other.skillIndex)
        && (!hasCasterId() || casterId == other.casterId)
        && (!hasGOJHHBLMAEB() || gOJHHBLMAEB == other.gOJHHBLMAEB)
        && (!hasAttackedGroupId() || attackedGroupId == other.attackedGroupId)
        && (!hasTargetMotion() || targetMotion.equals(other.targetMotion))
        && (!hasMFHMICGELNB() || mFHMICGELNB.equals(other.mFHMICGELNB))
        && (!hasHitTargetEntityIdList() || hitTargetEntityIdList.equals(other.hitTargetEntityIdList))
        && (!hasAssistMonsterEntityIdList() || assistMonsterEntityIdList.equals(other.assistMonsterEntityIdList))
        && (!hasHKJCOIOHFKP() || hKJCOIOHFKP.equals(other.hKJCOIOHFKP))
        && (!hasAssistMonsterWaveList() || assistMonsterWaveList.equals(other.assistMonsterWaveList))
        && (!hasDynamicValues() || dynamicValues.equals(other.dynamicValues));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 24);
        output.writeUInt32NoTag(skillIndex);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(casterId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(gOJHHBLMAEB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(attackedGroupId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 82);
        output.writeMessageNoTag(targetMotion);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 122);
        output.writeStringNoTag(mFHMICGELNB);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        for (int i = 0; i < hitTargetEntityIdList.length(); i++) {
          output.writeRawByte((byte) 96);
          output.writeUInt32NoTag(hitTargetEntityIdList.array()[i]);
        }
      }
      if ((bitField0_ & 0x00000080) != 0) {
        for (int i = 0; i < assistMonsterEntityIdList.length(); i++) {
          output.writeRawByte((byte) 112);
          output.writeUInt32NoTag(assistMonsterEntityIdList.array()[i]);
        }
      }
      if ((bitField0_ & 0x00000100) != 0) {
        for (int i = 0; i < hKJCOIOHFKP.length(); i++) {
          output.writeRawByte((byte) 56);
          output.writeEnumNoTag(hKJCOIOHFKP.array()[i]);
        }
      }
      if ((bitField0_ & 0x00000200) != 0) {
        for (int i = 0; i < assistMonsterWaveList.length(); i++) {
          output.writeRawByte((byte) 66);
          output.writeMessageNoTag(assistMonsterWaveList.get(i));
        }
      }
      if ((bitField0_ & 0x00000400) != 0) {
        for (int i = 0; i < dynamicValues.length(); i++) {
          output.writeRawByte((byte) 74);
          output.writeMessageNoTag(dynamicValues.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(skillIndex);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(casterId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(gOJHHBLMAEB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(attackedGroupId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(targetMotion);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(mFHMICGELNB);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += (1 * hitTargetEntityIdList.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(hitTargetEntityIdList);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += (1 * assistMonsterEntityIdList.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(assistMonsterEntityIdList);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += (1 * hKJCOIOHFKP.length()) + ProtoSink.computeRepeatedEnumSizeNoTag(hKJCOIOHFKP);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += (1 * assistMonsterWaveList.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(assistMonsterWaveList);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        size += (1 * dynamicValues.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(dynamicValues);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public SceneCastSkillCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 24: {
            // skillIndex
            skillIndex = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // casterId
            casterId = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // gOJHHBLMAEB
            gOJHHBLMAEB = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // attackedGroupId
            attackedGroupId = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 82) {
              break;
            }
          }
          case 82: {
            // targetMotion
            input.readMessage(targetMotion);
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 122) {
              break;
            }
          }
          case 122: {
            // mFHMICGELNB
            input.readString(mFHMICGELNB);
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 98) {
              break;
            }
          }
          case 98: {
            // hitTargetEntityIdList [packed=true]
            input.readPackedUInt32(hitTargetEntityIdList, tag);
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 114) {
              break;
            }
          }
          case 114: {
            // assistMonsterEntityIdList [packed=true]
            input.readPackedUInt32(assistMonsterEntityIdList, tag);
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // hKJCOIOHFKP [packed=true]
            input.readPackedEnum(hKJCOIOHFKP, tag);
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 66) {
              break;
            }
          }
          case 66: {
            // assistMonsterWaveList
            tag = input.readRepeatedMessage(assistMonsterWaveList, tag);
            bitField0_ |= 0x00000200;
            if (tag != 74) {
              break;
            }
          }
          case 74: {
            // dynamicValues
            tag = input.readRepeatedMessage(dynamicValues, tag);
            bitField0_ |= 0x00000400;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 96: {
            // hitTargetEntityIdList [packed=false]
            tag = input.readRepeatedUInt32(hitTargetEntityIdList, tag);
            bitField0_ |= 0x00000040;
            break;
          }
          case 112: {
            // assistMonsterEntityIdList [packed=false]
            tag = input.readRepeatedUInt32(assistMonsterEntityIdList, tag);
            bitField0_ |= 0x00000080;
            break;
          }
          case 56: {
            // hKJCOIOHFKP [packed=false]
            tag = input.readRepeatedEnum(hKJCOIOHFKP, tag);
            bitField0_ |= 0x00000100;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.skillIndex, skillIndex);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.casterId, casterId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.gOJHHBLMAEB, gOJHHBLMAEB);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.attackedGroupId, attackedGroupId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeMessage(FieldNames.targetMotion, targetMotion);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeString(FieldNames.mFHMICGELNB, mFHMICGELNB);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRepeatedUInt32(FieldNames.hitTargetEntityIdList, hitTargetEntityIdList);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRepeatedUInt32(FieldNames.assistMonsterEntityIdList, assistMonsterEntityIdList);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRepeatedEnum(FieldNames.hKJCOIOHFKP, hKJCOIOHFKP);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRepeatedMessage(FieldNames.assistMonsterWaveList, assistMonsterWaveList);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeRepeatedMessage(FieldNames.dynamicValues, dynamicValues);
      }
      output.endObject();
    }

    @Override
    public SceneCastSkillCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1587034369:
          case -1716021916: {
            if (input.isAtField(FieldNames.skillIndex)) {
              if (!input.trySkipNullValue()) {
                skillIndex = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 35676775:
          case 1106001422: {
            if (input.isAtField(FieldNames.casterId)) {
              if (!input.trySkipNullValue()) {
                casterId = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 384281565: {
            if (input.isAtField(FieldNames.gOJHHBLMAEB)) {
              if (!input.trySkipNullValue()) {
                gOJHHBLMAEB = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1725961965:
          case -715836621: {
            if (input.isAtField(FieldNames.attackedGroupId)) {
              if (!input.trySkipNullValue()) {
                attackedGroupId = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -716903257:
          case -2015521244: {
            if (input.isAtField(FieldNames.targetMotion)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(targetMotion);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 316476010: {
            if (input.isAtField(FieldNames.mFHMICGELNB)) {
              if (!input.trySkipNullValue()) {
                input.readString(mFHMICGELNB);
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1319168832:
          case -35493464: {
            if (input.isAtField(FieldNames.hitTargetEntityIdList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(hitTargetEntityIdList);
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1391993363:
          case -1507247487: {
            if (input.isAtField(FieldNames.assistMonsterEntityIdList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(assistMonsterEntityIdList);
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1369856284: {
            if (input.isAtField(FieldNames.hKJCOIOHFKP)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedEnum(hKJCOIOHFKP, SceneCastSkillOuterClass.SceneCastSkill.converter());
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 932756360:
          case 1103792041: {
            if (input.isAtField(FieldNames.assistMonsterWaveList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(assistMonsterWaveList);
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 571506241:
          case 525223202: {
            if (input.isAtField(FieldNames.dynamicValues)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(dynamicValues);
                bitField0_ |= 0x00000400;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public SceneCastSkillCsReq clone() {
      return new SceneCastSkillCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static SceneCastSkillCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new SceneCastSkillCsReq(), data).checkInitialized();
    }

    public static SceneCastSkillCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new SceneCastSkillCsReq(), input).checkInitialized();
    }

    public static SceneCastSkillCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new SceneCastSkillCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating SceneCastSkillCsReq messages
     */
    public static MessageFactory<SceneCastSkillCsReq> getFactory() {
      return SceneCastSkillCsReqFactory.INSTANCE;
    }

    private enum SceneCastSkillCsReqFactory implements MessageFactory<SceneCastSkillCsReq> {
      INSTANCE;

      @Override
      public SceneCastSkillCsReq create() {
        return SceneCastSkillCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName skillIndex = FieldName.forField("skillIndex", "skill_index");

      static final FieldName casterId = FieldName.forField("casterId", "caster_id");

      static final FieldName gOJHHBLMAEB = FieldName.forField("GOJHHBLMAEB");

      static final FieldName attackedGroupId = FieldName.forField("attackedGroupId", "attacked_group_id");

      static final FieldName targetMotion = FieldName.forField("targetMotion", "target_motion");

      static final FieldName mFHMICGELNB = FieldName.forField("MFHMICGELNB");

      static final FieldName hitTargetEntityIdList = FieldName.forField("hitTargetEntityIdList", "hit_target_entity_id_list");

      static final FieldName assistMonsterEntityIdList = FieldName.forField("assistMonsterEntityIdList", "assist_monster_entity_id_list");

      static final FieldName hKJCOIOHFKP = FieldName.forField("HKJCOIOHFKP");

      static final FieldName assistMonsterWaveList = FieldName.forField("assistMonsterWaveList", "assist_monster_wave_list");

      static final FieldName dynamicValues = FieldName.forField("dynamicValues", "dynamic_values");
    }
  }
}
