// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;

public final class WolfBroGameInfoOuterClass {
  /**
   * <pre>
   *  Phhndkkbecc
   * </pre>
   *
   * Protobuf type {@code WolfBroGameInfo}
   */
  public static final class WolfBroGameInfo extends ProtoMessage<WolfBroGameInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 jebmddjcadh = 7;</code>
     */
    private int jebmddjcadh;

    /**
     * <code>optional bool nmpeaingfpg = 4;</code>
     */
    private boolean nmpeaingfpg;

    /**
     * <code>optional .MotionInfo motion = 11;</code>
     */
    private final MotionInfoOuterClass.MotionInfo motion = MotionInfoOuterClass.MotionInfo.newInstance();

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     */
    private final RepeatedMessage<VectorOuterClass.Vector> jojfkijfeki = RepeatedMessage.newEmptyInstance(VectorOuterClass.Vector.getFactory());

    private WolfBroGameInfo() {
    }

    /**
     * <pre>
     *  Phhndkkbecc
     * </pre>
     *
     * @return a new empty instance of {@code WolfBroGameInfo}
     */
    public static WolfBroGameInfo newInstance() {
      return new WolfBroGameInfo();
    }

    /**
     * <code>optional uint32 jebmddjcadh = 7;</code>
     * @return whether the jebmddjcadh field is set
     */
    public boolean hasJebmddjcadh() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 jebmddjcadh = 7;</code>
     * @return this
     */
    public WolfBroGameInfo clearJebmddjcadh() {
      bitField0_ &= ~0x00000001;
      jebmddjcadh = 0;
      return this;
    }

    /**
     * <code>optional uint32 jebmddjcadh = 7;</code>
     * @return the jebmddjcadh
     */
    public int getJebmddjcadh() {
      return jebmddjcadh;
    }

    /**
     * <code>optional uint32 jebmddjcadh = 7;</code>
     * @param value the jebmddjcadh to set
     * @return this
     */
    public WolfBroGameInfo setJebmddjcadh(final int value) {
      bitField0_ |= 0x00000001;
      jebmddjcadh = value;
      return this;
    }

    /**
     * <code>optional bool nmpeaingfpg = 4;</code>
     * @return whether the nmpeaingfpg field is set
     */
    public boolean hasNmpeaingfpg() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool nmpeaingfpg = 4;</code>
     * @return this
     */
    public WolfBroGameInfo clearNmpeaingfpg() {
      bitField0_ &= ~0x00000002;
      nmpeaingfpg = false;
      return this;
    }

    /**
     * <code>optional bool nmpeaingfpg = 4;</code>
     * @return the nmpeaingfpg
     */
    public boolean getNmpeaingfpg() {
      return nmpeaingfpg;
    }

    /**
     * <code>optional bool nmpeaingfpg = 4;</code>
     * @param value the nmpeaingfpg to set
     * @return this
     */
    public WolfBroGameInfo setNmpeaingfpg(final boolean value) {
      bitField0_ |= 0x00000002;
      nmpeaingfpg = value;
      return this;
    }

    /**
     * <code>optional .MotionInfo motion = 11;</code>
     * @return whether the motion field is set
     */
    public boolean hasMotion() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional .MotionInfo motion = 11;</code>
     * @return this
     */
    public WolfBroGameInfo clearMotion() {
      bitField0_ &= ~0x00000004;
      motion.clear();
      return this;
    }

    /**
     * <code>optional .MotionInfo motion = 11;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableMotion()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public MotionInfoOuterClass.MotionInfo getMotion() {
      return motion;
    }

    /**
     * <code>optional .MotionInfo motion = 11;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public MotionInfoOuterClass.MotionInfo getMutableMotion() {
      bitField0_ |= 0x00000004;
      return motion;
    }

    /**
     * <code>optional .MotionInfo motion = 11;</code>
     * @param value the motion to set
     * @return this
     */
    public WolfBroGameInfo setMotion(final MotionInfoOuterClass.MotionInfo value) {
      bitField0_ |= 0x00000004;
      motion.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     * @return whether the jojfkijfeki field is set
     */
    public boolean hasJojfkijfeki() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     * @return this
     */
    public WolfBroGameInfo clearJojfkijfeki() {
      bitField0_ &= ~0x00000008;
      jojfkijfeki.clear();
      return this;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJojfkijfeki()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<VectorOuterClass.Vector> getJojfkijfeki() {
      return jojfkijfeki;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<VectorOuterClass.Vector> getMutableJojfkijfeki() {
      bitField0_ |= 0x00000008;
      return jojfkijfeki;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     * @param value the jojfkijfeki to add
     * @return this
     */
    public WolfBroGameInfo addJojfkijfeki(final VectorOuterClass.Vector value) {
      bitField0_ |= 0x00000008;
      jojfkijfeki.add(value);
      return this;
    }

    /**
     * <code>repeated .Vector jojfkijfeki = 6;</code>
     * @param values the jojfkijfeki to add
     * @return this
     */
    public WolfBroGameInfo addAllJojfkijfeki(final VectorOuterClass.Vector... values) {
      bitField0_ |= 0x00000008;
      jojfkijfeki.addAll(values);
      return this;
    }

    @Override
    public WolfBroGameInfo copyFrom(final WolfBroGameInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        jebmddjcadh = other.jebmddjcadh;
        nmpeaingfpg = other.nmpeaingfpg;
        motion.copyFrom(other.motion);
        jojfkijfeki.copyFrom(other.jojfkijfeki);
      }
      return this;
    }

    @Override
    public WolfBroGameInfo mergeFrom(final WolfBroGameInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasJebmddjcadh()) {
        setJebmddjcadh(other.jebmddjcadh);
      }
      if (other.hasNmpeaingfpg()) {
        setNmpeaingfpg(other.nmpeaingfpg);
      }
      if (other.hasMotion()) {
        getMutableMotion().mergeFrom(other.motion);
      }
      if (other.hasJojfkijfeki()) {
        getMutableJojfkijfeki().addAll(other.jojfkijfeki);
      }
      return this;
    }

    @Override
    public WolfBroGameInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jebmddjcadh = 0;
      nmpeaingfpg = false;
      motion.clear();
      jojfkijfeki.clear();
      return this;
    }

    @Override
    public WolfBroGameInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      motion.clearQuick();
      jojfkijfeki.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof WolfBroGameInfo)) {
        return false;
      }
      WolfBroGameInfo other = (WolfBroGameInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasJebmddjcadh() || jebmddjcadh == other.jebmddjcadh)
        && (!hasNmpeaingfpg() || nmpeaingfpg == other.nmpeaingfpg)
        && (!hasMotion() || motion.equals(other.motion))
        && (!hasJojfkijfeki() || jojfkijfeki.equals(other.jojfkijfeki));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt32NoTag(jebmddjcadh);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeBoolNoTag(nmpeaingfpg);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 90);
        output.writeMessageNoTag(motion);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < jojfkijfeki.length(); i++) {
          output.writeRawByte((byte) 50);
          output.writeMessageNoTag(jojfkijfeki.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jebmddjcadh);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(motion);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * jojfkijfeki.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(jojfkijfeki);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public WolfBroGameInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 56: {
            // jebmddjcadh
            jebmddjcadh = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // nmpeaingfpg
            nmpeaingfpg = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 90) {
              break;
            }
          }
          case 90: {
            // motion
            input.readMessage(motion);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // jojfkijfeki
            tag = input.readRepeatedMessage(jojfkijfeki, tag);
            bitField0_ |= 0x00000008;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.jebmddjcadh, jebmddjcadh);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.nmpeaingfpg, nmpeaingfpg);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeMessage(FieldNames.motion, motion);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedMessage(FieldNames.jojfkijfeki, jojfkijfeki);
      }
      output.endObject();
    }

    @Override
    public WolfBroGameInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1599485638: {
            if (input.isAtField(FieldNames.jebmddjcadh)) {
              if (!input.trySkipNullValue()) {
                jebmddjcadh = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1678179608: {
            if (input.isAtField(FieldNames.nmpeaingfpg)) {
              if (!input.trySkipNullValue()) {
                nmpeaingfpg = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1068318794: {
            if (input.isAtField(FieldNames.motion)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(motion);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 805643976: {
            if (input.isAtField(FieldNames.jojfkijfeki)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(jojfkijfeki);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public WolfBroGameInfo clone() {
      return new WolfBroGameInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static WolfBroGameInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new WolfBroGameInfo(), data).checkInitialized();
    }

    public static WolfBroGameInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameInfo(), input).checkInitialized();
    }

    public static WolfBroGameInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new WolfBroGameInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating WolfBroGameInfo messages
     */
    public static MessageFactory<WolfBroGameInfo> getFactory() {
      return WolfBroGameInfoFactory.INSTANCE;
    }

    private enum WolfBroGameInfoFactory implements MessageFactory<WolfBroGameInfo> {
      INSTANCE;

      @Override
      public WolfBroGameInfo create() {
        return WolfBroGameInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName jebmddjcadh = FieldName.forField("jebmddjcadh");

      static final FieldName nmpeaingfpg = FieldName.forField("nmpeaingfpg");

      static final FieldName motion = FieldName.forField("motion");

      static final FieldName jojfkijfeki = FieldName.forField("jojfkijfeki");
    }
  }
}
