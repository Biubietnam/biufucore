// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerCollectionInfoOuterClass {
  /**
   * <pre>
   *  Njokffdbeem
   * </pre>
   *
   * Protobuf type {@code PlayerCollectionInfo}
   */
  public static final class PlayerCollectionInfo extends ProtoMessage<PlayerCollectionInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 opkipbkchhk = 6;</code>
     */
    private int opkipbkchhk;

    /**
     * <code>optional uint32 hfmnhpogann = 9;</code>
     */
    private int hfmnhpogann;

    /**
     * <code>optional uint32 apbmgebohpk = 10;</code>
     */
    private int apbmgebohpk;

    /**
     * <code>optional uint32 folohmfjflm = 12;</code>
     */
    private int folohmfjflm;

    /**
     * <code>optional uint32 jbadnddcgfk = 15;</code>
     */
    private int jbadnddcgfk;

    private PlayerCollectionInfo() {
    }

    /**
     * <pre>
     *  Njokffdbeem
     * </pre>
     *
     * @return a new empty instance of {@code PlayerCollectionInfo}
     */
    public static PlayerCollectionInfo newInstance() {
      return new PlayerCollectionInfo();
    }

    /**
     * <code>optional uint32 opkipbkchhk = 6;</code>
     * @return whether the opkipbkchhk field is set
     */
    public boolean hasOpkipbkchhk() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 opkipbkchhk = 6;</code>
     * @return this
     */
    public PlayerCollectionInfo clearOpkipbkchhk() {
      bitField0_ &= ~0x00000001;
      opkipbkchhk = 0;
      return this;
    }

    /**
     * <code>optional uint32 opkipbkchhk = 6;</code>
     * @return the opkipbkchhk
     */
    public int getOpkipbkchhk() {
      return opkipbkchhk;
    }

    /**
     * <code>optional uint32 opkipbkchhk = 6;</code>
     * @param value the opkipbkchhk to set
     * @return this
     */
    public PlayerCollectionInfo setOpkipbkchhk(final int value) {
      bitField0_ |= 0x00000001;
      opkipbkchhk = value;
      return this;
    }

    /**
     * <code>optional uint32 hfmnhpogann = 9;</code>
     * @return whether the hfmnhpogann field is set
     */
    public boolean hasHfmnhpogann() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 hfmnhpogann = 9;</code>
     * @return this
     */
    public PlayerCollectionInfo clearHfmnhpogann() {
      bitField0_ &= ~0x00000002;
      hfmnhpogann = 0;
      return this;
    }

    /**
     * <code>optional uint32 hfmnhpogann = 9;</code>
     * @return the hfmnhpogann
     */
    public int getHfmnhpogann() {
      return hfmnhpogann;
    }

    /**
     * <code>optional uint32 hfmnhpogann = 9;</code>
     * @param value the hfmnhpogann to set
     * @return this
     */
    public PlayerCollectionInfo setHfmnhpogann(final int value) {
      bitField0_ |= 0x00000002;
      hfmnhpogann = value;
      return this;
    }

    /**
     * <code>optional uint32 apbmgebohpk = 10;</code>
     * @return whether the apbmgebohpk field is set
     */
    public boolean hasApbmgebohpk() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 apbmgebohpk = 10;</code>
     * @return this
     */
    public PlayerCollectionInfo clearApbmgebohpk() {
      bitField0_ &= ~0x00000004;
      apbmgebohpk = 0;
      return this;
    }

    /**
     * <code>optional uint32 apbmgebohpk = 10;</code>
     * @return the apbmgebohpk
     */
    public int getApbmgebohpk() {
      return apbmgebohpk;
    }

    /**
     * <code>optional uint32 apbmgebohpk = 10;</code>
     * @param value the apbmgebohpk to set
     * @return this
     */
    public PlayerCollectionInfo setApbmgebohpk(final int value) {
      bitField0_ |= 0x00000004;
      apbmgebohpk = value;
      return this;
    }

    /**
     * <code>optional uint32 folohmfjflm = 12;</code>
     * @return whether the folohmfjflm field is set
     */
    public boolean hasFolohmfjflm() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 folohmfjflm = 12;</code>
     * @return this
     */
    public PlayerCollectionInfo clearFolohmfjflm() {
      bitField0_ &= ~0x00000008;
      folohmfjflm = 0;
      return this;
    }

    /**
     * <code>optional uint32 folohmfjflm = 12;</code>
     * @return the folohmfjflm
     */
    public int getFolohmfjflm() {
      return folohmfjflm;
    }

    /**
     * <code>optional uint32 folohmfjflm = 12;</code>
     * @param value the folohmfjflm to set
     * @return this
     */
    public PlayerCollectionInfo setFolohmfjflm(final int value) {
      bitField0_ |= 0x00000008;
      folohmfjflm = value;
      return this;
    }

    /**
     * <code>optional uint32 jbadnddcgfk = 15;</code>
     * @return whether the jbadnddcgfk field is set
     */
    public boolean hasJbadnddcgfk() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 jbadnddcgfk = 15;</code>
     * @return this
     */
    public PlayerCollectionInfo clearJbadnddcgfk() {
      bitField0_ &= ~0x00000010;
      jbadnddcgfk = 0;
      return this;
    }

    /**
     * <code>optional uint32 jbadnddcgfk = 15;</code>
     * @return the jbadnddcgfk
     */
    public int getJbadnddcgfk() {
      return jbadnddcgfk;
    }

    /**
     * <code>optional uint32 jbadnddcgfk = 15;</code>
     * @param value the jbadnddcgfk to set
     * @return this
     */
    public PlayerCollectionInfo setJbadnddcgfk(final int value) {
      bitField0_ |= 0x00000010;
      jbadnddcgfk = value;
      return this;
    }

    @Override
    public PlayerCollectionInfo copyFrom(final PlayerCollectionInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        opkipbkchhk = other.opkipbkchhk;
        hfmnhpogann = other.hfmnhpogann;
        apbmgebohpk = other.apbmgebohpk;
        folohmfjflm = other.folohmfjflm;
        jbadnddcgfk = other.jbadnddcgfk;
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final PlayerCollectionInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasOpkipbkchhk()) {
        setOpkipbkchhk(other.opkipbkchhk);
      }
      if (other.hasHfmnhpogann()) {
        setHfmnhpogann(other.hfmnhpogann);
      }
      if (other.hasApbmgebohpk()) {
        setApbmgebohpk(other.apbmgebohpk);
      }
      if (other.hasFolohmfjflm()) {
        setFolohmfjflm(other.folohmfjflm);
      }
      if (other.hasJbadnddcgfk()) {
        setJbadnddcgfk(other.jbadnddcgfk);
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      opkipbkchhk = 0;
      hfmnhpogann = 0;
      apbmgebohpk = 0;
      folohmfjflm = 0;
      jbadnddcgfk = 0;
      return this;
    }

    @Override
    public PlayerCollectionInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerCollectionInfo)) {
        return false;
      }
      PlayerCollectionInfo other = (PlayerCollectionInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasOpkipbkchhk() || opkipbkchhk == other.opkipbkchhk)
        && (!hasHfmnhpogann() || hfmnhpogann == other.hfmnhpogann)
        && (!hasApbmgebohpk() || apbmgebohpk == other.apbmgebohpk)
        && (!hasFolohmfjflm() || folohmfjflm == other.folohmfjflm)
        && (!hasJbadnddcgfk() || jbadnddcgfk == other.jbadnddcgfk);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(opkipbkchhk);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 72);
        output.writeUInt32NoTag(hfmnhpogann);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(apbmgebohpk);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(folohmfjflm);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 120);
        output.writeUInt32NoTag(jbadnddcgfk);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(opkipbkchhk);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hfmnhpogann);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(apbmgebohpk);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(folohmfjflm);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jbadnddcgfk);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerCollectionInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 48: {
            // opkipbkchhk
            opkipbkchhk = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // hfmnhpogann
            hfmnhpogann = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // apbmgebohpk
            apbmgebohpk = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // folohmfjflm
            folohmfjflm = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // jbadnddcgfk
            jbadnddcgfk = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.opkipbkchhk, opkipbkchhk);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.hfmnhpogann, hfmnhpogann);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.apbmgebohpk, apbmgebohpk);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.folohmfjflm, folohmfjflm);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.jbadnddcgfk, jbadnddcgfk);
      }
      output.endObject();
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -716698494: {
            if (input.isAtField(FieldNames.opkipbkchhk)) {
              if (!input.trySkipNullValue()) {
                opkipbkchhk = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -654077694: {
            if (input.isAtField(FieldNames.hfmnhpogann)) {
              if (!input.trySkipNullValue()) {
                hfmnhpogann = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1114646750: {
            if (input.isAtField(FieldNames.apbmgebohpk)) {
              if (!input.trySkipNullValue()) {
                apbmgebohpk = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 332395954: {
            if (input.isAtField(FieldNames.folohmfjflm)) {
              if (!input.trySkipNullValue()) {
                folohmfjflm = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1475656412: {
            if (input.isAtField(FieldNames.jbadnddcgfk)) {
              if (!input.trySkipNullValue()) {
                jbadnddcgfk = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerCollectionInfo clone() {
      return new PlayerCollectionInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerCollectionInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), data).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerCollectionInfo messages
     */
    public static MessageFactory<PlayerCollectionInfo> getFactory() {
      return PlayerCollectionInfoFactory.INSTANCE;
    }

    private enum PlayerCollectionInfoFactory implements MessageFactory<PlayerCollectionInfo> {
      INSTANCE;

      @Override
      public PlayerCollectionInfo create() {
        return PlayerCollectionInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName opkipbkchhk = FieldName.forField("opkipbkchhk");

      static final FieldName hfmnhpogann = FieldName.forField("hfmnhpogann");

      static final FieldName apbmgebohpk = FieldName.forField("apbmgebohpk");

      static final FieldName folohmfjflm = FieldName.forField("folohmfjflm");

      static final FieldName jbadnddcgfk = FieldName.forField("jbadnddcgfk");
    }
  }
}
