// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerCollectionInfoOuterClass {
  /**
   * Protobuf type {@code PlayerCollectionInfo}
   */
  public static final class PlayerCollectionInfo extends ProtoMessage<PlayerCollectionInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 JPBEJKAHKCM = 2;</code>
     */
    private int jPBEJKAHKCM;

    /**
     * <code>optional uint32 HEDNPIBGENF = 4;</code>
     */
    private int hEDNPIBGENF;

    /**
     * <code>optional uint32 KFONDAPNDEP = 8;</code>
     */
    private int kFONDAPNDEP;

    /**
     * <code>optional uint32 OFMFGKEIDJO = 10;</code>
     */
    private int oFMFGKEIDJO;

    /**
     * <code>optional uint32 EJMCBAGHHDH = 11;</code>
     */
    private int eJMCBAGHHDH;

    private PlayerCollectionInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerCollectionInfo}
     */
    public static PlayerCollectionInfo newInstance() {
      return new PlayerCollectionInfo();
    }

    /**
     * <code>optional uint32 JPBEJKAHKCM = 2;</code>
     * @return whether the jPBEJKAHKCM field is set
     */
    public boolean hasJPBEJKAHKCM() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 JPBEJKAHKCM = 2;</code>
     * @return this
     */
    public PlayerCollectionInfo clearJPBEJKAHKCM() {
      bitField0_ &= ~0x00000001;
      jPBEJKAHKCM = 0;
      return this;
    }

    /**
     * <code>optional uint32 JPBEJKAHKCM = 2;</code>
     * @return the jPBEJKAHKCM
     */
    public int getJPBEJKAHKCM() {
      return jPBEJKAHKCM;
    }

    /**
     * <code>optional uint32 JPBEJKAHKCM = 2;</code>
     * @param value the jPBEJKAHKCM to set
     * @return this
     */
    public PlayerCollectionInfo setJPBEJKAHKCM(final int value) {
      bitField0_ |= 0x00000001;
      jPBEJKAHKCM = value;
      return this;
    }

    /**
     * <code>optional uint32 HEDNPIBGENF = 4;</code>
     * @return whether the hEDNPIBGENF field is set
     */
    public boolean hasHEDNPIBGENF() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 HEDNPIBGENF = 4;</code>
     * @return this
     */
    public PlayerCollectionInfo clearHEDNPIBGENF() {
      bitField0_ &= ~0x00000002;
      hEDNPIBGENF = 0;
      return this;
    }

    /**
     * <code>optional uint32 HEDNPIBGENF = 4;</code>
     * @return the hEDNPIBGENF
     */
    public int getHEDNPIBGENF() {
      return hEDNPIBGENF;
    }

    /**
     * <code>optional uint32 HEDNPIBGENF = 4;</code>
     * @param value the hEDNPIBGENF to set
     * @return this
     */
    public PlayerCollectionInfo setHEDNPIBGENF(final int value) {
      bitField0_ |= 0x00000002;
      hEDNPIBGENF = value;
      return this;
    }

    /**
     * <code>optional uint32 KFONDAPNDEP = 8;</code>
     * @return whether the kFONDAPNDEP field is set
     */
    public boolean hasKFONDAPNDEP() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 KFONDAPNDEP = 8;</code>
     * @return this
     */
    public PlayerCollectionInfo clearKFONDAPNDEP() {
      bitField0_ &= ~0x00000004;
      kFONDAPNDEP = 0;
      return this;
    }

    /**
     * <code>optional uint32 KFONDAPNDEP = 8;</code>
     * @return the kFONDAPNDEP
     */
    public int getKFONDAPNDEP() {
      return kFONDAPNDEP;
    }

    /**
     * <code>optional uint32 KFONDAPNDEP = 8;</code>
     * @param value the kFONDAPNDEP to set
     * @return this
     */
    public PlayerCollectionInfo setKFONDAPNDEP(final int value) {
      bitField0_ |= 0x00000004;
      kFONDAPNDEP = value;
      return this;
    }

    /**
     * <code>optional uint32 OFMFGKEIDJO = 10;</code>
     * @return whether the oFMFGKEIDJO field is set
     */
    public boolean hasOFMFGKEIDJO() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 OFMFGKEIDJO = 10;</code>
     * @return this
     */
    public PlayerCollectionInfo clearOFMFGKEIDJO() {
      bitField0_ &= ~0x00000008;
      oFMFGKEIDJO = 0;
      return this;
    }

    /**
     * <code>optional uint32 OFMFGKEIDJO = 10;</code>
     * @return the oFMFGKEIDJO
     */
    public int getOFMFGKEIDJO() {
      return oFMFGKEIDJO;
    }

    /**
     * <code>optional uint32 OFMFGKEIDJO = 10;</code>
     * @param value the oFMFGKEIDJO to set
     * @return this
     */
    public PlayerCollectionInfo setOFMFGKEIDJO(final int value) {
      bitField0_ |= 0x00000008;
      oFMFGKEIDJO = value;
      return this;
    }

    /**
     * <code>optional uint32 EJMCBAGHHDH = 11;</code>
     * @return whether the eJMCBAGHHDH field is set
     */
    public boolean hasEJMCBAGHHDH() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 EJMCBAGHHDH = 11;</code>
     * @return this
     */
    public PlayerCollectionInfo clearEJMCBAGHHDH() {
      bitField0_ &= ~0x00000010;
      eJMCBAGHHDH = 0;
      return this;
    }

    /**
     * <code>optional uint32 EJMCBAGHHDH = 11;</code>
     * @return the eJMCBAGHHDH
     */
    public int getEJMCBAGHHDH() {
      return eJMCBAGHHDH;
    }

    /**
     * <code>optional uint32 EJMCBAGHHDH = 11;</code>
     * @param value the eJMCBAGHHDH to set
     * @return this
     */
    public PlayerCollectionInfo setEJMCBAGHHDH(final int value) {
      bitField0_ |= 0x00000010;
      eJMCBAGHHDH = value;
      return this;
    }

    @Override
    public PlayerCollectionInfo copyFrom(final PlayerCollectionInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        jPBEJKAHKCM = other.jPBEJKAHKCM;
        hEDNPIBGENF = other.hEDNPIBGENF;
        kFONDAPNDEP = other.kFONDAPNDEP;
        oFMFGKEIDJO = other.oFMFGKEIDJO;
        eJMCBAGHHDH = other.eJMCBAGHHDH;
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final PlayerCollectionInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasJPBEJKAHKCM()) {
        setJPBEJKAHKCM(other.jPBEJKAHKCM);
      }
      if (other.hasHEDNPIBGENF()) {
        setHEDNPIBGENF(other.hEDNPIBGENF);
      }
      if (other.hasKFONDAPNDEP()) {
        setKFONDAPNDEP(other.kFONDAPNDEP);
      }
      if (other.hasOFMFGKEIDJO()) {
        setOFMFGKEIDJO(other.oFMFGKEIDJO);
      }
      if (other.hasEJMCBAGHHDH()) {
        setEJMCBAGHHDH(other.eJMCBAGHHDH);
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jPBEJKAHKCM = 0;
      hEDNPIBGENF = 0;
      kFONDAPNDEP = 0;
      oFMFGKEIDJO = 0;
      eJMCBAGHHDH = 0;
      return this;
    }

    @Override
    public PlayerCollectionInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerCollectionInfo)) {
        return false;
      }
      PlayerCollectionInfo other = (PlayerCollectionInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasJPBEJKAHKCM() || jPBEJKAHKCM == other.jPBEJKAHKCM)
        && (!hasHEDNPIBGENF() || hEDNPIBGENF == other.hEDNPIBGENF)
        && (!hasKFONDAPNDEP() || kFONDAPNDEP == other.kFONDAPNDEP)
        && (!hasOFMFGKEIDJO() || oFMFGKEIDJO == other.oFMFGKEIDJO)
        && (!hasEJMCBAGHHDH() || eJMCBAGHHDH == other.eJMCBAGHHDH);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(jPBEJKAHKCM);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(hEDNPIBGENF);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(kFONDAPNDEP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(oFMFGKEIDJO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(eJMCBAGHHDH);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jPBEJKAHKCM);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hEDNPIBGENF);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kFONDAPNDEP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(oFMFGKEIDJO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(eJMCBAGHHDH);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerCollectionInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // jPBEJKAHKCM
            jPBEJKAHKCM = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // hEDNPIBGENF
            hEDNPIBGENF = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // kFONDAPNDEP
            kFONDAPNDEP = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // oFMFGKEIDJO
            oFMFGKEIDJO = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // eJMCBAGHHDH
            eJMCBAGHHDH = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.jPBEJKAHKCM, jPBEJKAHKCM);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.hEDNPIBGENF, hEDNPIBGENF);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.kFONDAPNDEP, kFONDAPNDEP);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.oFMFGKEIDJO, oFMFGKEIDJO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.eJMCBAGHHDH, eJMCBAGHHDH);
      }
      output.endObject();
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1755522980: {
            if (input.isAtField(FieldNames.jPBEJKAHKCM)) {
              if (!input.trySkipNullValue()) {
                jPBEJKAHKCM = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -919693352: {
            if (input.isAtField(FieldNames.hEDNPIBGENF)) {
              if (!input.trySkipNullValue()) {
                hEDNPIBGENF = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1399704858: {
            if (input.isAtField(FieldNames.kFONDAPNDEP)) {
              if (!input.trySkipNullValue()) {
                kFONDAPNDEP = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -292277423: {
            if (input.isAtField(FieldNames.oFMFGKEIDJO)) {
              if (!input.trySkipNullValue()) {
                oFMFGKEIDJO = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1649172463: {
            if (input.isAtField(FieldNames.eJMCBAGHHDH)) {
              if (!input.trySkipNullValue()) {
                eJMCBAGHHDH = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerCollectionInfo clone() {
      return new PlayerCollectionInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerCollectionInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), data).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerCollectionInfo messages
     */
    public static MessageFactory<PlayerCollectionInfo> getFactory() {
      return PlayerCollectionInfoFactory.INSTANCE;
    }

    private enum PlayerCollectionInfoFactory implements MessageFactory<PlayerCollectionInfo> {
      INSTANCE;

      @Override
      public PlayerCollectionInfo create() {
        return PlayerCollectionInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName jPBEJKAHKCM = FieldName.forField("JPBEJKAHKCM");

      static final FieldName hEDNPIBGENF = FieldName.forField("HEDNPIBGENF");

      static final FieldName kFONDAPNDEP = FieldName.forField("KFONDAPNDEP");

      static final FieldName oFMFGKEIDJO = FieldName.forField("OFMFGKEIDJO");

      static final FieldName eJMCBAGHHDH = FieldName.forField("EJMCBAGHHDH");
    }
  }
}
