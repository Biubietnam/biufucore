// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerCollectionInfoOuterClass {
  /**
   * <pre>
   *  JNAEJJABLKK
   * </pre>
   *
   * Protobuf type {@code PlayerCollectionInfo}
   */
  public static final class PlayerCollectionInfo extends ProtoMessage<PlayerCollectionInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 OHKGLEIIMKB = 1;</code>
     */
    private int oHKGLEIIMKB;

    /**
     * <code>optional uint32 HPKIAPNLBDK = 3;</code>
     */
    private int hPKIAPNLBDK;

    /**
     * <code>optional uint32 PBEPHGBPGIE = 5;</code>
     */
    private int pBEPHGBPGIE;

    /**
     * <code>optional uint32 ECHHBKDKHEL = 7;</code>
     */
    private int eCHHBKDKHEL;

    /**
     * <code>optional uint32 IKDDOOIJBEK = 14;</code>
     */
    private int iKDDOOIJBEK;

    private PlayerCollectionInfo() {
    }

    /**
     * <pre>
     *  JNAEJJABLKK
     * </pre>
     *
     * @return a new empty instance of {@code PlayerCollectionInfo}
     */
    public static PlayerCollectionInfo newInstance() {
      return new PlayerCollectionInfo();
    }

    /**
     * <code>optional uint32 OHKGLEIIMKB = 1;</code>
     * @return whether the oHKGLEIIMKB field is set
     */
    public boolean hasOHKGLEIIMKB() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 OHKGLEIIMKB = 1;</code>
     * @return this
     */
    public PlayerCollectionInfo clearOHKGLEIIMKB() {
      bitField0_ &= ~0x00000001;
      oHKGLEIIMKB = 0;
      return this;
    }

    /**
     * <code>optional uint32 OHKGLEIIMKB = 1;</code>
     * @return the oHKGLEIIMKB
     */
    public int getOHKGLEIIMKB() {
      return oHKGLEIIMKB;
    }

    /**
     * <code>optional uint32 OHKGLEIIMKB = 1;</code>
     * @param value the oHKGLEIIMKB to set
     * @return this
     */
    public PlayerCollectionInfo setOHKGLEIIMKB(final int value) {
      bitField0_ |= 0x00000001;
      oHKGLEIIMKB = value;
      return this;
    }

    /**
     * <code>optional uint32 HPKIAPNLBDK = 3;</code>
     * @return whether the hPKIAPNLBDK field is set
     */
    public boolean hasHPKIAPNLBDK() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 HPKIAPNLBDK = 3;</code>
     * @return this
     */
    public PlayerCollectionInfo clearHPKIAPNLBDK() {
      bitField0_ &= ~0x00000002;
      hPKIAPNLBDK = 0;
      return this;
    }

    /**
     * <code>optional uint32 HPKIAPNLBDK = 3;</code>
     * @return the hPKIAPNLBDK
     */
    public int getHPKIAPNLBDK() {
      return hPKIAPNLBDK;
    }

    /**
     * <code>optional uint32 HPKIAPNLBDK = 3;</code>
     * @param value the hPKIAPNLBDK to set
     * @return this
     */
    public PlayerCollectionInfo setHPKIAPNLBDK(final int value) {
      bitField0_ |= 0x00000002;
      hPKIAPNLBDK = value;
      return this;
    }

    /**
     * <code>optional uint32 PBEPHGBPGIE = 5;</code>
     * @return whether the pBEPHGBPGIE field is set
     */
    public boolean hasPBEPHGBPGIE() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 PBEPHGBPGIE = 5;</code>
     * @return this
     */
    public PlayerCollectionInfo clearPBEPHGBPGIE() {
      bitField0_ &= ~0x00000004;
      pBEPHGBPGIE = 0;
      return this;
    }

    /**
     * <code>optional uint32 PBEPHGBPGIE = 5;</code>
     * @return the pBEPHGBPGIE
     */
    public int getPBEPHGBPGIE() {
      return pBEPHGBPGIE;
    }

    /**
     * <code>optional uint32 PBEPHGBPGIE = 5;</code>
     * @param value the pBEPHGBPGIE to set
     * @return this
     */
    public PlayerCollectionInfo setPBEPHGBPGIE(final int value) {
      bitField0_ |= 0x00000004;
      pBEPHGBPGIE = value;
      return this;
    }

    /**
     * <code>optional uint32 ECHHBKDKHEL = 7;</code>
     * @return whether the eCHHBKDKHEL field is set
     */
    public boolean hasECHHBKDKHEL() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 ECHHBKDKHEL = 7;</code>
     * @return this
     */
    public PlayerCollectionInfo clearECHHBKDKHEL() {
      bitField0_ &= ~0x00000008;
      eCHHBKDKHEL = 0;
      return this;
    }

    /**
     * <code>optional uint32 ECHHBKDKHEL = 7;</code>
     * @return the eCHHBKDKHEL
     */
    public int getECHHBKDKHEL() {
      return eCHHBKDKHEL;
    }

    /**
     * <code>optional uint32 ECHHBKDKHEL = 7;</code>
     * @param value the eCHHBKDKHEL to set
     * @return this
     */
    public PlayerCollectionInfo setECHHBKDKHEL(final int value) {
      bitField0_ |= 0x00000008;
      eCHHBKDKHEL = value;
      return this;
    }

    /**
     * <code>optional uint32 IKDDOOIJBEK = 14;</code>
     * @return whether the iKDDOOIJBEK field is set
     */
    public boolean hasIKDDOOIJBEK() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 IKDDOOIJBEK = 14;</code>
     * @return this
     */
    public PlayerCollectionInfo clearIKDDOOIJBEK() {
      bitField0_ &= ~0x00000010;
      iKDDOOIJBEK = 0;
      return this;
    }

    /**
     * <code>optional uint32 IKDDOOIJBEK = 14;</code>
     * @return the iKDDOOIJBEK
     */
    public int getIKDDOOIJBEK() {
      return iKDDOOIJBEK;
    }

    /**
     * <code>optional uint32 IKDDOOIJBEK = 14;</code>
     * @param value the iKDDOOIJBEK to set
     * @return this
     */
    public PlayerCollectionInfo setIKDDOOIJBEK(final int value) {
      bitField0_ |= 0x00000010;
      iKDDOOIJBEK = value;
      return this;
    }

    @Override
    public PlayerCollectionInfo copyFrom(final PlayerCollectionInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        oHKGLEIIMKB = other.oHKGLEIIMKB;
        hPKIAPNLBDK = other.hPKIAPNLBDK;
        pBEPHGBPGIE = other.pBEPHGBPGIE;
        eCHHBKDKHEL = other.eCHHBKDKHEL;
        iKDDOOIJBEK = other.iKDDOOIJBEK;
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final PlayerCollectionInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasOHKGLEIIMKB()) {
        setOHKGLEIIMKB(other.oHKGLEIIMKB);
      }
      if (other.hasHPKIAPNLBDK()) {
        setHPKIAPNLBDK(other.hPKIAPNLBDK);
      }
      if (other.hasPBEPHGBPGIE()) {
        setPBEPHGBPGIE(other.pBEPHGBPGIE);
      }
      if (other.hasECHHBKDKHEL()) {
        setECHHBKDKHEL(other.eCHHBKDKHEL);
      }
      if (other.hasIKDDOOIJBEK()) {
        setIKDDOOIJBEK(other.iKDDOOIJBEK);
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      oHKGLEIIMKB = 0;
      hPKIAPNLBDK = 0;
      pBEPHGBPGIE = 0;
      eCHHBKDKHEL = 0;
      iKDDOOIJBEK = 0;
      return this;
    }

    @Override
    public PlayerCollectionInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerCollectionInfo)) {
        return false;
      }
      PlayerCollectionInfo other = (PlayerCollectionInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasOHKGLEIIMKB() || oHKGLEIIMKB == other.oHKGLEIIMKB)
        && (!hasHPKIAPNLBDK() || hPKIAPNLBDK == other.hPKIAPNLBDK)
        && (!hasPBEPHGBPGIE() || pBEPHGBPGIE == other.pBEPHGBPGIE)
        && (!hasECHHBKDKHEL() || eCHHBKDKHEL == other.eCHHBKDKHEL)
        && (!hasIKDDOOIJBEK() || iKDDOOIJBEK == other.iKDDOOIJBEK);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(oHKGLEIIMKB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 24);
        output.writeUInt32NoTag(hPKIAPNLBDK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(pBEPHGBPGIE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt32NoTag(eCHHBKDKHEL);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(iKDDOOIJBEK);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(oHKGLEIIMKB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hPKIAPNLBDK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(pBEPHGBPGIE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(eCHHBKDKHEL);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(iKDDOOIJBEK);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerCollectionInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // oHKGLEIIMKB
            oHKGLEIIMKB = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 24) {
              break;
            }
          }
          case 24: {
            // hPKIAPNLBDK
            hPKIAPNLBDK = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // pBEPHGBPGIE
            pBEPHGBPGIE = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // eCHHBKDKHEL
            eCHHBKDKHEL = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // iKDDOOIJBEK
            iKDDOOIJBEK = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.oHKGLEIIMKB, oHKGLEIIMKB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.hPKIAPNLBDK, hPKIAPNLBDK);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.pBEPHGBPGIE, pBEPHGBPGIE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.eCHHBKDKHEL, eCHHBKDKHEL);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.iKDDOOIJBEK, iKDDOOIJBEK);
      }
      output.endObject();
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 351926486: {
            if (input.isAtField(FieldNames.oHKGLEIIMKB)) {
              if (!input.trySkipNullValue()) {
                oHKGLEIIMKB = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1106207702: {
            if (input.isAtField(FieldNames.hPKIAPNLBDK)) {
              if (!input.trySkipNullValue()) {
                hPKIAPNLBDK = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1290221113: {
            if (input.isAtField(FieldNames.pBEPHGBPGIE)) {
              if (!input.trySkipNullValue()) {
                pBEPHGBPGIE = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 581487233: {
            if (input.isAtField(FieldNames.eCHHBKDKHEL)) {
              if (!input.trySkipNullValue()) {
                eCHHBKDKHEL = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -558170523: {
            if (input.isAtField(FieldNames.iKDDOOIJBEK)) {
              if (!input.trySkipNullValue()) {
                iKDDOOIJBEK = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerCollectionInfo clone() {
      return new PlayerCollectionInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerCollectionInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), data).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerCollectionInfo messages
     */
    public static MessageFactory<PlayerCollectionInfo> getFactory() {
      return PlayerCollectionInfoFactory.INSTANCE;
    }

    private enum PlayerCollectionInfoFactory implements MessageFactory<PlayerCollectionInfo> {
      INSTANCE;

      @Override
      public PlayerCollectionInfo create() {
        return PlayerCollectionInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName oHKGLEIIMKB = FieldName.forField("OHKGLEIIMKB");

      static final FieldName hPKIAPNLBDK = FieldName.forField("HPKIAPNLBDK");

      static final FieldName pBEPHGBPGIE = FieldName.forField("PBEPHGBPGIE");

      static final FieldName eCHHBKDKHEL = FieldName.forField("ECHHBKDKHEL");

      static final FieldName iKDDOOIJBEK = FieldName.forField("IKDDOOIJBEK");
    }
  }
}
