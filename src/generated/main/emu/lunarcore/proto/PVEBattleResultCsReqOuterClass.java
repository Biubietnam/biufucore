// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedByte;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class PVEBattleResultCsReqOuterClass {
  /**
   * Protobuf type {@code PVEBattleResultCsReq}
   */
  public static final class PVEBattleResultCsReq extends ProtoMessage<PVEBattleResultCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 IFJFPGFAHGO = 4;</code>
     */
    private int iFJFPGFAHGO;

    /**
     * <code>optional uint32 stage_id = 5;</code>
     */
    private int stageId;

    /**
     * <code>optional uint32 battle_id = 9;</code>
     */
    private int battleId;

    /**
     * <code>optional uint32 client_res_version = 10;</code>
     */
    private int clientResVersion;

    /**
     * <code>optional uint32 cost_time = 13;</code>
     */
    private int costTime;

    /**
     * <code>optional uint32 NMHJOLNHMDK = 14;</code>
     */
    private int nMHJOLNHMDK;

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     */
    private int endStatus;

    /**
     * <code>optional bool HCGIJFEIAMK = 2;</code>
     */
    private boolean hCGIJFEIAMK;

    /**
     * <code>optional bool ALLDMMPDLDL = 3;</code>
     */
    private boolean aLLDMMPDLDL;

    /**
     * <code>optional bool GBBBEBFHGOJ = 15;</code>
     */
    private boolean gBBBEBFHGOJ;

    /**
     * <code>optional .BattleStatistics stt = 12;</code>
     */
    private final BattleStatisticsOuterClass.BattleStatistics stt = BattleStatisticsOuterClass.BattleStatistics.newInstance();

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     */
    private final RepeatedByte turnSnapshotHash = RepeatedByte.newEmptyInstance();

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     */
    private final Utf8String hMOIDIKHBHM = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     */
    private final RepeatedMessage<BattleOpOuterClass.BattleOp> opList = RepeatedMessage.newEmptyInstance(BattleOpOuterClass.BattleOp.getFactory());

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     */
    private final RepeatedMessage<OFBINFHOHKNEntry> oFBINFHOHKN = RepeatedMessage.newEmptyInstance(OFBINFHOHKNEntry.getFactory());

    private PVEBattleResultCsReq() {
    }

    /**
     * @return a new empty instance of {@code PVEBattleResultCsReq}
     */
    public static PVEBattleResultCsReq newInstance() {
      return new PVEBattleResultCsReq();
    }

    /**
     * <code>optional uint32 IFJFPGFAHGO = 4;</code>
     * @return whether the iFJFPGFAHGO field is set
     */
    public boolean hasIFJFPGFAHGO() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 IFJFPGFAHGO = 4;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearIFJFPGFAHGO() {
      bitField0_ &= ~0x00000001;
      iFJFPGFAHGO = 0;
      return this;
    }

    /**
     * <code>optional uint32 IFJFPGFAHGO = 4;</code>
     * @return the iFJFPGFAHGO
     */
    public int getIFJFPGFAHGO() {
      return iFJFPGFAHGO;
    }

    /**
     * <code>optional uint32 IFJFPGFAHGO = 4;</code>
     * @param value the iFJFPGFAHGO to set
     * @return this
     */
    public PVEBattleResultCsReq setIFJFPGFAHGO(final int value) {
      bitField0_ |= 0x00000001;
      iFJFPGFAHGO = value;
      return this;
    }

    /**
     * <code>optional uint32 stage_id = 5;</code>
     * @return whether the stageId field is set
     */
    public boolean hasStageId() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 stage_id = 5;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearStageId() {
      bitField0_ &= ~0x00000002;
      stageId = 0;
      return this;
    }

    /**
     * <code>optional uint32 stage_id = 5;</code>
     * @return the stageId
     */
    public int getStageId() {
      return stageId;
    }

    /**
     * <code>optional uint32 stage_id = 5;</code>
     * @param value the stageId to set
     * @return this
     */
    public PVEBattleResultCsReq setStageId(final int value) {
      bitField0_ |= 0x00000002;
      stageId = value;
      return this;
    }

    /**
     * <code>optional uint32 battle_id = 9;</code>
     * @return whether the battleId field is set
     */
    public boolean hasBattleId() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 battle_id = 9;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearBattleId() {
      bitField0_ &= ~0x00000004;
      battleId = 0;
      return this;
    }

    /**
     * <code>optional uint32 battle_id = 9;</code>
     * @return the battleId
     */
    public int getBattleId() {
      return battleId;
    }

    /**
     * <code>optional uint32 battle_id = 9;</code>
     * @param value the battleId to set
     * @return this
     */
    public PVEBattleResultCsReq setBattleId(final int value) {
      bitField0_ |= 0x00000004;
      battleId = value;
      return this;
    }

    /**
     * <code>optional uint32 client_res_version = 10;</code>
     * @return whether the clientResVersion field is set
     */
    public boolean hasClientResVersion() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 client_res_version = 10;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearClientResVersion() {
      bitField0_ &= ~0x00000008;
      clientResVersion = 0;
      return this;
    }

    /**
     * <code>optional uint32 client_res_version = 10;</code>
     * @return the clientResVersion
     */
    public int getClientResVersion() {
      return clientResVersion;
    }

    /**
     * <code>optional uint32 client_res_version = 10;</code>
     * @param value the clientResVersion to set
     * @return this
     */
    public PVEBattleResultCsReq setClientResVersion(final int value) {
      bitField0_ |= 0x00000008;
      clientResVersion = value;
      return this;
    }

    /**
     * <code>optional uint32 cost_time = 13;</code>
     * @return whether the costTime field is set
     */
    public boolean hasCostTime() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 cost_time = 13;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearCostTime() {
      bitField0_ &= ~0x00000010;
      costTime = 0;
      return this;
    }

    /**
     * <code>optional uint32 cost_time = 13;</code>
     * @return the costTime
     */
    public int getCostTime() {
      return costTime;
    }

    /**
     * <code>optional uint32 cost_time = 13;</code>
     * @param value the costTime to set
     * @return this
     */
    public PVEBattleResultCsReq setCostTime(final int value) {
      bitField0_ |= 0x00000010;
      costTime = value;
      return this;
    }

    /**
     * <code>optional uint32 NMHJOLNHMDK = 14;</code>
     * @return whether the nMHJOLNHMDK field is set
     */
    public boolean hasNMHJOLNHMDK() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional uint32 NMHJOLNHMDK = 14;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearNMHJOLNHMDK() {
      bitField0_ &= ~0x00000020;
      nMHJOLNHMDK = 0;
      return this;
    }

    /**
     * <code>optional uint32 NMHJOLNHMDK = 14;</code>
     * @return the nMHJOLNHMDK
     */
    public int getNMHJOLNHMDK() {
      return nMHJOLNHMDK;
    }

    /**
     * <code>optional uint32 NMHJOLNHMDK = 14;</code>
     * @param value the nMHJOLNHMDK to set
     * @return this
     */
    public PVEBattleResultCsReq setNMHJOLNHMDK(final int value) {
      bitField0_ |= 0x00000020;
      nMHJOLNHMDK = value;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @return whether the endStatus field is set
     */
    public boolean hasEndStatus() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearEndStatus() {
      bitField0_ &= ~0x00000040;
      endStatus = 0;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @return the endStatus
     */
    public BattleEndStatusOuterClass.BattleEndStatus getEndStatus() {
      return BattleEndStatusOuterClass.BattleEndStatus.forNumber(endStatus);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PVEBattleResultCsReq#getEndStatus()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getEndStatusValue() {
      return endStatus;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link BattleEndStatusOuterClass.BattleEndStatus}. Setting an invalid value
     * can cause {@link PVEBattleResultCsReq#getEndStatus()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PVEBattleResultCsReq setEndStatusValue(final int value) {
      bitField0_ |= 0x00000040;
      endStatus = value;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 1;</code>
     * @param value the endStatus to set
     * @return this
     */
    public PVEBattleResultCsReq setEndStatus(
        final BattleEndStatusOuterClass.BattleEndStatus value) {
      bitField0_ |= 0x00000040;
      endStatus = value.getNumber();
      return this;
    }

    /**
     * <code>optional bool HCGIJFEIAMK = 2;</code>
     * @return whether the hCGIJFEIAMK field is set
     */
    public boolean hasHCGIJFEIAMK() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional bool HCGIJFEIAMK = 2;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearHCGIJFEIAMK() {
      bitField0_ &= ~0x00000080;
      hCGIJFEIAMK = false;
      return this;
    }

    /**
     * <code>optional bool HCGIJFEIAMK = 2;</code>
     * @return the hCGIJFEIAMK
     */
    public boolean getHCGIJFEIAMK() {
      return hCGIJFEIAMK;
    }

    /**
     * <code>optional bool HCGIJFEIAMK = 2;</code>
     * @param value the hCGIJFEIAMK to set
     * @return this
     */
    public PVEBattleResultCsReq setHCGIJFEIAMK(final boolean value) {
      bitField0_ |= 0x00000080;
      hCGIJFEIAMK = value;
      return this;
    }

    /**
     * <code>optional bool ALLDMMPDLDL = 3;</code>
     * @return whether the aLLDMMPDLDL field is set
     */
    public boolean hasALLDMMPDLDL() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional bool ALLDMMPDLDL = 3;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearALLDMMPDLDL() {
      bitField0_ &= ~0x00000100;
      aLLDMMPDLDL = false;
      return this;
    }

    /**
     * <code>optional bool ALLDMMPDLDL = 3;</code>
     * @return the aLLDMMPDLDL
     */
    public boolean getALLDMMPDLDL() {
      return aLLDMMPDLDL;
    }

    /**
     * <code>optional bool ALLDMMPDLDL = 3;</code>
     * @param value the aLLDMMPDLDL to set
     * @return this
     */
    public PVEBattleResultCsReq setALLDMMPDLDL(final boolean value) {
      bitField0_ |= 0x00000100;
      aLLDMMPDLDL = value;
      return this;
    }

    /**
     * <code>optional bool GBBBEBFHGOJ = 15;</code>
     * @return whether the gBBBEBFHGOJ field is set
     */
    public boolean hasGBBBEBFHGOJ() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>optional bool GBBBEBFHGOJ = 15;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearGBBBEBFHGOJ() {
      bitField0_ &= ~0x00000200;
      gBBBEBFHGOJ = false;
      return this;
    }

    /**
     * <code>optional bool GBBBEBFHGOJ = 15;</code>
     * @return the gBBBEBFHGOJ
     */
    public boolean getGBBBEBFHGOJ() {
      return gBBBEBFHGOJ;
    }

    /**
     * <code>optional bool GBBBEBFHGOJ = 15;</code>
     * @param value the gBBBEBFHGOJ to set
     * @return this
     */
    public PVEBattleResultCsReq setGBBBEBFHGOJ(final boolean value) {
      bitField0_ |= 0x00000200;
      gBBBEBFHGOJ = value;
      return this;
    }

    /**
     * <code>optional .BattleStatistics stt = 12;</code>
     * @return whether the stt field is set
     */
    public boolean hasStt() {
      return (bitField0_ & 0x00000400) != 0;
    }

    /**
     * <code>optional .BattleStatistics stt = 12;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearStt() {
      bitField0_ &= ~0x00000400;
      stt.clear();
      return this;
    }

    /**
     * <code>optional .BattleStatistics stt = 12;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableStt()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public BattleStatisticsOuterClass.BattleStatistics getStt() {
      return stt;
    }

    /**
     * <code>optional .BattleStatistics stt = 12;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public BattleStatisticsOuterClass.BattleStatistics getMutableStt() {
      bitField0_ |= 0x00000400;
      return stt;
    }

    /**
     * <code>optional .BattleStatistics stt = 12;</code>
     * @param value the stt to set
     * @return this
     */
    public PVEBattleResultCsReq setStt(final BattleStatisticsOuterClass.BattleStatistics value) {
      bitField0_ |= 0x00000400;
      stt.copyFrom(value);
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     * @return whether the turnSnapshotHash field is set
     */
    public boolean hasTurnSnapshotHash() {
      return (bitField0_ & 0x00000800) != 0;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearTurnSnapshotHash() {
      bitField0_ &= ~0x00000800;
      turnSnapshotHash.clear();
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableTurnSnapshotHash()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedByte getTurnSnapshotHash() {
      return turnSnapshotHash;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedByte getMutableTurnSnapshotHash() {
      bitField0_ |= 0x00000800;
      return turnSnapshotHash;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     * @param value the turnSnapshotHash to add
     * @return this
     */
    public PVEBattleResultCsReq addTurnSnapshotHash(final byte value) {
      bitField0_ |= 0x00000800;
      turnSnapshotHash.add(value);
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     * @param values the turnSnapshotHash to add
     * @return this
     */
    public PVEBattleResultCsReq addAllTurnSnapshotHash(final byte... values) {
      bitField0_ |= 0x00000800;
      turnSnapshotHash.addAll(values);
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 8;</code>
     * @param values the turnSnapshotHash to set
     * @return this
     */
    public PVEBattleResultCsReq setTurnSnapshotHash(final byte... values) {
      bitField0_ |= 0x00000800;
      turnSnapshotHash.copyFrom(values);
      return this;
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @return whether the hMOIDIKHBHM field is set
     */
    public boolean hasHMOIDIKHBHM() {
      return (bitField0_ & 0x00001000) != 0;
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearHMOIDIKHBHM() {
      bitField0_ &= ~0x00001000;
      hMOIDIKHBHM.clear();
      return this;
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @return the hMOIDIKHBHM
     */
    public String getHMOIDIKHBHM() {
      return hMOIDIKHBHM.getString();
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @return internal {@code Utf8String} representation of hMOIDIKHBHM for reading
     */
    public Utf8String getHMOIDIKHBHMBytes() {
      return this.hMOIDIKHBHM;
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @return internal {@code Utf8String} representation of hMOIDIKHBHM for modifications
     */
    public Utf8String getMutableHMOIDIKHBHMBytes() {
      bitField0_ |= 0x00001000;
      return this.hMOIDIKHBHM;
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @param value the hMOIDIKHBHM to set
     * @return this
     */
    public PVEBattleResultCsReq setHMOIDIKHBHM(final CharSequence value) {
      bitField0_ |= 0x00001000;
      hMOIDIKHBHM.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string HMOIDIKHBHM = 11;</code>
     * @param value the hMOIDIKHBHM to set
     * @return this
     */
    public PVEBattleResultCsReq setHMOIDIKHBHM(final Utf8String value) {
      bitField0_ |= 0x00001000;
      hMOIDIKHBHM.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     * @return whether the opList field is set
     */
    public boolean hasOpList() {
      return (bitField0_ & 0x00002000) != 0;
    }

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearOpList() {
      bitField0_ &= ~0x00002000;
      opList.clear();
      return this;
    }

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableOpList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<BattleOpOuterClass.BattleOp> getOpList() {
      return opList;
    }

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<BattleOpOuterClass.BattleOp> getMutableOpList() {
      bitField0_ |= 0x00002000;
      return opList;
    }

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     * @param value the opList to add
     * @return this
     */
    public PVEBattleResultCsReq addOpList(final BattleOpOuterClass.BattleOp value) {
      bitField0_ |= 0x00002000;
      opList.add(value);
      return this;
    }

    /**
     * <code>repeated .BattleOp op_list = 6;</code>
     * @param values the opList to add
     * @return this
     */
    public PVEBattleResultCsReq addAllOpList(final BattleOpOuterClass.BattleOp... values) {
      bitField0_ |= 0x00002000;
      opList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     * @return whether the oFBINFHOHKN field is set
     */
    public boolean hasOFBINFHOHKN() {
      return (bitField0_ & 0x00004000) != 0;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearOFBINFHOHKN() {
      bitField0_ &= ~0x00004000;
      oFBINFHOHKN.clear();
      return this;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableOFBINFHOHKN()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<OFBINFHOHKNEntry> getOFBINFHOHKN() {
      return oFBINFHOHKN;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<OFBINFHOHKNEntry> getMutableOFBINFHOHKN() {
      bitField0_ |= 0x00004000;
      return oFBINFHOHKN;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     * @param value the oFBINFHOHKN to add
     * @return this
     */
    public PVEBattleResultCsReq addOFBINFHOHKN(final OFBINFHOHKNEntry value) {
      bitField0_ |= 0x00004000;
      oFBINFHOHKN.add(value);
      return this;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.OFBINFHOHKNEntry OFBINFHOHKN = 7;</code>
     * @param values the oFBINFHOHKN to add
     * @return this
     */
    public PVEBattleResultCsReq addAllOFBINFHOHKN(final OFBINFHOHKNEntry... values) {
      bitField0_ |= 0x00004000;
      oFBINFHOHKN.addAll(values);
      return this;
    }

    @Override
    public PVEBattleResultCsReq copyFrom(final PVEBattleResultCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        iFJFPGFAHGO = other.iFJFPGFAHGO;
        stageId = other.stageId;
        battleId = other.battleId;
        clientResVersion = other.clientResVersion;
        costTime = other.costTime;
        nMHJOLNHMDK = other.nMHJOLNHMDK;
        endStatus = other.endStatus;
        hCGIJFEIAMK = other.hCGIJFEIAMK;
        aLLDMMPDLDL = other.aLLDMMPDLDL;
        gBBBEBFHGOJ = other.gBBBEBFHGOJ;
        stt.copyFrom(other.stt);
        turnSnapshotHash.copyFrom(other.turnSnapshotHash);
        hMOIDIKHBHM.copyFrom(other.hMOIDIKHBHM);
        opList.copyFrom(other.opList);
        oFBINFHOHKN.copyFrom(other.oFBINFHOHKN);
      }
      return this;
    }

    @Override
    public PVEBattleResultCsReq mergeFrom(final PVEBattleResultCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasIFJFPGFAHGO()) {
        setIFJFPGFAHGO(other.iFJFPGFAHGO);
      }
      if (other.hasStageId()) {
        setStageId(other.stageId);
      }
      if (other.hasBattleId()) {
        setBattleId(other.battleId);
      }
      if (other.hasClientResVersion()) {
        setClientResVersion(other.clientResVersion);
      }
      if (other.hasCostTime()) {
        setCostTime(other.costTime);
      }
      if (other.hasNMHJOLNHMDK()) {
        setNMHJOLNHMDK(other.nMHJOLNHMDK);
      }
      if (other.hasEndStatus()) {
        setEndStatusValue(other.endStatus);
      }
      if (other.hasHCGIJFEIAMK()) {
        setHCGIJFEIAMK(other.hCGIJFEIAMK);
      }
      if (other.hasALLDMMPDLDL()) {
        setALLDMMPDLDL(other.aLLDMMPDLDL);
      }
      if (other.hasGBBBEBFHGOJ()) {
        setGBBBEBFHGOJ(other.gBBBEBFHGOJ);
      }
      if (other.hasStt()) {
        getMutableStt().mergeFrom(other.stt);
      }
      if (other.hasTurnSnapshotHash()) {
        getMutableTurnSnapshotHash().copyFrom(other.turnSnapshotHash);
      }
      if (other.hasHMOIDIKHBHM()) {
        getMutableHMOIDIKHBHMBytes().copyFrom(other.hMOIDIKHBHM);
      }
      if (other.hasOpList()) {
        getMutableOpList().addAll(other.opList);
      }
      if (other.hasOFBINFHOHKN()) {
        getMutableOFBINFHOHKN().addAll(other.oFBINFHOHKN);
      }
      return this;
    }

    @Override
    public PVEBattleResultCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      iFJFPGFAHGO = 0;
      stageId = 0;
      battleId = 0;
      clientResVersion = 0;
      costTime = 0;
      nMHJOLNHMDK = 0;
      endStatus = 0;
      hCGIJFEIAMK = false;
      aLLDMMPDLDL = false;
      gBBBEBFHGOJ = false;
      stt.clear();
      turnSnapshotHash.clear();
      hMOIDIKHBHM.clear();
      opList.clear();
      oFBINFHOHKN.clear();
      return this;
    }

    @Override
    public PVEBattleResultCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      stt.clearQuick();
      turnSnapshotHash.clear();
      hMOIDIKHBHM.clear();
      opList.clearQuick();
      oFBINFHOHKN.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PVEBattleResultCsReq)) {
        return false;
      }
      PVEBattleResultCsReq other = (PVEBattleResultCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasIFJFPGFAHGO() || iFJFPGFAHGO == other.iFJFPGFAHGO)
        && (!hasStageId() || stageId == other.stageId)
        && (!hasBattleId() || battleId == other.battleId)
        && (!hasClientResVersion() || clientResVersion == other.clientResVersion)
        && (!hasCostTime() || costTime == other.costTime)
        && (!hasNMHJOLNHMDK() || nMHJOLNHMDK == other.nMHJOLNHMDK)
        && (!hasEndStatus() || endStatus == other.endStatus)
        && (!hasHCGIJFEIAMK() || hCGIJFEIAMK == other.hCGIJFEIAMK)
        && (!hasALLDMMPDLDL() || aLLDMMPDLDL == other.aLLDMMPDLDL)
        && (!hasGBBBEBFHGOJ() || gBBBEBFHGOJ == other.gBBBEBFHGOJ)
        && (!hasStt() || stt.equals(other.stt))
        && (!hasTurnSnapshotHash() || turnSnapshotHash.equals(other.turnSnapshotHash))
        && (!hasHMOIDIKHBHM() || hMOIDIKHBHM.equals(other.hMOIDIKHBHM))
        && (!hasOpList() || opList.equals(other.opList))
        && (!hasOFBINFHOHKN() || oFBINFHOHKN.equals(other.oFBINFHOHKN));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(iFJFPGFAHGO);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(stageId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 72);
        output.writeUInt32NoTag(battleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(costTime);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(nMHJOLNHMDK);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 8);
        output.writeEnumNoTag(endStatus);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 16);
        output.writeBoolNoTag(hCGIJFEIAMK);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 24);
        output.writeBoolNoTag(aLLDMMPDLDL);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRawByte((byte) 120);
        output.writeBoolNoTag(gBBBEBFHGOJ);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeRawByte((byte) 98);
        output.writeMessageNoTag(stt);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeRawByte((byte) 66);
        output.writeBytesNoTag(turnSnapshotHash);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeRawByte((byte) 90);
        output.writeStringNoTag(hMOIDIKHBHM);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        for (int i = 0; i < opList.length(); i++) {
          output.writeRawByte((byte) 50);
          output.writeMessageNoTag(opList.get(i));
        }
      }
      if ((bitField0_ & 0x00004000) != 0) {
        for (int i = 0; i < oFBINFHOHKN.length(); i++) {
          output.writeRawByte((byte) 58);
          output.writeMessageNoTag(oFBINFHOHKN.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(iFJFPGFAHGO);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(stageId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(battleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(costTime);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nMHJOLNHMDK);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(endStatus);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000400) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(stt);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        size += 1 + ProtoSink.computeBytesSizeNoTag(turnSnapshotHash);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(hMOIDIKHBHM);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        size += (1 * opList.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(opList);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        size += (1 * oFBINFHOHKN.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(oFBINFHOHKN);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PVEBattleResultCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 32: {
            // iFJFPGFAHGO
            iFJFPGFAHGO = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // stageId
            stageId = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // battleId
            battleId = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // clientResVersion
            clientResVersion = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // costTime
            costTime = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // nMHJOLNHMDK
            nMHJOLNHMDK = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // endStatus
            final int value = input.readInt32();
            if (BattleEndStatusOuterClass.BattleEndStatus.forNumber(value) != null) {
              endStatus = value;
              bitField0_ |= 0x00000040;
            }
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
          case 16: {
            // hCGIJFEIAMK
            hCGIJFEIAMK = input.readBool();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 24) {
              break;
            }
          }
          case 24: {
            // aLLDMMPDLDL
            aLLDMMPDLDL = input.readBool();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // gBBBEBFHGOJ
            gBBBEBFHGOJ = input.readBool();
            bitField0_ |= 0x00000200;
            tag = input.readTag();
            if (tag != 98) {
              break;
            }
          }
          case 98: {
            // stt
            input.readMessage(stt);
            bitField0_ |= 0x00000400;
            tag = input.readTag();
            if (tag != 66) {
              break;
            }
          }
          case 66: {
            // turnSnapshotHash
            input.readBytes(turnSnapshotHash);
            bitField0_ |= 0x00000800;
            tag = input.readTag();
            if (tag != 90) {
              break;
            }
          }
          case 90: {
            // hMOIDIKHBHM
            input.readString(hMOIDIKHBHM);
            bitField0_ |= 0x00001000;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // opList
            tag = input.readRepeatedMessage(opList, tag);
            bitField0_ |= 0x00002000;
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // oFBINFHOHKN
            tag = input.readRepeatedMessage(oFBINFHOHKN, tag);
            bitField0_ |= 0x00004000;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.iFJFPGFAHGO, iFJFPGFAHGO);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.stageId, stageId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.battleId, battleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.clientResVersion, clientResVersion);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.costTime, costTime);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.nMHJOLNHMDK, nMHJOLNHMDK);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeEnum(FieldNames.endStatus, endStatus, BattleEndStatusOuterClass.BattleEndStatus.converter());
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeBool(FieldNames.hCGIJFEIAMK, hCGIJFEIAMK);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeBool(FieldNames.aLLDMMPDLDL, aLLDMMPDLDL);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeBool(FieldNames.gBBBEBFHGOJ, gBBBEBFHGOJ);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeMessage(FieldNames.stt, stt);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeBytes(FieldNames.turnSnapshotHash, turnSnapshotHash);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeString(FieldNames.hMOIDIKHBHM, hMOIDIKHBHM);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        output.writeRepeatedMessage(FieldNames.opList, opList);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        output.writeRepeatedMessage(FieldNames.oFBINFHOHKN, oFBINFHOHKN);
      }
      output.endObject();
    }

    @Override
    public PVEBattleResultCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1984304187: {
            if (input.isAtField(FieldNames.iFJFPGFAHGO)) {
              if (!input.trySkipNullValue()) {
                iFJFPGFAHGO = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1897528135:
          case 1306191356: {
            if (input.isAtField(FieldNames.stageId)) {
              if (!input.trySkipNullValue()) {
                stageId = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1678308365:
          case -487930366: {
            if (input.isAtField(FieldNames.battleId)) {
              if (!input.trySkipNullValue()) {
                battleId = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2005674429:
          case -349907515: {
            if (input.isAtField(FieldNames.clientResVersion)) {
              if (!input.trySkipNullValue()) {
                clientResVersion = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -424687558:
          case -269929473: {
            if (input.isAtField(FieldNames.costTime)) {
              if (!input.trySkipNullValue()) {
                costTime = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1799705532: {
            if (input.isAtField(FieldNames.nMHJOLNHMDK)) {
              if (!input.trySkipNullValue()) {
                nMHJOLNHMDK = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1608709293:
          case 378841046: {
            if (input.isAtField(FieldNames.endStatus)) {
              if (!input.trySkipNullValue()) {
                final BattleEndStatusOuterClass.BattleEndStatus value = input.readEnum(BattleEndStatusOuterClass.BattleEndStatus.converter());
                if (value != null) {
                  endStatus = value.getNumber();
                  bitField0_ |= 0x00000040;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1403671810: {
            if (input.isAtField(FieldNames.hCGIJFEIAMK)) {
              if (!input.trySkipNullValue()) {
                hCGIJFEIAMK = input.readBool();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1630288253: {
            if (input.isAtField(FieldNames.aLLDMMPDLDL)) {
              if (!input.trySkipNullValue()) {
                aLLDMMPDLDL = input.readBool();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -21431512: {
            if (input.isAtField(FieldNames.gBBBEBFHGOJ)) {
              if (!input.trySkipNullValue()) {
                gBBBEBFHGOJ = input.readBool();
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 114227: {
            if (input.isAtField(FieldNames.stt)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(stt);
                bitField0_ |= 0x00000400;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 716212751:
          case 397070951: {
            if (input.isAtField(FieldNames.turnSnapshotHash)) {
              if (!input.trySkipNullValue()) {
                input.readBytes(turnSnapshotHash);
                bitField0_ |= 0x00000800;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1220115046: {
            if (input.isAtField(FieldNames.hMOIDIKHBHM)) {
              if (!input.trySkipNullValue()) {
                input.readString(hMOIDIKHBHM);
                bitField0_ |= 0x00001000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1011328481:
          case -1268785092: {
            if (input.isAtField(FieldNames.opList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(opList);
                bitField0_ |= 0x00002000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 825714798: {
            if (input.isAtField(FieldNames.oFBINFHOHKN)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(oFBINFHOHKN);
                bitField0_ |= 0x00004000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PVEBattleResultCsReq clone() {
      return new PVEBattleResultCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PVEBattleResultCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PVEBattleResultCsReq(), data).checkInitialized();
    }

    public static PVEBattleResultCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PVEBattleResultCsReq(), input).checkInitialized();
    }

    public static PVEBattleResultCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PVEBattleResultCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating PVEBattleResultCsReq messages
     */
    public static MessageFactory<PVEBattleResultCsReq> getFactory() {
      return PVEBattleResultCsReqFactory.INSTANCE;
    }

    /**
     * Protobuf type {@code OFBINFHOHKNEntry}
     */
    public static final class OFBINFHOHKNEntry extends ProtoMessage<OFBINFHOHKNEntry> implements Cloneable {
      private static final long serialVersionUID = 0L;

      /**
       * <code>optional uint32 value = 2;</code>
       */
      private int value_;

      /**
       * <code>optional string key = 1;</code>
       */
      private final Utf8String key = Utf8String.newEmptyInstance();

      private OFBINFHOHKNEntry() {
      }

      /**
       * @return a new empty instance of {@code OFBINFHOHKNEntry}
       */
      public static OFBINFHOHKNEntry newInstance() {
        return new OFBINFHOHKNEntry();
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return whether the value_ field is set
       */
      public boolean hasValue() {
        return (bitField0_ & 0x00000001) != 0;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return this
       */
      public OFBINFHOHKNEntry clearValue() {
        bitField0_ &= ~0x00000001;
        value_ = 0;
        return this;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return the value_
       */
      public int getValue() {
        return value_;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @param value the value_ to set
       * @return this
       */
      public OFBINFHOHKNEntry setValue(final int value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return whether the key field is set
       */
      public boolean hasKey() {
        return (bitField0_ & 0x00000002) != 0;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return this
       */
      public OFBINFHOHKNEntry clearKey() {
        bitField0_ &= ~0x00000002;
        key.clear();
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return the key
       */
      public String getKey() {
        return key.getString();
      }

      /**
       * <code>optional string key = 1;</code>
       * @return internal {@code Utf8String} representation of key for reading
       */
      public Utf8String getKeyBytes() {
        return this.key;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return internal {@code Utf8String} representation of key for modifications
       */
      public Utf8String getMutableKeyBytes() {
        bitField0_ |= 0x00000002;
        return this.key;
      }

      /**
       * <code>optional string key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public OFBINFHOHKNEntry setKey(final CharSequence value) {
        bitField0_ |= 0x00000002;
        key.copyFrom(value);
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public OFBINFHOHKNEntry setKey(final Utf8String value) {
        bitField0_ |= 0x00000002;
        key.copyFrom(value);
        return this;
      }

      @Override
      public OFBINFHOHKNEntry copyFrom(final OFBINFHOHKNEntry other) {
        cachedSize = other.cachedSize;
        if ((bitField0_ | other.bitField0_) != 0) {
          bitField0_ = other.bitField0_;
          value_ = other.value_;
          key.copyFrom(other.key);
        }
        return this;
      }

      @Override
      public OFBINFHOHKNEntry mergeFrom(final OFBINFHOHKNEntry other) {
        if (other.isEmpty()) {
          return this;
        }
        cachedSize = -1;
        if (other.hasValue()) {
          setValue(other.value_);
        }
        if (other.hasKey()) {
          getMutableKeyBytes().copyFrom(other.key);
        }
        return this;
      }

      @Override
      public OFBINFHOHKNEntry clear() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        value_ = 0;
        key.clear();
        return this;
      }

      @Override
      public OFBINFHOHKNEntry clearQuick() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        key.clear();
        return this;
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (!(o instanceof OFBINFHOHKNEntry)) {
          return false;
        }
        OFBINFHOHKNEntry other = (OFBINFHOHKNEntry) o;
        return bitField0_ == other.bitField0_
          && (!hasValue() || value_ == other.value_)
          && (!hasKey() || key.equals(other.key));
      }

      @Override
      public void writeTo(final ProtoSink output) throws IOException {
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeRawByte((byte) 16);
          output.writeUInt32NoTag(value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeRawByte((byte) 10);
          output.writeStringNoTag(key);
        }
      }

      @Override
      protected int computeSerializedSize() {
        int size = 0;
        if ((bitField0_ & 0x00000001) != 0) {
          size += 1 + ProtoSink.computeUInt32SizeNoTag(value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          size += 1 + ProtoSink.computeStringSizeNoTag(key);
        }
        return size;
      }

      @Override
      @SuppressWarnings("fallthrough")
      public OFBINFHOHKNEntry mergeFrom(final ProtoSource input) throws IOException {
        // Enabled Fall-Through Optimization (QuickBuffers)
        int tag = input.readTag();
        while (true) {
          switch (tag) {
            case 16: {
              // value_
              value_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              tag = input.readTag();
              if (tag != 10) {
                break;
              }
            }
            case 10: {
              // key
              input.readString(key);
              bitField0_ |= 0x00000002;
              tag = input.readTag();
              if (tag != 0) {
                break;
              }
            }
            case 0: {
              return this;
            }
            default: {
              if (!input.skipField(tag)) {
                return this;
              }
              tag = input.readTag();
              break;
            }
          }
        }
      }

      @Override
      public void writeTo(final JsonSink output) throws IOException {
        output.beginObject();
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeUInt32(FieldNames.value_, value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeString(FieldNames.key, key);
        }
        output.endObject();
      }

      @Override
      public OFBINFHOHKNEntry mergeFrom(final JsonSource input) throws IOException {
        if (!input.beginObject()) {
          return this;
        }
        while (!input.isAtEnd()) {
          switch (input.readFieldHash()) {
            case 111972721: {
              if (input.isAtField(FieldNames.value_)) {
                if (!input.trySkipNullValue()) {
                  value_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            case 106079: {
              if (input.isAtField(FieldNames.key)) {
                if (!input.trySkipNullValue()) {
                  input.readString(key);
                  bitField0_ |= 0x00000002;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            default: {
              input.skipUnknownField();
              break;
            }
          }
        }
        input.endObject();
        return this;
      }

      @Override
      public OFBINFHOHKNEntry clone() {
        return new OFBINFHOHKNEntry().copyFrom(this);
      }

      @Override
      public boolean isEmpty() {
        return ((bitField0_) == 0);
      }

      public static OFBINFHOHKNEntry parseFrom(final byte[] data) throws
          InvalidProtocolBufferException {
        return ProtoMessage.mergeFrom(new OFBINFHOHKNEntry(), data).checkInitialized();
      }

      public static OFBINFHOHKNEntry parseFrom(final ProtoSource input) throws IOException {
        return ProtoMessage.mergeFrom(new OFBINFHOHKNEntry(), input).checkInitialized();
      }

      public static OFBINFHOHKNEntry parseFrom(final JsonSource input) throws IOException {
        return ProtoMessage.mergeFrom(new OFBINFHOHKNEntry(), input).checkInitialized();
      }

      /**
       * @return factory for creating OFBINFHOHKNEntry messages
       */
      public static MessageFactory<OFBINFHOHKNEntry> getFactory() {
        return OFBINFHOHKNEntryFactory.INSTANCE;
      }

      private enum OFBINFHOHKNEntryFactory implements MessageFactory<OFBINFHOHKNEntry> {
        INSTANCE;

        @Override
        public OFBINFHOHKNEntry create() {
          return OFBINFHOHKNEntry.newInstance();
        }
      }

      /**
       * Contains name constants used for serializing JSON
       */
      static class FieldNames {
        static final FieldName value_ = FieldName.forField("value");

        static final FieldName key = FieldName.forField("key");
      }
    }

    private enum PVEBattleResultCsReqFactory implements MessageFactory<PVEBattleResultCsReq> {
      INSTANCE;

      @Override
      public PVEBattleResultCsReq create() {
        return PVEBattleResultCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName iFJFPGFAHGO = FieldName.forField("IFJFPGFAHGO");

      static final FieldName stageId = FieldName.forField("stageId", "stage_id");

      static final FieldName battleId = FieldName.forField("battleId", "battle_id");

      static final FieldName clientResVersion = FieldName.forField("clientResVersion", "client_res_version");

      static final FieldName costTime = FieldName.forField("costTime", "cost_time");

      static final FieldName nMHJOLNHMDK = FieldName.forField("NMHJOLNHMDK");

      static final FieldName endStatus = FieldName.forField("endStatus", "end_status");

      static final FieldName hCGIJFEIAMK = FieldName.forField("HCGIJFEIAMK");

      static final FieldName aLLDMMPDLDL = FieldName.forField("ALLDMMPDLDL");

      static final FieldName gBBBEBFHGOJ = FieldName.forField("GBBBEBFHGOJ");

      static final FieldName stt = FieldName.forField("stt");

      static final FieldName turnSnapshotHash = FieldName.forField("turnSnapshotHash", "turn_snapshot_hash");

      static final FieldName hMOIDIKHBHM = FieldName.forField("HMOIDIKHBHM");

      static final FieldName opList = FieldName.forField("opList", "op_list");

      static final FieldName oFBINFHOHKN = FieldName.forField("OFBINFHOHKN");
    }
  }
}
