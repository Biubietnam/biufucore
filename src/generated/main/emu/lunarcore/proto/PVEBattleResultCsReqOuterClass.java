// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedByte;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

public final class PVEBattleResultCsReqOuterClass {
  /**
   * Protobuf type {@code PVEBattleResultCsReq}
   */
  public static final class PVEBattleResultCsReq extends ProtoMessage<PVEBattleResultCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 battle_id = 1;</code>
     */
    private int battleId;

    /**
     * <code>optional uint32 cost_time = 2;</code>
     */
    private int costTime;

    /**
     * <code>optional uint32 EJELPBGNINF = 6;</code>
     */
    private int eJELPBGNINF;

    /**
     * <code>optional uint32 stage_id = 7;</code>
     */
    private int stageId;

    /**
     * <code>optional uint32 FLJNOLCHBBC = 10;</code>
     */
    private int fLJNOLCHBBC;

    /**
     * <code>optional uint32 client_res_version = 13;</code>
     */
    private int clientResVersion;

    /**
     * <code>optional .BattleEndStatus end_status = 9;</code>
     */
    private int endStatus;

    /**
     * <code>optional bool NKFMMKOBDBC = 8;</code>
     */
    private boolean nKFMMKOBDBC;

    /**
     * <code>optional bool BNPJHJNLFDH = 11;</code>
     */
    private boolean bNPJHJNLFDH;

    /**
     * <code>optional bool KNFEGGDGFGC = 15;</code>
     */
    private boolean kNFEGGDGFGC;

    /**
     * <code>optional .BattleStatistics stt = 14;</code>
     */
    private final BattleStatisticsOuterClass.BattleStatistics stt = BattleStatisticsOuterClass.BattleStatistics.newInstance();

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     */
    private final RepeatedByte turnSnapshotHash = RepeatedByte.newEmptyInstance();

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     */
    private final Utf8String lFDDAGOMEGB = Utf8String.newEmptyInstance();

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     */
    private final RepeatedMessage<BattleOpOuterClass.BattleOp> opList = RepeatedMessage.newEmptyInstance(BattleOpOuterClass.BattleOp.getFactory());

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     */
    private final RepeatedMessage<LAOIGBICBAOEntry> lAOIGBICBAO = RepeatedMessage.newEmptyInstance(LAOIGBICBAOEntry.getFactory());

    private PVEBattleResultCsReq() {
    }

    /**
     * @return a new empty instance of {@code PVEBattleResultCsReq}
     */
    public static PVEBattleResultCsReq newInstance() {
      return new PVEBattleResultCsReq();
    }

    /**
     * <code>optional uint32 battle_id = 1;</code>
     * @return whether the battleId field is set
     */
    public boolean hasBattleId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 battle_id = 1;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearBattleId() {
      bitField0_ &= ~0x00000001;
      battleId = 0;
      return this;
    }

    /**
     * <code>optional uint32 battle_id = 1;</code>
     * @return the battleId
     */
    public int getBattleId() {
      return battleId;
    }

    /**
     * <code>optional uint32 battle_id = 1;</code>
     * @param value the battleId to set
     * @return this
     */
    public PVEBattleResultCsReq setBattleId(final int value) {
      bitField0_ |= 0x00000001;
      battleId = value;
      return this;
    }

    /**
     * <code>optional uint32 cost_time = 2;</code>
     * @return whether the costTime field is set
     */
    public boolean hasCostTime() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 cost_time = 2;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearCostTime() {
      bitField0_ &= ~0x00000002;
      costTime = 0;
      return this;
    }

    /**
     * <code>optional uint32 cost_time = 2;</code>
     * @return the costTime
     */
    public int getCostTime() {
      return costTime;
    }

    /**
     * <code>optional uint32 cost_time = 2;</code>
     * @param value the costTime to set
     * @return this
     */
    public PVEBattleResultCsReq setCostTime(final int value) {
      bitField0_ |= 0x00000002;
      costTime = value;
      return this;
    }

    /**
     * <code>optional uint32 EJELPBGNINF = 6;</code>
     * @return whether the eJELPBGNINF field is set
     */
    public boolean hasEJELPBGNINF() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 EJELPBGNINF = 6;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearEJELPBGNINF() {
      bitField0_ &= ~0x00000004;
      eJELPBGNINF = 0;
      return this;
    }

    /**
     * <code>optional uint32 EJELPBGNINF = 6;</code>
     * @return the eJELPBGNINF
     */
    public int getEJELPBGNINF() {
      return eJELPBGNINF;
    }

    /**
     * <code>optional uint32 EJELPBGNINF = 6;</code>
     * @param value the eJELPBGNINF to set
     * @return this
     */
    public PVEBattleResultCsReq setEJELPBGNINF(final int value) {
      bitField0_ |= 0x00000004;
      eJELPBGNINF = value;
      return this;
    }

    /**
     * <code>optional uint32 stage_id = 7;</code>
     * @return whether the stageId field is set
     */
    public boolean hasStageId() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 stage_id = 7;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearStageId() {
      bitField0_ &= ~0x00000008;
      stageId = 0;
      return this;
    }

    /**
     * <code>optional uint32 stage_id = 7;</code>
     * @return the stageId
     */
    public int getStageId() {
      return stageId;
    }

    /**
     * <code>optional uint32 stage_id = 7;</code>
     * @param value the stageId to set
     * @return this
     */
    public PVEBattleResultCsReq setStageId(final int value) {
      bitField0_ |= 0x00000008;
      stageId = value;
      return this;
    }

    /**
     * <code>optional uint32 FLJNOLCHBBC = 10;</code>
     * @return whether the fLJNOLCHBBC field is set
     */
    public boolean hasFLJNOLCHBBC() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 FLJNOLCHBBC = 10;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearFLJNOLCHBBC() {
      bitField0_ &= ~0x00000010;
      fLJNOLCHBBC = 0;
      return this;
    }

    /**
     * <code>optional uint32 FLJNOLCHBBC = 10;</code>
     * @return the fLJNOLCHBBC
     */
    public int getFLJNOLCHBBC() {
      return fLJNOLCHBBC;
    }

    /**
     * <code>optional uint32 FLJNOLCHBBC = 10;</code>
     * @param value the fLJNOLCHBBC to set
     * @return this
     */
    public PVEBattleResultCsReq setFLJNOLCHBBC(final int value) {
      bitField0_ |= 0x00000010;
      fLJNOLCHBBC = value;
      return this;
    }

    /**
     * <code>optional uint32 client_res_version = 13;</code>
     * @return whether the clientResVersion field is set
     */
    public boolean hasClientResVersion() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional uint32 client_res_version = 13;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearClientResVersion() {
      bitField0_ &= ~0x00000020;
      clientResVersion = 0;
      return this;
    }

    /**
     * <code>optional uint32 client_res_version = 13;</code>
     * @return the clientResVersion
     */
    public int getClientResVersion() {
      return clientResVersion;
    }

    /**
     * <code>optional uint32 client_res_version = 13;</code>
     * @param value the clientResVersion to set
     * @return this
     */
    public PVEBattleResultCsReq setClientResVersion(final int value) {
      bitField0_ |= 0x00000020;
      clientResVersion = value;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 9;</code>
     * @return whether the endStatus field is set
     */
    public boolean hasEndStatus() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 9;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearEndStatus() {
      bitField0_ &= ~0x00000040;
      endStatus = 0;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 9;</code>
     * @return the endStatus
     */
    public BattleEndStatusOuterClass.BattleEndStatus getEndStatus() {
      return BattleEndStatusOuterClass.BattleEndStatus.forNumber(endStatus);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PVEBattleResultCsReq#getEndStatus()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getEndStatusValue() {
      return endStatus;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link BattleEndStatusOuterClass.BattleEndStatus}. Setting an invalid value
     * can cause {@link PVEBattleResultCsReq#getEndStatus()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PVEBattleResultCsReq setEndStatusValue(final int value) {
      bitField0_ |= 0x00000040;
      endStatus = value;
      return this;
    }

    /**
     * <code>optional .BattleEndStatus end_status = 9;</code>
     * @param value the endStatus to set
     * @return this
     */
    public PVEBattleResultCsReq setEndStatus(
        final BattleEndStatusOuterClass.BattleEndStatus value) {
      bitField0_ |= 0x00000040;
      endStatus = value.getNumber();
      return this;
    }

    /**
     * <code>optional bool NKFMMKOBDBC = 8;</code>
     * @return whether the nKFMMKOBDBC field is set
     */
    public boolean hasNKFMMKOBDBC() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional bool NKFMMKOBDBC = 8;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearNKFMMKOBDBC() {
      bitField0_ &= ~0x00000080;
      nKFMMKOBDBC = false;
      return this;
    }

    /**
     * <code>optional bool NKFMMKOBDBC = 8;</code>
     * @return the nKFMMKOBDBC
     */
    public boolean getNKFMMKOBDBC() {
      return nKFMMKOBDBC;
    }

    /**
     * <code>optional bool NKFMMKOBDBC = 8;</code>
     * @param value the nKFMMKOBDBC to set
     * @return this
     */
    public PVEBattleResultCsReq setNKFMMKOBDBC(final boolean value) {
      bitField0_ |= 0x00000080;
      nKFMMKOBDBC = value;
      return this;
    }

    /**
     * <code>optional bool BNPJHJNLFDH = 11;</code>
     * @return whether the bNPJHJNLFDH field is set
     */
    public boolean hasBNPJHJNLFDH() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional bool BNPJHJNLFDH = 11;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearBNPJHJNLFDH() {
      bitField0_ &= ~0x00000100;
      bNPJHJNLFDH = false;
      return this;
    }

    /**
     * <code>optional bool BNPJHJNLFDH = 11;</code>
     * @return the bNPJHJNLFDH
     */
    public boolean getBNPJHJNLFDH() {
      return bNPJHJNLFDH;
    }

    /**
     * <code>optional bool BNPJHJNLFDH = 11;</code>
     * @param value the bNPJHJNLFDH to set
     * @return this
     */
    public PVEBattleResultCsReq setBNPJHJNLFDH(final boolean value) {
      bitField0_ |= 0x00000100;
      bNPJHJNLFDH = value;
      return this;
    }

    /**
     * <code>optional bool KNFEGGDGFGC = 15;</code>
     * @return whether the kNFEGGDGFGC field is set
     */
    public boolean hasKNFEGGDGFGC() {
      return (bitField0_ & 0x00000200) != 0;
    }

    /**
     * <code>optional bool KNFEGGDGFGC = 15;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearKNFEGGDGFGC() {
      bitField0_ &= ~0x00000200;
      kNFEGGDGFGC = false;
      return this;
    }

    /**
     * <code>optional bool KNFEGGDGFGC = 15;</code>
     * @return the kNFEGGDGFGC
     */
    public boolean getKNFEGGDGFGC() {
      return kNFEGGDGFGC;
    }

    /**
     * <code>optional bool KNFEGGDGFGC = 15;</code>
     * @param value the kNFEGGDGFGC to set
     * @return this
     */
    public PVEBattleResultCsReq setKNFEGGDGFGC(final boolean value) {
      bitField0_ |= 0x00000200;
      kNFEGGDGFGC = value;
      return this;
    }

    /**
     * <code>optional .BattleStatistics stt = 14;</code>
     * @return whether the stt field is set
     */
    public boolean hasStt() {
      return (bitField0_ & 0x00000400) != 0;
    }

    /**
     * <code>optional .BattleStatistics stt = 14;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearStt() {
      bitField0_ &= ~0x00000400;
      stt.clear();
      return this;
    }

    /**
     * <code>optional .BattleStatistics stt = 14;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableStt()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public BattleStatisticsOuterClass.BattleStatistics getStt() {
      return stt;
    }

    /**
     * <code>optional .BattleStatistics stt = 14;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public BattleStatisticsOuterClass.BattleStatistics getMutableStt() {
      bitField0_ |= 0x00000400;
      return stt;
    }

    /**
     * <code>optional .BattleStatistics stt = 14;</code>
     * @param value the stt to set
     * @return this
     */
    public PVEBattleResultCsReq setStt(final BattleStatisticsOuterClass.BattleStatistics value) {
      bitField0_ |= 0x00000400;
      stt.copyFrom(value);
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     * @return whether the turnSnapshotHash field is set
     */
    public boolean hasTurnSnapshotHash() {
      return (bitField0_ & 0x00000800) != 0;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearTurnSnapshotHash() {
      bitField0_ &= ~0x00000800;
      turnSnapshotHash.clear();
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableTurnSnapshotHash()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedByte getTurnSnapshotHash() {
      return turnSnapshotHash;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedByte getMutableTurnSnapshotHash() {
      bitField0_ |= 0x00000800;
      return turnSnapshotHash;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     * @param value the turnSnapshotHash to add
     * @return this
     */
    public PVEBattleResultCsReq addTurnSnapshotHash(final byte value) {
      bitField0_ |= 0x00000800;
      turnSnapshotHash.add(value);
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     * @param values the turnSnapshotHash to add
     * @return this
     */
    public PVEBattleResultCsReq addAllTurnSnapshotHash(final byte... values) {
      bitField0_ |= 0x00000800;
      turnSnapshotHash.addAll(values);
      return this;
    }

    /**
     * <code>optional bytes turn_snapshot_hash = 12;</code>
     * @param values the turnSnapshotHash to set
     * @return this
     */
    public PVEBattleResultCsReq setTurnSnapshotHash(final byte... values) {
      bitField0_ |= 0x00000800;
      turnSnapshotHash.copyFrom(values);
      return this;
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @return whether the lFDDAGOMEGB field is set
     */
    public boolean hasLFDDAGOMEGB() {
      return (bitField0_ & 0x00001000) != 0;
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearLFDDAGOMEGB() {
      bitField0_ &= ~0x00001000;
      lFDDAGOMEGB.clear();
      return this;
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @return the lFDDAGOMEGB
     */
    public String getLFDDAGOMEGB() {
      return lFDDAGOMEGB.getString();
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @return internal {@code Utf8String} representation of lFDDAGOMEGB for reading
     */
    public Utf8String getLFDDAGOMEGBBytes() {
      return this.lFDDAGOMEGB;
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @return internal {@code Utf8String} representation of lFDDAGOMEGB for modifications
     */
    public Utf8String getMutableLFDDAGOMEGBBytes() {
      bitField0_ |= 0x00001000;
      return this.lFDDAGOMEGB;
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @param value the lFDDAGOMEGB to set
     * @return this
     */
    public PVEBattleResultCsReq setLFDDAGOMEGB(final CharSequence value) {
      bitField0_ |= 0x00001000;
      lFDDAGOMEGB.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string LFDDAGOMEGB = 5;</code>
     * @param value the lFDDAGOMEGB to set
     * @return this
     */
    public PVEBattleResultCsReq setLFDDAGOMEGB(final Utf8String value) {
      bitField0_ |= 0x00001000;
      lFDDAGOMEGB.copyFrom(value);
      return this;
    }

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     * @return whether the opList field is set
     */
    public boolean hasOpList() {
      return (bitField0_ & 0x00002000) != 0;
    }

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearOpList() {
      bitField0_ &= ~0x00002000;
      opList.clear();
      return this;
    }

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableOpList()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<BattleOpOuterClass.BattleOp> getOpList() {
      return opList;
    }

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<BattleOpOuterClass.BattleOp> getMutableOpList() {
      bitField0_ |= 0x00002000;
      return opList;
    }

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     * @param value the opList to add
     * @return this
     */
    public PVEBattleResultCsReq addOpList(final BattleOpOuterClass.BattleOp value) {
      bitField0_ |= 0x00002000;
      opList.add(value);
      return this;
    }

    /**
     * <code>repeated .BattleOp op_list = 3;</code>
     * @param values the opList to add
     * @return this
     */
    public PVEBattleResultCsReq addAllOpList(final BattleOpOuterClass.BattleOp... values) {
      bitField0_ |= 0x00002000;
      opList.addAll(values);
      return this;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     * @return whether the lAOIGBICBAO field is set
     */
    public boolean hasLAOIGBICBAO() {
      return (bitField0_ & 0x00004000) != 0;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     * @return this
     */
    public PVEBattleResultCsReq clearLAOIGBICBAO() {
      bitField0_ &= ~0x00004000;
      lAOIGBICBAO.clear();
      return this;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableLAOIGBICBAO()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<LAOIGBICBAOEntry> getLAOIGBICBAO() {
      return lAOIGBICBAO;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<LAOIGBICBAOEntry> getMutableLAOIGBICBAO() {
      bitField0_ |= 0x00004000;
      return lAOIGBICBAO;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     * @param value the lAOIGBICBAO to add
     * @return this
     */
    public PVEBattleResultCsReq addLAOIGBICBAO(final LAOIGBICBAOEntry value) {
      bitField0_ |= 0x00004000;
      lAOIGBICBAO.add(value);
      return this;
    }

    /**
     * <code>repeated .PVEBattleResultCsReq.LAOIGBICBAOEntry LAOIGBICBAO = 4;</code>
     * @param values the lAOIGBICBAO to add
     * @return this
     */
    public PVEBattleResultCsReq addAllLAOIGBICBAO(final LAOIGBICBAOEntry... values) {
      bitField0_ |= 0x00004000;
      lAOIGBICBAO.addAll(values);
      return this;
    }

    @Override
    public PVEBattleResultCsReq copyFrom(final PVEBattleResultCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        battleId = other.battleId;
        costTime = other.costTime;
        eJELPBGNINF = other.eJELPBGNINF;
        stageId = other.stageId;
        fLJNOLCHBBC = other.fLJNOLCHBBC;
        clientResVersion = other.clientResVersion;
        endStatus = other.endStatus;
        nKFMMKOBDBC = other.nKFMMKOBDBC;
        bNPJHJNLFDH = other.bNPJHJNLFDH;
        kNFEGGDGFGC = other.kNFEGGDGFGC;
        stt.copyFrom(other.stt);
        turnSnapshotHash.copyFrom(other.turnSnapshotHash);
        lFDDAGOMEGB.copyFrom(other.lFDDAGOMEGB);
        opList.copyFrom(other.opList);
        lAOIGBICBAO.copyFrom(other.lAOIGBICBAO);
      }
      return this;
    }

    @Override
    public PVEBattleResultCsReq mergeFrom(final PVEBattleResultCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasBattleId()) {
        setBattleId(other.battleId);
      }
      if (other.hasCostTime()) {
        setCostTime(other.costTime);
      }
      if (other.hasEJELPBGNINF()) {
        setEJELPBGNINF(other.eJELPBGNINF);
      }
      if (other.hasStageId()) {
        setStageId(other.stageId);
      }
      if (other.hasFLJNOLCHBBC()) {
        setFLJNOLCHBBC(other.fLJNOLCHBBC);
      }
      if (other.hasClientResVersion()) {
        setClientResVersion(other.clientResVersion);
      }
      if (other.hasEndStatus()) {
        setEndStatusValue(other.endStatus);
      }
      if (other.hasNKFMMKOBDBC()) {
        setNKFMMKOBDBC(other.nKFMMKOBDBC);
      }
      if (other.hasBNPJHJNLFDH()) {
        setBNPJHJNLFDH(other.bNPJHJNLFDH);
      }
      if (other.hasKNFEGGDGFGC()) {
        setKNFEGGDGFGC(other.kNFEGGDGFGC);
      }
      if (other.hasStt()) {
        getMutableStt().mergeFrom(other.stt);
      }
      if (other.hasTurnSnapshotHash()) {
        getMutableTurnSnapshotHash().copyFrom(other.turnSnapshotHash);
      }
      if (other.hasLFDDAGOMEGB()) {
        getMutableLFDDAGOMEGBBytes().copyFrom(other.lFDDAGOMEGB);
      }
      if (other.hasOpList()) {
        getMutableOpList().addAll(other.opList);
      }
      if (other.hasLAOIGBICBAO()) {
        getMutableLAOIGBICBAO().addAll(other.lAOIGBICBAO);
      }
      return this;
    }

    @Override
    public PVEBattleResultCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      battleId = 0;
      costTime = 0;
      eJELPBGNINF = 0;
      stageId = 0;
      fLJNOLCHBBC = 0;
      clientResVersion = 0;
      endStatus = 0;
      nKFMMKOBDBC = false;
      bNPJHJNLFDH = false;
      kNFEGGDGFGC = false;
      stt.clear();
      turnSnapshotHash.clear();
      lFDDAGOMEGB.clear();
      opList.clear();
      lAOIGBICBAO.clear();
      return this;
    }

    @Override
    public PVEBattleResultCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      stt.clearQuick();
      turnSnapshotHash.clear();
      lFDDAGOMEGB.clear();
      opList.clearQuick();
      lAOIGBICBAO.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PVEBattleResultCsReq)) {
        return false;
      }
      PVEBattleResultCsReq other = (PVEBattleResultCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasBattleId() || battleId == other.battleId)
        && (!hasCostTime() || costTime == other.costTime)
        && (!hasEJELPBGNINF() || eJELPBGNINF == other.eJELPBGNINF)
        && (!hasStageId() || stageId == other.stageId)
        && (!hasFLJNOLCHBBC() || fLJNOLCHBBC == other.fLJNOLCHBBC)
        && (!hasClientResVersion() || clientResVersion == other.clientResVersion)
        && (!hasEndStatus() || endStatus == other.endStatus)
        && (!hasNKFMMKOBDBC() || nKFMMKOBDBC == other.nKFMMKOBDBC)
        && (!hasBNPJHJNLFDH() || bNPJHJNLFDH == other.bNPJHJNLFDH)
        && (!hasKNFEGGDGFGC() || kNFEGGDGFGC == other.kNFEGGDGFGC)
        && (!hasStt() || stt.equals(other.stt))
        && (!hasTurnSnapshotHash() || turnSnapshotHash.equals(other.turnSnapshotHash))
        && (!hasLFDDAGOMEGB() || lFDDAGOMEGB.equals(other.lFDDAGOMEGB))
        && (!hasOpList() || opList.equals(other.opList))
        && (!hasLAOIGBICBAO() || lAOIGBICBAO.equals(other.lAOIGBICBAO));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(battleId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(costTime);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(eJELPBGNINF);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 56);
        output.writeUInt32NoTag(stageId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(fLJNOLCHBBC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 72);
        output.writeEnumNoTag(endStatus);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 64);
        output.writeBoolNoTag(nKFMMKOBDBC);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 88);
        output.writeBoolNoTag(bNPJHJNLFDH);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeRawByte((byte) 120);
        output.writeBoolNoTag(kNFEGGDGFGC);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeRawByte((byte) 114);
        output.writeMessageNoTag(stt);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeRawByte((byte) 98);
        output.writeBytesNoTag(turnSnapshotHash);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeRawByte((byte) 42);
        output.writeStringNoTag(lFDDAGOMEGB);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        for (int i = 0; i < opList.length(); i++) {
          output.writeRawByte((byte) 26);
          output.writeMessageNoTag(opList.get(i));
        }
      }
      if ((bitField0_ & 0x00004000) != 0) {
        for (int i = 0; i < lAOIGBICBAO.length(); i++) {
          output.writeRawByte((byte) 34);
          output.writeMessageNoTag(lAOIGBICBAO.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(battleId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(costTime);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(eJELPBGNINF);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(stageId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(fLJNOLCHBBC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(clientResVersion);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(endStatus);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000200) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000400) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(stt);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        size += 1 + ProtoSink.computeBytesSizeNoTag(turnSnapshotHash);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(lFDDAGOMEGB);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        size += (1 * opList.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(opList);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        size += (1 * lAOIGBICBAO.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(lAOIGBICBAO);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PVEBattleResultCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // battleId
            battleId = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
          case 16: {
            // costTime
            costTime = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // eJELPBGNINF
            eJELPBGNINF = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // stageId
            stageId = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // fLJNOLCHBBC
            fLJNOLCHBBC = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // clientResVersion
            clientResVersion = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // endStatus
            final int value = input.readInt32();
            if (BattleEndStatusOuterClass.BattleEndStatus.forNumber(value) != null) {
              endStatus = value;
              bitField0_ |= 0x00000040;
            }
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // nKFMMKOBDBC
            nKFMMKOBDBC = input.readBool();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // bNPJHJNLFDH
            bNPJHJNLFDH = input.readBool();
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // kNFEGGDGFGC
            kNFEGGDGFGC = input.readBool();
            bitField0_ |= 0x00000200;
            tag = input.readTag();
            if (tag != 114) {
              break;
            }
          }
          case 114: {
            // stt
            input.readMessage(stt);
            bitField0_ |= 0x00000400;
            tag = input.readTag();
            if (tag != 98) {
              break;
            }
          }
          case 98: {
            // turnSnapshotHash
            input.readBytes(turnSnapshotHash);
            bitField0_ |= 0x00000800;
            tag = input.readTag();
            if (tag != 42) {
              break;
            }
          }
          case 42: {
            // lFDDAGOMEGB
            input.readString(lFDDAGOMEGB);
            bitField0_ |= 0x00001000;
            tag = input.readTag();
            if (tag != 26) {
              break;
            }
          }
          case 26: {
            // opList
            tag = input.readRepeatedMessage(opList, tag);
            bitField0_ |= 0x00002000;
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // lAOIGBICBAO
            tag = input.readRepeatedMessage(lAOIGBICBAO, tag);
            bitField0_ |= 0x00004000;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.battleId, battleId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.costTime, costTime);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.eJELPBGNINF, eJELPBGNINF);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.stageId, stageId);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.fLJNOLCHBBC, fLJNOLCHBBC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.clientResVersion, clientResVersion);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeEnum(FieldNames.endStatus, endStatus, BattleEndStatusOuterClass.BattleEndStatus.converter());
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeBool(FieldNames.nKFMMKOBDBC, nKFMMKOBDBC);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeBool(FieldNames.bNPJHJNLFDH, bNPJHJNLFDH);
      }
      if ((bitField0_ & 0x00000200) != 0) {
        output.writeBool(FieldNames.kNFEGGDGFGC, kNFEGGDGFGC);
      }
      if ((bitField0_ & 0x00000400) != 0) {
        output.writeMessage(FieldNames.stt, stt);
      }
      if ((bitField0_ & 0x00000800) != 0) {
        output.writeBytes(FieldNames.turnSnapshotHash, turnSnapshotHash);
      }
      if ((bitField0_ & 0x00001000) != 0) {
        output.writeString(FieldNames.lFDDAGOMEGB, lFDDAGOMEGB);
      }
      if ((bitField0_ & 0x00002000) != 0) {
        output.writeRepeatedMessage(FieldNames.opList, opList);
      }
      if ((bitField0_ & 0x00004000) != 0) {
        output.writeRepeatedMessage(FieldNames.lAOIGBICBAO, lAOIGBICBAO);
      }
      output.endObject();
    }

    @Override
    public PVEBattleResultCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1678308365:
          case -487930366: {
            if (input.isAtField(FieldNames.battleId)) {
              if (!input.trySkipNullValue()) {
                battleId = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -424687558:
          case -269929473: {
            if (input.isAtField(FieldNames.costTime)) {
              if (!input.trySkipNullValue()) {
                costTime = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2000056004: {
            if (input.isAtField(FieldNames.eJELPBGNINF)) {
              if (!input.trySkipNullValue()) {
                eJELPBGNINF = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1897528135:
          case 1306191356: {
            if (input.isAtField(FieldNames.stageId)) {
              if (!input.trySkipNullValue()) {
                stageId = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1756843529: {
            if (input.isAtField(FieldNames.fLJNOLCHBBC)) {
              if (!input.trySkipNullValue()) {
                fLJNOLCHBBC = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2005674429:
          case -349907515: {
            if (input.isAtField(FieldNames.clientResVersion)) {
              if (!input.trySkipNullValue()) {
                clientResVersion = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1608709293:
          case 378841046: {
            if (input.isAtField(FieldNames.endStatus)) {
              if (!input.trySkipNullValue()) {
                final BattleEndStatusOuterClass.BattleEndStatus value = input.readEnum(BattleEndStatusOuterClass.BattleEndStatus.converter());
                if (value != null) {
                  endStatus = value.getNumber();
                  bitField0_ |= 0x00000040;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 643237424: {
            if (input.isAtField(FieldNames.nKFMMKOBDBC)) {
              if (!input.trySkipNullValue()) {
                nKFMMKOBDBC = input.readBool();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1857666300: {
            if (input.isAtField(FieldNames.bNPJHJNLFDH)) {
              if (!input.trySkipNullValue()) {
                bNPJHJNLFDH = input.readBool();
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1062576195: {
            if (input.isAtField(FieldNames.kNFEGGDGFGC)) {
              if (!input.trySkipNullValue()) {
                kNFEGGDGFGC = input.readBool();
                bitField0_ |= 0x00000200;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 114227: {
            if (input.isAtField(FieldNames.stt)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(stt);
                bitField0_ |= 0x00000400;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 716212751:
          case 397070951: {
            if (input.isAtField(FieldNames.turnSnapshotHash)) {
              if (!input.trySkipNullValue()) {
                input.readBytes(turnSnapshotHash);
                bitField0_ |= 0x00000800;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -435039198: {
            if (input.isAtField(FieldNames.lFDDAGOMEGB)) {
              if (!input.trySkipNullValue()) {
                input.readString(lFDDAGOMEGB);
                bitField0_ |= 0x00001000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1011328481:
          case -1268785092: {
            if (input.isAtField(FieldNames.opList)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(opList);
                bitField0_ |= 0x00002000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1149417556: {
            if (input.isAtField(FieldNames.lAOIGBICBAO)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(lAOIGBICBAO);
                bitField0_ |= 0x00004000;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PVEBattleResultCsReq clone() {
      return new PVEBattleResultCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PVEBattleResultCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PVEBattleResultCsReq(), data).checkInitialized();
    }

    public static PVEBattleResultCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PVEBattleResultCsReq(), input).checkInitialized();
    }

    public static PVEBattleResultCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PVEBattleResultCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating PVEBattleResultCsReq messages
     */
    public static MessageFactory<PVEBattleResultCsReq> getFactory() {
      return PVEBattleResultCsReqFactory.INSTANCE;
    }

    /**
     * Protobuf type {@code LAOIGBICBAOEntry}
     */
    public static final class LAOIGBICBAOEntry extends ProtoMessage<LAOIGBICBAOEntry> implements Cloneable {
      private static final long serialVersionUID = 0L;

      /**
       * <code>optional uint32 value = 2;</code>
       */
      private int value_;

      /**
       * <code>optional string key = 1;</code>
       */
      private final Utf8String key = Utf8String.newEmptyInstance();

      private LAOIGBICBAOEntry() {
      }

      /**
       * @return a new empty instance of {@code LAOIGBICBAOEntry}
       */
      public static LAOIGBICBAOEntry newInstance() {
        return new LAOIGBICBAOEntry();
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return whether the value_ field is set
       */
      public boolean hasValue() {
        return (bitField0_ & 0x00000001) != 0;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return this
       */
      public LAOIGBICBAOEntry clearValue() {
        bitField0_ &= ~0x00000001;
        value_ = 0;
        return this;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return the value_
       */
      public int getValue() {
        return value_;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @param value the value_ to set
       * @return this
       */
      public LAOIGBICBAOEntry setValue(final int value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return whether the key field is set
       */
      public boolean hasKey() {
        return (bitField0_ & 0x00000002) != 0;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return this
       */
      public LAOIGBICBAOEntry clearKey() {
        bitField0_ &= ~0x00000002;
        key.clear();
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return the key
       */
      public String getKey() {
        return key.getString();
      }

      /**
       * <code>optional string key = 1;</code>
       * @return internal {@code Utf8String} representation of key for reading
       */
      public Utf8String getKeyBytes() {
        return this.key;
      }

      /**
       * <code>optional string key = 1;</code>
       * @return internal {@code Utf8String} representation of key for modifications
       */
      public Utf8String getMutableKeyBytes() {
        bitField0_ |= 0x00000002;
        return this.key;
      }

      /**
       * <code>optional string key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public LAOIGBICBAOEntry setKey(final CharSequence value) {
        bitField0_ |= 0x00000002;
        key.copyFrom(value);
        return this;
      }

      /**
       * <code>optional string key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public LAOIGBICBAOEntry setKey(final Utf8String value) {
        bitField0_ |= 0x00000002;
        key.copyFrom(value);
        return this;
      }

      @Override
      public LAOIGBICBAOEntry copyFrom(final LAOIGBICBAOEntry other) {
        cachedSize = other.cachedSize;
        if ((bitField0_ | other.bitField0_) != 0) {
          bitField0_ = other.bitField0_;
          value_ = other.value_;
          key.copyFrom(other.key);
        }
        return this;
      }

      @Override
      public LAOIGBICBAOEntry mergeFrom(final LAOIGBICBAOEntry other) {
        if (other.isEmpty()) {
          return this;
        }
        cachedSize = -1;
        if (other.hasValue()) {
          setValue(other.value_);
        }
        if (other.hasKey()) {
          getMutableKeyBytes().copyFrom(other.key);
        }
        return this;
      }

      @Override
      public LAOIGBICBAOEntry clear() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        value_ = 0;
        key.clear();
        return this;
      }

      @Override
      public LAOIGBICBAOEntry clearQuick() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        key.clear();
        return this;
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (!(o instanceof LAOIGBICBAOEntry)) {
          return false;
        }
        LAOIGBICBAOEntry other = (LAOIGBICBAOEntry) o;
        return bitField0_ == other.bitField0_
          && (!hasValue() || value_ == other.value_)
          && (!hasKey() || key.equals(other.key));
      }

      @Override
      public void writeTo(final ProtoSink output) throws IOException {
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeRawByte((byte) 16);
          output.writeUInt32NoTag(value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeRawByte((byte) 10);
          output.writeStringNoTag(key);
        }
      }

      @Override
      protected int computeSerializedSize() {
        int size = 0;
        if ((bitField0_ & 0x00000001) != 0) {
          size += 1 + ProtoSink.computeUInt32SizeNoTag(value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          size += 1 + ProtoSink.computeStringSizeNoTag(key);
        }
        return size;
      }

      @Override
      @SuppressWarnings("fallthrough")
      public LAOIGBICBAOEntry mergeFrom(final ProtoSource input) throws IOException {
        // Enabled Fall-Through Optimization (QuickBuffers)
        int tag = input.readTag();
        while (true) {
          switch (tag) {
            case 16: {
              // value_
              value_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              tag = input.readTag();
              if (tag != 10) {
                break;
              }
            }
            case 10: {
              // key
              input.readString(key);
              bitField0_ |= 0x00000002;
              tag = input.readTag();
              if (tag != 0) {
                break;
              }
            }
            case 0: {
              return this;
            }
            default: {
              if (!input.skipField(tag)) {
                return this;
              }
              tag = input.readTag();
              break;
            }
          }
        }
      }

      @Override
      public void writeTo(final JsonSink output) throws IOException {
        output.beginObject();
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeUInt32(FieldNames.value_, value_);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeString(FieldNames.key, key);
        }
        output.endObject();
      }

      @Override
      public LAOIGBICBAOEntry mergeFrom(final JsonSource input) throws IOException {
        if (!input.beginObject()) {
          return this;
        }
        while (!input.isAtEnd()) {
          switch (input.readFieldHash()) {
            case 111972721: {
              if (input.isAtField(FieldNames.value_)) {
                if (!input.trySkipNullValue()) {
                  value_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            case 106079: {
              if (input.isAtField(FieldNames.key)) {
                if (!input.trySkipNullValue()) {
                  input.readString(key);
                  bitField0_ |= 0x00000002;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            default: {
              input.skipUnknownField();
              break;
            }
          }
        }
        input.endObject();
        return this;
      }

      @Override
      public LAOIGBICBAOEntry clone() {
        return new LAOIGBICBAOEntry().copyFrom(this);
      }

      @Override
      public boolean isEmpty() {
        return ((bitField0_) == 0);
      }

      public static LAOIGBICBAOEntry parseFrom(final byte[] data) throws
          InvalidProtocolBufferException {
        return ProtoMessage.mergeFrom(new LAOIGBICBAOEntry(), data).checkInitialized();
      }

      public static LAOIGBICBAOEntry parseFrom(final ProtoSource input) throws IOException {
        return ProtoMessage.mergeFrom(new LAOIGBICBAOEntry(), input).checkInitialized();
      }

      public static LAOIGBICBAOEntry parseFrom(final JsonSource input) throws IOException {
        return ProtoMessage.mergeFrom(new LAOIGBICBAOEntry(), input).checkInitialized();
      }

      /**
       * @return factory for creating LAOIGBICBAOEntry messages
       */
      public static MessageFactory<LAOIGBICBAOEntry> getFactory() {
        return LAOIGBICBAOEntryFactory.INSTANCE;
      }

      private enum LAOIGBICBAOEntryFactory implements MessageFactory<LAOIGBICBAOEntry> {
        INSTANCE;

        @Override
        public LAOIGBICBAOEntry create() {
          return LAOIGBICBAOEntry.newInstance();
        }
      }

      /**
       * Contains name constants used for serializing JSON
       */
      static class FieldNames {
        static final FieldName value_ = FieldName.forField("value");

        static final FieldName key = FieldName.forField("key");
      }
    }

    private enum PVEBattleResultCsReqFactory implements MessageFactory<PVEBattleResultCsReq> {
      INSTANCE;

      @Override
      public PVEBattleResultCsReq create() {
        return PVEBattleResultCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName battleId = FieldName.forField("battleId", "battle_id");

      static final FieldName costTime = FieldName.forField("costTime", "cost_time");

      static final FieldName eJELPBGNINF = FieldName.forField("EJELPBGNINF");

      static final FieldName stageId = FieldName.forField("stageId", "stage_id");

      static final FieldName fLJNOLCHBBC = FieldName.forField("FLJNOLCHBBC");

      static final FieldName clientResVersion = FieldName.forField("clientResVersion", "client_res_version");

      static final FieldName endStatus = FieldName.forField("endStatus", "end_status");

      static final FieldName nKFMMKOBDBC = FieldName.forField("NKFMMKOBDBC");

      static final FieldName bNPJHJNLFDH = FieldName.forField("BNPJHJNLFDH");

      static final FieldName kNFEGGDGFGC = FieldName.forField("KNFEGGDGFGC");

      static final FieldName stt = FieldName.forField("stt");

      static final FieldName turnSnapshotHash = FieldName.forField("turnSnapshotHash", "turn_snapshot_hash");

      static final FieldName lFDDAGOMEGB = FieldName.forField("LFDDAGOMEGB");

      static final FieldName opList = FieldName.forField("opList", "op_list");

      static final FieldName lAOIGBICBAO = FieldName.forField("LAOIGBICBAO");
    }
  }
}
