// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.Utf8String;

public final class TextJoinInfoOuterClass {
  /**
   * Protobuf type {@code TextJoinInfo}
   */
  public static final class TextJoinInfo extends ProtoMessage<TextJoinInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_id = 4;</code>
     */
    private int textItemId;

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_config_id = 11;</code>
     */
    private int textItemConfigId;

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     */
    private final Utf8String eMGNFCLJILL = Utf8String.newEmptyInstance();

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     */
    private final Utf8String fJFBPABNBBL = Utf8String.newEmptyInstance();

    private TextJoinInfo() {
    }

    /**
     * @return a new empty instance of {@code TextJoinInfo}
     */
    public static TextJoinInfo newInstance() {
      return new TextJoinInfo();
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_id = 4;</code>
     * @return whether the textItemId field is set
     */
    public boolean hasTextItemId() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_id = 4;</code>
     * @return this
     */
    public TextJoinInfo clearTextItemId() {
      bitField0_ &= ~0x00000001;
      textItemId = 0;
      return this;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_id = 4;</code>
     * @return the textItemId
     */
    public int getTextItemId() {
      return textItemId;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_id = 4;</code>
     * @param value the textItemId to set
     * @return this
     */
    public TextJoinInfo setTextItemId(final int value) {
      bitField0_ |= 0x00000001;
      textItemId = value;
      return this;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_config_id = 11;</code>
     * @return whether the textItemConfigId field is set
     */
    public boolean hasTextItemConfigId() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_config_id = 11;</code>
     * @return this
     */
    public TextJoinInfo clearTextItemConfigId() {
      bitField0_ &= ~0x00000002;
      textItemConfigId = 0;
      return this;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_config_id = 11;</code>
     * @return the textItemConfigId
     */
    public int getTextItemConfigId() {
      return textItemConfigId;
    }

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional uint32 text_item_config_id = 11;</code>
     * @param value the textItemConfigId to set
     * @return this
     */
    public TextJoinInfo setTextItemConfigId(final int value) {
      bitField0_ |= 0x00000002;
      textItemConfigId = value;
      return this;
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @return whether the eMGNFCLJILL field is set
     */
    public boolean hasEMGNFCLJILL() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @return this
     */
    public TextJoinInfo clearEMGNFCLJILL() {
      bitField0_ &= ~0x00000004;
      eMGNFCLJILL.clear();
      return this;
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @return the eMGNFCLJILL
     */
    public String getEMGNFCLJILL() {
      return eMGNFCLJILL.getString();
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @return internal {@code Utf8String} representation of eMGNFCLJILL for reading
     */
    public Utf8String getEMGNFCLJILLBytes() {
      return this.eMGNFCLJILL;
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @return internal {@code Utf8String} representation of eMGNFCLJILL for modifications
     */
    public Utf8String getMutableEMGNFCLJILLBytes() {
      bitField0_ |= 0x00000004;
      return this.eMGNFCLJILL;
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @param value the eMGNFCLJILL to set
     * @return this
     */
    public TextJoinInfo setEMGNFCLJILL(final CharSequence value) {
      bitField0_ |= 0x00000004;
      eMGNFCLJILL.copyFrom(value);
      return this;
    }

    /**
     * <pre>
     * uint32 OJHDOLDHJJG = 4;
     * </pre>
     *
     * <code>optional string EMGNFCLJILL = 7;</code>
     * @param value the eMGNFCLJILL to set
     * @return this
     */
    public TextJoinInfo setEMGNFCLJILL(final Utf8String value) {
      bitField0_ |= 0x00000004;
      eMGNFCLJILL.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @return whether the fJFBPABNBBL field is set
     */
    public boolean hasFJFBPABNBBL() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @return this
     */
    public TextJoinInfo clearFJFBPABNBBL() {
      bitField0_ &= ~0x00000008;
      fJFBPABNBBL.clear();
      return this;
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @return the fJFBPABNBBL
     */
    public String getFJFBPABNBBL() {
      return fJFBPABNBBL.getString();
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @return internal {@code Utf8String} representation of fJFBPABNBBL for reading
     */
    public Utf8String getFJFBPABNBBLBytes() {
      return this.fJFBPABNBBL;
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @return internal {@code Utf8String} representation of fJFBPABNBBL for modifications
     */
    public Utf8String getMutableFJFBPABNBBLBytes() {
      bitField0_ |= 0x00000008;
      return this.fJFBPABNBBL;
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @param value the fJFBPABNBBL to set
     * @return this
     */
    public TextJoinInfo setFJFBPABNBBL(final CharSequence value) {
      bitField0_ |= 0x00000008;
      fJFBPABNBBL.copyFrom(value);
      return this;
    }

    /**
     * <code>optional string FJFBPABNBBL = 15;</code>
     * @param value the fJFBPABNBBL to set
     * @return this
     */
    public TextJoinInfo setFJFBPABNBBL(final Utf8String value) {
      bitField0_ |= 0x00000008;
      fJFBPABNBBL.copyFrom(value);
      return this;
    }

    @Override
    public TextJoinInfo copyFrom(final TextJoinInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        textItemId = other.textItemId;
        textItemConfigId = other.textItemConfigId;
        eMGNFCLJILL.copyFrom(other.eMGNFCLJILL);
        fJFBPABNBBL.copyFrom(other.fJFBPABNBBL);
      }
      return this;
    }

    @Override
    public TextJoinInfo mergeFrom(final TextJoinInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasTextItemId()) {
        setTextItemId(other.textItemId);
      }
      if (other.hasTextItemConfigId()) {
        setTextItemConfigId(other.textItemConfigId);
      }
      if (other.hasEMGNFCLJILL()) {
        getMutableEMGNFCLJILLBytes().copyFrom(other.eMGNFCLJILL);
      }
      if (other.hasFJFBPABNBBL()) {
        getMutableFJFBPABNBBLBytes().copyFrom(other.fJFBPABNBBL);
      }
      return this;
    }

    @Override
    public TextJoinInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      textItemId = 0;
      textItemConfigId = 0;
      eMGNFCLJILL.clear();
      fJFBPABNBBL.clear();
      return this;
    }

    @Override
    public TextJoinInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      eMGNFCLJILL.clear();
      fJFBPABNBBL.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof TextJoinInfo)) {
        return false;
      }
      TextJoinInfo other = (TextJoinInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasTextItemId() || textItemId == other.textItemId)
        && (!hasTextItemConfigId() || textItemConfigId == other.textItemConfigId)
        && (!hasEMGNFCLJILL() || eMGNFCLJILL.equals(other.eMGNFCLJILL))
        && (!hasFJFBPABNBBL() || fJFBPABNBBL.equals(other.fJFBPABNBBL));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 32);
        output.writeUInt32NoTag(textItemId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(textItemConfigId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 58);
        output.writeStringNoTag(eMGNFCLJILL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 122);
        output.writeStringNoTag(fJFBPABNBBL);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(textItemId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(textItemConfigId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(eMGNFCLJILL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeStringSizeNoTag(fJFBPABNBBL);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public TextJoinInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 32: {
            // textItemId
            textItemId = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // textItemConfigId
            textItemConfigId = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // eMGNFCLJILL
            input.readString(eMGNFCLJILL);
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 122) {
              break;
            }
          }
          case 122: {
            // fJFBPABNBBL
            input.readString(fJFBPABNBBL);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.textItemId, textItemId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.textItemConfigId, textItemConfigId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeString(FieldNames.eMGNFCLJILL, eMGNFCLJILL);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeString(FieldNames.fJFBPABNBBL, fJFBPABNBBL);
      }
      output.endObject();
    }

    @Override
    public TextJoinInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1565189915:
          case -153409355: {
            if (input.isAtField(FieldNames.textItemId)) {
              if (!input.trySkipNullValue()) {
                textItemId = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1448403459:
          case -1174236578: {
            if (input.isAtField(FieldNames.textItemConfigId)) {
              if (!input.trySkipNullValue()) {
                textItemConfigId = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1324107839: {
            if (input.isAtField(FieldNames.eMGNFCLJILL)) {
              if (!input.trySkipNullValue()) {
                input.readString(eMGNFCLJILL);
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1590982545: {
            if (input.isAtField(FieldNames.fJFBPABNBBL)) {
              if (!input.trySkipNullValue()) {
                input.readString(fJFBPABNBBL);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public TextJoinInfo clone() {
      return new TextJoinInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static TextJoinInfo parseFrom(final byte[] data) throws InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new TextJoinInfo(), data).checkInitialized();
    }

    public static TextJoinInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new TextJoinInfo(), input).checkInitialized();
    }

    public static TextJoinInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new TextJoinInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating TextJoinInfo messages
     */
    public static MessageFactory<TextJoinInfo> getFactory() {
      return TextJoinInfoFactory.INSTANCE;
    }

    private enum TextJoinInfoFactory implements MessageFactory<TextJoinInfo> {
      INSTANCE;

      @Override
      public TextJoinInfo create() {
        return TextJoinInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName textItemId = FieldName.forField("textItemId", "text_item_id");

      static final FieldName textItemConfigId = FieldName.forField("textItemConfigId", "text_item_config_id");

      static final FieldName eMGNFCLJILL = FieldName.forField("EMGNFCLJILL");

      static final FieldName fJFBPABNBBL = FieldName.forField("FJFBPABNBBL");
    }
  }
}
